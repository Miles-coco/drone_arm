ARM GAS  C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"bsp_can.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Bsp/bsp_can.c"
  20              		.section	.text.can_bsp_init,"ax",%progbits
  21              		.align	1
  22              		.global	can_bsp_init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	can_bsp_init:
  28              	.LFB134:
   1:Bsp/bsp_can.c **** #include "bsp_can.h"
   2:Bsp/bsp_can.c **** 
   3:Bsp/bsp_can.c **** void can_bsp_init(void)
   4:Bsp/bsp_can.c **** { 
  29              		.loc 1 4 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              	.LCFI1:
  40              		.cfi_def_cfa_register 7
   5:Bsp/bsp_can.c **** 	can_filter_init();
  41              		.loc 1 5 2
  42 0004 FFF7FEFF 		bl	can_filter_init
   6:Bsp/bsp_can.c **** 	HAL_CAN_Start(&hcan1);   
  43              		.loc 1 6 2
  44 0008 0748     		ldr	r0, .L2
  45 000a FFF7FEFF 		bl	HAL_CAN_Start
   7:Bsp/bsp_can.c **** 	HAL_CAN_Start(&hcan2);   
  46              		.loc 1 7 2
  47 000e 0748     		ldr	r0, .L2+4
  48 0010 FFF7FEFF 		bl	HAL_CAN_Start
   8:Bsp/bsp_can.c **** 	HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);	
  49              		.loc 1 8 2
  50 0014 0221     		movs	r1, #2
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s 			page 2


  51 0016 0448     		ldr	r0, .L2
  52 0018 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
   9:Bsp/bsp_can.c **** 	HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO0_MSG_PENDING);
  53              		.loc 1 9 2
  54 001c 0221     		movs	r1, #2
  55 001e 0348     		ldr	r0, .L2+4
  56 0020 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
  10:Bsp/bsp_can.c **** }
  57              		.loc 1 10 1
  58 0024 00BF     		nop
  59 0026 80BD     		pop	{r7, pc}
  60              	.L3:
  61              		.align	2
  62              	.L2:
  63 0028 00000000 		.word	hcan1
  64 002c 00000000 		.word	hcan2
  65              		.cfi_endproc
  66              	.LFE134:
  68              		.section	.text.can_filter_init,"ax",%progbits
  69              		.align	1
  70              		.global	can_filter_init
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  75              	can_filter_init:
  76              	.LFB135:
  11:Bsp/bsp_can.c **** 
  12:Bsp/bsp_can.c **** void can_filter_init(void)
  13:Bsp/bsp_can.c **** {
  77              		.loc 1 13 1
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 40
  80              		@ frame_needed = 1, uses_anonymous_args = 0
  81 0000 80B5     		push	{r7, lr}
  82              	.LCFI2:
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 7, -8
  85              		.cfi_offset 14, -4
  86 0002 8AB0     		sub	sp, sp, #40
  87              	.LCFI3:
  88              		.cfi_def_cfa_offset 48
  89 0004 00AF     		add	r7, sp, #0
  90              	.LCFI4:
  91              		.cfi_def_cfa_register 7
  14:Bsp/bsp_can.c **** 	CAN_FilterTypeDef can_filter_st;
  15:Bsp/bsp_can.c **** 	can_filter_st.FilterActivation = ENABLE;
  92              		.loc 1 15 33
  93 0006 0123     		movs	r3, #1
  94 0008 3B62     		str	r3, [r7, #32]
  16:Bsp/bsp_can.c **** 	can_filter_st.FilterMode = CAN_FILTERMODE_IDMASK;
  95              		.loc 1 16 27
  96 000a 0023     		movs	r3, #0
  97 000c BB61     		str	r3, [r7, #24]
  17:Bsp/bsp_can.c **** 	can_filter_st.FilterScale = CAN_FILTERSCALE_32BIT;
  98              		.loc 1 17 28
  99 000e 0123     		movs	r3, #1
 100 0010 FB61     		str	r3, [r7, #28]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s 			page 3


  18:Bsp/bsp_can.c **** 	can_filter_st.FilterIdHigh = 0x0000;
 101              		.loc 1 18 29
 102 0012 0023     		movs	r3, #0
 103 0014 3B60     		str	r3, [r7]
  19:Bsp/bsp_can.c **** 	can_filter_st.FilterIdLow = 0x0000;
 104              		.loc 1 19 28
 105 0016 0023     		movs	r3, #0
 106 0018 7B60     		str	r3, [r7, #4]
  20:Bsp/bsp_can.c **** 	can_filter_st.FilterMaskIdHigh = 0x0000;
 107              		.loc 1 20 33
 108 001a 0023     		movs	r3, #0
 109 001c BB60     		str	r3, [r7, #8]
  21:Bsp/bsp_can.c **** 	can_filter_st.FilterMaskIdLow = 0x0000;
 110              		.loc 1 21 32
 111 001e 0023     		movs	r3, #0
 112 0020 FB60     		str	r3, [r7, #12]
  22:Bsp/bsp_can.c **** 	can_filter_st.FilterBank = 0;
 113              		.loc 1 22 27
 114 0022 0023     		movs	r3, #0
 115 0024 7B61     		str	r3, [r7, #20]
  23:Bsp/bsp_can.c **** 	can_filter_st.FilterFIFOAssignment = CAN_RX_FIFO0;
 116              		.loc 1 23 37
 117 0026 0023     		movs	r3, #0
 118 0028 3B61     		str	r3, [r7, #16]
  24:Bsp/bsp_can.c **** 	HAL_CAN_ConfigFilter(&hcan1, &can_filter_st);
 119              		.loc 1 24 2
 120 002a 3B46     		mov	r3, r7
 121 002c 1946     		mov	r1, r3
 122 002e 0F48     		ldr	r0, .L5
 123 0030 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
  25:Bsp/bsp_can.c **** 	HAL_CAN_Start(&hcan1);
 124              		.loc 1 25 2
 125 0034 0D48     		ldr	r0, .L5
 126 0036 FFF7FEFF 		bl	HAL_CAN_Start
  26:Bsp/bsp_can.c **** 	HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);
 127              		.loc 1 26 2
 128 003a 0221     		movs	r1, #2
 129 003c 0B48     		ldr	r0, .L5
 130 003e FFF7FEFF 		bl	HAL_CAN_ActivateNotification
  27:Bsp/bsp_can.c **** 
  28:Bsp/bsp_can.c **** 
  29:Bsp/bsp_can.c **** 	can_filter_st.SlaveStartFilterBank = 14;
 131              		.loc 1 29 37
 132 0042 0E23     		movs	r3, #14
 133 0044 7B62     		str	r3, [r7, #36]
  30:Bsp/bsp_can.c **** 	can_filter_st.FilterBank = 14;
 134              		.loc 1 30 27
 135 0046 0E23     		movs	r3, #14
 136 0048 7B61     		str	r3, [r7, #20]
  31:Bsp/bsp_can.c **** 	HAL_CAN_ConfigFilter(&hcan2, &can_filter_st);
 137              		.loc 1 31 2
 138 004a 3B46     		mov	r3, r7
 139 004c 1946     		mov	r1, r3
 140 004e 0848     		ldr	r0, .L5+4
 141 0050 FFF7FEFF 		bl	HAL_CAN_ConfigFilter
  32:Bsp/bsp_can.c **** 	HAL_CAN_Start(&hcan2);
 142              		.loc 1 32 2
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s 			page 4


 143 0054 0648     		ldr	r0, .L5+4
 144 0056 FFF7FEFF 		bl	HAL_CAN_Start
  33:Bsp/bsp_can.c **** 	HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO0_MSG_PENDING);
 145              		.loc 1 33 2
 146 005a 0221     		movs	r1, #2
 147 005c 0448     		ldr	r0, .L5+4
 148 005e FFF7FEFF 		bl	HAL_CAN_ActivateNotification
  34:Bsp/bsp_can.c **** }
 149              		.loc 1 34 1
 150 0062 00BF     		nop
 151 0064 2837     		adds	r7, r7, #40
 152              	.LCFI5:
 153              		.cfi_def_cfa_offset 8
 154 0066 BD46     		mov	sp, r7
 155              	.LCFI6:
 156              		.cfi_def_cfa_register 13
 157              		@ sp needed
 158 0068 80BD     		pop	{r7, pc}
 159              	.L6:
 160 006a 00BF     		.align	2
 161              	.L5:
 162 006c 00000000 		.word	hcan1
 163 0070 00000000 		.word	hcan2
 164              		.cfi_endproc
 165              	.LFE135:
 167              		.section	.text.canx_bsp_send_data,"ax",%progbits
 168              		.align	1
 169              		.global	canx_bsp_send_data
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 174              	canx_bsp_send_data:
 175              	.LFB136:
  35:Bsp/bsp_can.c **** 
  36:Bsp/bsp_can.c **** uint8_t canx_bsp_send_data(CAN_HandleTypeDef *hcan, uint16_t id, uint8_t *data, uint32_t len)
  37:Bsp/bsp_can.c **** {	
 176              		.loc 1 37 1
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 40
 179              		@ frame_needed = 1, uses_anonymous_args = 0
 180 0000 80B5     		push	{r7, lr}
 181              	.LCFI7:
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 7, -8
 184              		.cfi_offset 14, -4
 185 0002 8AB0     		sub	sp, sp, #40
 186              	.LCFI8:
 187              		.cfi_def_cfa_offset 48
 188 0004 00AF     		add	r7, sp, #0
 189              	.LCFI9:
 190              		.cfi_def_cfa_register 7
 191 0006 F860     		str	r0, [r7, #12]
 192 0008 7A60     		str	r2, [r7, #4]
 193 000a 3B60     		str	r3, [r7]
 194 000c 0B46     		mov	r3, r1	@ movhi
 195 000e 7B81     		strh	r3, [r7, #10]	@ movhi
  38:Bsp/bsp_can.c **** 	CAN_TxHeaderTypeDef	tx_header;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s 			page 5


  39:Bsp/bsp_can.c **** 	
  40:Bsp/bsp_can.c **** 	tx_header.StdId = id;
 196              		.loc 1 40 18
 197 0010 7B89     		ldrh	r3, [r7, #10]
 198 0012 3B61     		str	r3, [r7, #16]
  41:Bsp/bsp_can.c **** 	tx_header.ExtId = 0;
 199              		.loc 1 41 18
 200 0014 0023     		movs	r3, #0
 201 0016 7B61     		str	r3, [r7, #20]
  42:Bsp/bsp_can.c **** 	tx_header.IDE   = 0;
 202              		.loc 1 42 18
 203 0018 0023     		movs	r3, #0
 204 001a BB61     		str	r3, [r7, #24]
  43:Bsp/bsp_can.c **** 	tx_header.RTR   = 0;
 205              		.loc 1 43 18
 206 001c 0023     		movs	r3, #0
 207 001e FB61     		str	r3, [r7, #28]
  44:Bsp/bsp_can.c **** 	tx_header.DLC   = len;
 208              		.loc 1 44 18
 209 0020 3B68     		ldr	r3, [r7]
 210 0022 3B62     		str	r3, [r7, #32]
  45:Bsp/bsp_can.c ****   /*�ҵ��յķ������䣬�����ݷ��ͳ�ȥ*/
  46:Bsp/bsp_can.c **** 	if(HAL_CAN_AddTxMessage(hcan, &tx_header, data, (uint32_t*)CAN_TX_MAILBOX0) != HAL_OK) {
 211              		.loc 1 46 5
 212 0024 07F11001 		add	r1, r7, #16
 213 0028 0123     		movs	r3, #1
 214 002a 7A68     		ldr	r2, [r7, #4]
 215 002c F868     		ldr	r0, [r7, #12]
 216 002e FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 217 0032 0346     		mov	r3, r0
 218              		.loc 1 46 4 discriminator 1
 219 0034 002B     		cmp	r3, #0
 220 0036 10D0     		beq	.L8
  47:Bsp/bsp_can.c **** 		if(HAL_CAN_AddTxMessage(hcan, &tx_header, data, (uint32_t*)CAN_TX_MAILBOX1) != HAL_OK) {
 221              		.loc 1 47 6
 222 0038 07F11001 		add	r1, r7, #16
 223 003c 0223     		movs	r3, #2
 224 003e 7A68     		ldr	r2, [r7, #4]
 225 0040 F868     		ldr	r0, [r7, #12]
 226 0042 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 227 0046 0346     		mov	r3, r0
 228              		.loc 1 47 5 discriminator 1
 229 0048 002B     		cmp	r3, #0
 230 004a 06D0     		beq	.L8
  48:Bsp/bsp_can.c **** 			HAL_CAN_AddTxMessage(hcan, &tx_header, data, (uint32_t*)CAN_TX_MAILBOX2);
 231              		.loc 1 48 4
 232 004c 07F11001 		add	r1, r7, #16
 233 0050 0423     		movs	r3, #4
 234 0052 7A68     		ldr	r2, [r7, #4]
 235 0054 F868     		ldr	r0, [r7, #12]
 236 0056 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 237              	.L8:
  49:Bsp/bsp_can.c ****     }
  50:Bsp/bsp_can.c ****   }
  51:Bsp/bsp_can.c ****   return 0;
 238              		.loc 1 51 10
 239 005a 0023     		movs	r3, #0
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s 			page 6


  52:Bsp/bsp_can.c **** }
 240              		.loc 1 52 1
 241 005c 1846     		mov	r0, r3
 242 005e 2837     		adds	r7, r7, #40
 243              	.LCFI10:
 244              		.cfi_def_cfa_offset 8
 245 0060 BD46     		mov	sp, r7
 246              	.LCFI11:
 247              		.cfi_def_cfa_register 13
 248              		@ sp needed
 249 0062 80BD     		pop	{r7, pc}
 250              		.cfi_endproc
 251              	.LFE136:
 253              		.section	.text.canx_bsp_receive,"ax",%progbits
 254              		.align	1
 255              		.global	canx_bsp_receive
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 260              	canx_bsp_receive:
 261              	.LFB137:
  53:Bsp/bsp_can.c **** 
  54:Bsp/bsp_can.c **** uint8_t canx_bsp_receive(hcan_t *hcan, uint16_t *rec_id, uint8_t *buf)
  55:Bsp/bsp_can.c **** {	
 262              		.loc 1 55 1
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 48
 265              		@ frame_needed = 1, uses_anonymous_args = 0
 266 0000 80B5     		push	{r7, lr}
 267              	.LCFI12:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 7, -8
 270              		.cfi_offset 14, -4
 271 0002 8CB0     		sub	sp, sp, #48
 272              	.LCFI13:
 273              		.cfi_def_cfa_offset 56
 274 0004 00AF     		add	r7, sp, #0
 275              	.LCFI14:
 276              		.cfi_def_cfa_register 7
 277 0006 F860     		str	r0, [r7, #12]
 278 0008 B960     		str	r1, [r7, #8]
 279 000a 7A60     		str	r2, [r7, #4]
  56:Bsp/bsp_can.c **** 	CAN_RxHeaderTypeDef rx_header;
  57:Bsp/bsp_can.c ****   if (HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &rx_header, buf) == HAL_OK)
 280              		.loc 1 57 7
 281 000c 07F11402 		add	r2, r7, #20
 282 0010 7B68     		ldr	r3, [r7, #4]
 283 0012 0021     		movs	r1, #0
 284 0014 F868     		ldr	r0, [r7, #12]
 285 0016 FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 286 001a 0346     		mov	r3, r0
 287              		.loc 1 57 6 discriminator 1
 288 001c 002B     		cmp	r3, #0
 289 001e 06D1     		bne	.L11
  58:Bsp/bsp_can.c **** 	{
  59:Bsp/bsp_can.c **** 		*rec_id = rx_header.StdId;
 290              		.loc 1 59 22
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s 			page 7


 291 0020 7B69     		ldr	r3, [r7, #20]
 292              		.loc 1 59 11
 293 0022 9AB2     		uxth	r2, r3
 294 0024 BB68     		ldr	r3, [r7, #8]
 295 0026 1A80     		strh	r2, [r3]	@ movhi
  60:Bsp/bsp_can.c **** 		return rx_header.DLC; //�������ݳ���
 296              		.loc 1 60 19
 297 0028 7B6A     		ldr	r3, [r7, #36]
 298 002a DBB2     		uxtb	r3, r3
 299 002c 00E0     		b	.L13
 300              	.L11:
  61:Bsp/bsp_can.c **** 	}
  62:Bsp/bsp_can.c **** 	else
  63:Bsp/bsp_can.c **** 		return 0;
 301              		.loc 1 63 10
 302 002e 0023     		movs	r3, #0
 303              	.L13:
  64:Bsp/bsp_can.c **** }
 304              		.loc 1 64 1
 305 0030 1846     		mov	r0, r3
 306 0032 3037     		adds	r7, r7, #48
 307              	.LCFI15:
 308              		.cfi_def_cfa_offset 8
 309 0034 BD46     		mov	sp, r7
 310              	.LCFI16:
 311              		.cfi_def_cfa_register 13
 312              		@ sp needed
 313 0036 80BD     		pop	{r7, pc}
 314              		.cfi_endproc
 315              	.LFE137:
 317              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 318              		.align	1
 319              		.global	HAL_CAN_RxFifo0MsgPendingCallback
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 324              	HAL_CAN_RxFifo0MsgPendingCallback:
 325              	.LFB138:
  65:Bsp/bsp_can.c **** 
  66:Bsp/bsp_can.c **** void HAL_CAN_RxFifo0MsgPendingCallback(hcan_t *hcan)
  67:Bsp/bsp_can.c **** {
 326              		.loc 1 67 1
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 8
 329              		@ frame_needed = 1, uses_anonymous_args = 0
 330 0000 80B5     		push	{r7, lr}
 331              	.LCFI17:
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 7, -8
 334              		.cfi_offset 14, -4
 335 0002 82B0     		sub	sp, sp, #8
 336              	.LCFI18:
 337              		.cfi_def_cfa_offset 16
 338 0004 00AF     		add	r7, sp, #0
 339              	.LCFI19:
 340              		.cfi_def_cfa_register 7
 341 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s 			page 8


  68:Bsp/bsp_can.c **** 	if(hcan == &hcan1) {
 342              		.loc 1 68 4
 343 0008 7B68     		ldr	r3, [r7, #4]
 344 000a 074A     		ldr	r2, .L18
 345 000c 9342     		cmp	r3, r2
 346 000e 01D1     		bne	.L15
  69:Bsp/bsp_can.c **** 		can1_rx_callback();
 347              		.loc 1 69 3
 348 0010 FFF7FEFF 		bl	can1_rx_callback
 349              	.L15:
  70:Bsp/bsp_can.c **** 	}
  71:Bsp/bsp_can.c **** 	if(hcan == &hcan2) {
 350              		.loc 1 71 4
 351 0014 7B68     		ldr	r3, [r7, #4]
 352 0016 054A     		ldr	r2, .L18+4
 353 0018 9342     		cmp	r3, r2
 354 001a 01D1     		bne	.L17
  72:Bsp/bsp_can.c **** 		can2_rx_callback();
 355              		.loc 1 72 3
 356 001c FFF7FEFF 		bl	can2_rx_callback
 357              	.L17:
  73:Bsp/bsp_can.c **** 	}
  74:Bsp/bsp_can.c **** }
 358              		.loc 1 74 1
 359 0020 00BF     		nop
 360 0022 0837     		adds	r7, r7, #8
 361              	.LCFI20:
 362              		.cfi_def_cfa_offset 8
 363 0024 BD46     		mov	sp, r7
 364              	.LCFI21:
 365              		.cfi_def_cfa_register 13
 366              		@ sp needed
 367 0026 80BD     		pop	{r7, pc}
 368              	.L19:
 369              		.align	2
 370              	.L18:
 371 0028 00000000 		.word	hcan1
 372 002c 00000000 		.word	hcan2
 373              		.cfi_endproc
 374              	.LFE138:
 376              		.section	.text.can1_rx_callback,"ax",%progbits
 377              		.align	1
 378              		.weak	can1_rx_callback
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 383              	can1_rx_callback:
 384              	.LFB139:
  75:Bsp/bsp_can.c **** 
  76:Bsp/bsp_can.c **** __weak void can1_rx_callback(void)
  77:Bsp/bsp_can.c **** {
 385              		.loc 1 77 1
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 1, uses_anonymous_args = 0
 389              		@ link register save eliminated.
 390 0000 80B4     		push	{r7}
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s 			page 9


 391              	.LCFI22:
 392              		.cfi_def_cfa_offset 4
 393              		.cfi_offset 7, -4
 394 0002 00AF     		add	r7, sp, #0
 395              	.LCFI23:
 396              		.cfi_def_cfa_register 7
  78:Bsp/bsp_can.c **** 
  79:Bsp/bsp_can.c **** }
 397              		.loc 1 79 1
 398 0004 00BF     		nop
 399 0006 BD46     		mov	sp, r7
 400              	.LCFI24:
 401              		.cfi_def_cfa_register 13
 402              		@ sp needed
 403 0008 5DF8047B 		ldr	r7, [sp], #4
 404              	.LCFI25:
 405              		.cfi_restore 7
 406              		.cfi_def_cfa_offset 0
 407 000c 7047     		bx	lr
 408              		.cfi_endproc
 409              	.LFE139:
 411              		.section	.text.can2_rx_callback,"ax",%progbits
 412              		.align	1
 413              		.weak	can2_rx_callback
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 418              	can2_rx_callback:
 419              	.LFB140:
  80:Bsp/bsp_can.c **** 
  81:Bsp/bsp_can.c **** __weak void can2_rx_callback(void)
  82:Bsp/bsp_can.c **** {
 420              		.loc 1 82 1
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 1, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 425 0000 80B4     		push	{r7}
 426              	.LCFI26:
 427              		.cfi_def_cfa_offset 4
 428              		.cfi_offset 7, -4
 429 0002 00AF     		add	r7, sp, #0
 430              	.LCFI27:
 431              		.cfi_def_cfa_register 7
  83:Bsp/bsp_can.c **** 
  84:Bsp/bsp_can.c **** }
 432              		.loc 1 84 1
 433 0004 00BF     		nop
 434 0006 BD46     		mov	sp, r7
 435              	.LCFI28:
 436              		.cfi_def_cfa_register 13
 437              		@ sp needed
 438 0008 5DF8047B 		ldr	r7, [sp], #4
 439              	.LCFI29:
 440              		.cfi_restore 7
 441              		.cfi_def_cfa_offset 0
 442 000c 7047     		bx	lr
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s 			page 10


 443              		.cfi_endproc
 444              	.LFE140:
 446              		.text
 447              	.Letext0:
 448              		.file 2 "D:/enviroment/msys2/mingw64/arm-none-eabi/include/machine/_default_types.h"
 449              		.file 3 "D:/enviroment/msys2/mingw64/arm-none-eabi/include/sys/_stdint.h"
 450              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 451              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 452              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 453              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 454              		.file 8 "Core/Inc/can.h"
 455              		.file 9 "Bsp/bsp_can.h"
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 bsp_can.c
C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s:21     .text.can_bsp_init:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s:27     .text.can_bsp_init:00000000 can_bsp_init
C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s:75     .text.can_filter_init:00000000 can_filter_init
C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s:63     .text.can_bsp_init:00000028 $d
C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s:69     .text.can_filter_init:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s:162    .text.can_filter_init:0000006c $d
C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s:168    .text.canx_bsp_send_data:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s:174    .text.canx_bsp_send_data:00000000 canx_bsp_send_data
C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s:254    .text.canx_bsp_receive:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s:260    .text.canx_bsp_receive:00000000 canx_bsp_receive
C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s:318    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s:324    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s:383    .text.can1_rx_callback:00000000 can1_rx_callback
C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s:418    .text.can2_rx_callback:00000000 can2_rx_callback
C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s:371    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000028 $d
C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s:377    .text.can1_rx_callback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s:412    .text.can2_rx_callback:00000000 $t
                           .group:00000000 wm4.0.3e68c699c40fadf7e6c1e499de837233
                           .group:00000000 wm4.stm32f4xx_hal_conf.h.25.a9a6e27d8b41172b5af7d7631d763ee0
                           .group:00000000 wm4.stm32f4xx.h.38.63e3ea23bd63a94457417730025259b6
                           .group:00000000 wm4.stm32f446xx.h.34.dd43cebd7192f96bce7a5ff975201274
                           .group:00000000 wm4._newlib_version.h.4.0eb654b64686e2bd29646258853f6c22
                           .group:00000000 wm4.features.h.33.d554620bb17bd3b714c3fb5c268772bc
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_version.h.32.0ac195c83bb4537824e6ad1c47474b79
                           .group:00000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:00000000 wm4.cmsis_gcc.h.26.498d0ad17a45fc9ef20fdc01caf02259
                           .group:00000000 wm4.core_cm4.h.174.62be9b4588d49bed18171771001331df
                           .group:00000000 wm4.mpu_armv7.h.32.83326921a797fa9d6f70449916b4b839
                           .group:00000000 wm4.stm32f446xx.h.917.13927c85cbbf4787955bc4173c54fa12
                           .group:00000000 wm4.stm32f4xx.h.195.a4b8bf80f37cc96981498656ffe5f588
                           .group:00000000 wm4.stm32_hal_legacy.h.22.8b7d303dc46a0b7ac6d3edf19ce2608d
                           .group:00000000 wm4.stddef.h.39.0dc9006b34572d4d9cae4c8b422c4971
                           .group:00000000 wm4.stm32f4xx_hal_def.h.58.3cb484e92e5ccf2e55312a4714e27917
                           .group:00000000 wm4.stm32f4xx_hal_rcc_ex.h.20.9b6e314009d4800dd71c0ec1c264a1ea
                           .group:00000000 wm4.stm32f4xx_hal_rcc.h.106.0887cf5d985ae88e345b0aed0ceb4729
                           .group:00000000 wm4.stm32f4xx_hal_gpio.h.21.22da6a14b6049d6ac156577be74df1d7
                           .group:00000000 wm4.stm32f4xx_hal_gpio_ex.h.21.33ea7ea24fd170b1d3dce3d23330c9d3
                           .group:00000000 wm4.stm32f4xx_hal_gpio.h.254.d7e07832f748fe8bcb575db0b8373592
                           .group:00000000 wm4.stm32f4xx_hal_exti.h.21.4fc7f37c3cc97fb821b368ede79414b6
                           .group:00000000 wm4.stm32f4xx_hal_dma.h.21.8e4b1421c914345c23be719e5e528779
                           .group:00000000 wm4.stm32f4xx_hal_dma.h.720.ac2d7eef74792e4026acc4d2923c5da4
                           .group:00000000 wm4.stm32f4xx_hal_cortex.h.20.03673e4f79386680bf73ba399c19306b
                           .group:00000000 wm4.stm32f4xx_hal_can.h.21.4b16c8dedf31ba328482231f811a7e65
                           .group:00000000 wm4.stm32f4xx_hal_flash.h.20.2f1e0d1b7010b3a81a7980aaf712e7e5
                           .group:00000000 wm4.stm32f4xx_hal_flash_ex.h.20.77cb3e5c0f1e426426a4cbc884a1eed8
                           .group:00000000 wm4.stm32f4xx_hal_flash.h.361.23bc19b9eac79b0956d913651841ede8
                           .group:00000000 wm4.stm32f4xx_hal_pwr.h.20.1905a0783a9c83adefd7df0c4b501e40
                           .group:00000000 wm4.stm32f4xx_hal_pwr_ex.h.20.9786dbd699c850465fa7b77273740267
                           .group:00000000 wm4.stm32f4xx_hal_pwr.h.338.debc0a4a62ba54688e63ab53dd99c4ea
                           .group:00000000 wm4.stm32f4xx_hal_uart.h.21.ba8e24dd05c77faac3f3d48472e636ba
                           .group:00000000 wm4.stm32f4xx_hal.h.71.02372bc31d47d29d3f67fbfe1429649e
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccRcDrU9.s 			page 12



UNDEFINED SYMBOLS
HAL_CAN_Start
HAL_CAN_ActivateNotification
hcan1
hcan2
HAL_CAN_ConfigFilter
HAL_CAN_AddTxMessage
HAL_CAN_GetRxMessage
