ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_uart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
  20              		.section	.text.HAL_UART_Init,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_UART_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_UART_Init:
  28              	.LFB134:
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * Copyright (c) 2016 STMicroelectronics.
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * All rights reserved.
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * in the root directory of this software component.
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the UART TX/RX pins as alternate function pull-up.
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx stream.
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx stream.
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ##### Callback registration #####
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ==================================
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use Function HAL_UART_RegisterCallback() to register a user callback.
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Function HAL_UART_RegisterCallback() allows to register following callbacks:
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and a pointer to the user callback function.
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use function HAL_UART_UnRegisterCallback() to reset a callback to the default
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     weak (surcharged) function.
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and the Callback ID.
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function allows to reset following callbacks:
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     respectively HAL_UART_RegisterRxEventCallback() , HAL_UART_UnRegisterRxEventCallback().
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     By default, after the HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     examples HAL_UART_TxCpltCallback(), HAL_UART_RxHalfCpltCallback().
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the HAL_UART_Init()
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the HAL_UART_Init() and HAL_UART_DeInit()
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     using HAL_UART_RegisterCallback() before calling HAL_UART_DeInit()
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     or HAL_UART_Init() function.
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     not defined, the callback registration feature is not available
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..] This subsection also provides a set of additional functions providing enhanced reception
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     services to user. (For example, these functions allow application to handle use cases
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     where number of data to be received is unknown).
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Compared to standard reception services which only consider number of received
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         data elements as reception completion criteria, these functions also consider additional ev
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         as triggers for updating reception status to caller :
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Detection of inactivity period (RX line has not been active for a given period).
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           (++) RX inactivity detected by IDLE event, i.e. RX line has been in idle state (normally 
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                for 1 frame time, after last received byte.
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two mode of transfer:
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Blocking mode: The reception is performed in polling mode, until either expected number 
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            or till IDLE event occurs. Reception is handled only during function execution.
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            When function exits, no data reception could occur. HAL status and number of actually re
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            are returned by function after finishing transfer.
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Non-Blocking mode: The reception is performed using Interrupts or DMA.
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            These API's return the HAL status.
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when using DMA mode.
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UARTEx_RxEventCallback() user callback will be executed during Receive process
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a reception error is det
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode API:
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle()
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API with Interrupt:
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle_IT()
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API with DMA:
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle_DMA()
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =============================================
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) Additional remark: If the parity is enabled, then the MSB bit of the data written
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------------------|---------------------------------------|
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 6


 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions  UART Private Functions
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                      uint32_t Tickstart, uint32_t Timeout);
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart);
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 7


 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor configurat
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     procedures (details for the procedures are available in reference manual
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (RM0430 for STM32F4X3xx MCUs and RM0402 for STM32F412xx MCUs
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0383 for STM32F411xC/E MCUs and RM0401 for STM32F410xx MCUs
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0090 for STM32F4X5xx/STM32F4X7xx/STM32F429xx/STM32F439xx MCUs
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0390 for STM32F446xx MCUs and RM0386 for STM32F469xx/STM32F479xx MCUs)).
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  29              		.loc 1 358 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 8


  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
  45              		.loc 1 360 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
  49              		.loc 1 362 12
  50 000e 0123     		movs	r3, #1
  51 0010 42E0     		b	.L3
  52              	.L2:
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6.
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Except for STM32F446xx devices, that is available for USART1, USART2, USART3, USART6, UART4 
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     */
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  53              		.loc 1 381 12
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 93F84130 		ldrb	r3, [r3, #65]
  56 0018 DBB2     		uxtb	r3, r3
  57              		.loc 1 381 6
  58 001a 002B     		cmp	r3, #0
  59 001c 06D1     		bne	.L4
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  60              		.loc 1 384 17
  61 001e 7B68     		ldr	r3, [r7, #4]
  62 0020 0022     		movs	r2, #0
  63 0022 83F84020 		strb	r2, [r3, #64]
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 9


 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  64              		.loc 1 398 5
  65 0026 7868     		ldr	r0, [r7, #4]
  66 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  67              	.L4:
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  68              		.loc 1 402 17
  69 002c 7B68     		ldr	r3, [r7, #4]
  70 002e 2422     		movs	r2, #36
  71 0030 83F84120 		strb	r2, [r3, #65]
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  72              		.loc 1 405 3
  73 0034 7B68     		ldr	r3, [r7, #4]
  74 0036 1B68     		ldr	r3, [r3]
  75 0038 DA68     		ldr	r2, [r3, #12]
  76 003a 7B68     		ldr	r3, [r7, #4]
  77 003c 1B68     		ldr	r3, [r3]
  78 003e 22F40052 		bic	r2, r2, #8192
  79 0042 DA60     		str	r2, [r3, #12]
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
  80              		.loc 1 408 3
  81 0044 7868     		ldr	r0, [r7, #4]
  82 0046 FFF7FEFF 		bl	UART_SetConfig
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
  83              		.loc 1 413 3
  84 004a 7B68     		ldr	r3, [r7, #4]
  85 004c 1B68     		ldr	r3, [r3]
  86 004e 1A69     		ldr	r2, [r3, #16]
  87 0050 7B68     		ldr	r3, [r7, #4]
  88 0052 1B68     		ldr	r3, [r3]
  89 0054 22F49042 		bic	r2, r2, #18432
  90 0058 1A61     		str	r2, [r3, #16]
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
  91              		.loc 1 414 3
  92 005a 7B68     		ldr	r3, [r7, #4]
  93 005c 1B68     		ldr	r3, [r3]
  94 005e 5A69     		ldr	r2, [r3, #20]
  95 0060 7B68     		ldr	r3, [r7, #4]
  96 0062 1B68     		ldr	r3, [r3]
  97 0064 22F02A02 		bic	r2, r2, #42
  98 0068 5A61     		str	r2, [r3, #20]
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 10


 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
  99              		.loc 1 417 3
 100 006a 7B68     		ldr	r3, [r7, #4]
 101 006c 1B68     		ldr	r3, [r3]
 102 006e DA68     		ldr	r2, [r3, #12]
 103 0070 7B68     		ldr	r3, [r7, #4]
 104 0072 1B68     		ldr	r3, [r3]
 105 0074 42F40052 		orr	r2, r2, #8192
 106 0078 DA60     		str	r2, [r3, #12]
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 107              		.loc 1 420 20
 108 007a 7B68     		ldr	r3, [r7, #4]
 109 007c 0022     		movs	r2, #0
 110 007e 5A64     		str	r2, [r3, #68]
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 111              		.loc 1 421 17
 112 0080 7B68     		ldr	r3, [r7, #4]
 113 0082 2022     		movs	r2, #32
 114 0084 83F84120 		strb	r2, [r3, #65]
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 115              		.loc 1 422 18
 116 0088 7B68     		ldr	r3, [r7, #4]
 117 008a 2022     		movs	r2, #32
 118 008c 83F84220 		strb	r2, [r3, #66]
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 119              		.loc 1 423 22
 120 0090 7B68     		ldr	r3, [r7, #4]
 121 0092 0022     		movs	r2, #0
 122 0094 5A63     		str	r2, [r3, #52]
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 123              		.loc 1 425 10
 124 0096 0023     		movs	r3, #0
 125              	.L3:
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 126              		.loc 1 426 1
 127 0098 1846     		mov	r0, r3
 128 009a 0837     		adds	r7, r7, #8
 129              	.LCFI3:
 130              		.cfi_def_cfa_offset 8
 131 009c BD46     		mov	sp, r7
 132              	.LCFI4:
 133              		.cfi_def_cfa_register 13
 134              		@ sp needed
 135 009e 80BD     		pop	{r7, pc}
 136              		.cfi_endproc
 137              	.LFE134:
 139              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 140              		.align	1
 141              		.global	HAL_HalfDuplex_Init
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 146              	HAL_HalfDuplex_Init:
 147              	.LFB135:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 11


 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 148              		.loc 1 436 1
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 8
 151              		@ frame_needed = 1, uses_anonymous_args = 0
 152 0000 80B5     		push	{r7, lr}
 153              	.LCFI5:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 82B0     		sub	sp, sp, #8
 158              	.LCFI6:
 159              		.cfi_def_cfa_offset 16
 160 0004 00AF     		add	r7, sp, #0
 161              	.LCFI7:
 162              		.cfi_def_cfa_register 7
 163 0006 7860     		str	r0, [r7, #4]
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 164              		.loc 1 438 6
 165 0008 7B68     		ldr	r3, [r7, #4]
 166 000a 002B     		cmp	r3, #0
 167 000c 01D1     		bne	.L6
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 168              		.loc 1 440 12
 169 000e 0123     		movs	r3, #1
 170 0010 4AE0     		b	.L7
 171              	.L6:
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 172              		.loc 1 448 12
 173 0012 7B68     		ldr	r3, [r7, #4]
 174 0014 93F84130 		ldrb	r3, [r3, #65]
 175 0018 DBB2     		uxtb	r3, r3
 176              		.loc 1 448 6
 177 001a 002B     		cmp	r3, #0
 178 001c 06D1     		bne	.L8
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 179              		.loc 1 451 17
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 12


 180 001e 7B68     		ldr	r3, [r7, #4]
 181 0020 0022     		movs	r2, #0
 182 0022 83F84020 		strb	r2, [r3, #64]
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 183              		.loc 1 465 5
 184 0026 7868     		ldr	r0, [r7, #4]
 185 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 186              	.L8:
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 187              		.loc 1 469 17
 188 002c 7B68     		ldr	r3, [r7, #4]
 189 002e 2422     		movs	r2, #36
 190 0030 83F84120 		strb	r2, [r3, #65]
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 191              		.loc 1 472 3
 192 0034 7B68     		ldr	r3, [r7, #4]
 193 0036 1B68     		ldr	r3, [r3]
 194 0038 DA68     		ldr	r2, [r3, #12]
 195 003a 7B68     		ldr	r3, [r7, #4]
 196 003c 1B68     		ldr	r3, [r3]
 197 003e 22F40052 		bic	r2, r2, #8192
 198 0042 DA60     		str	r2, [r3, #12]
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 199              		.loc 1 475 3
 200 0044 7868     		ldr	r0, [r7, #4]
 201 0046 FFF7FEFF 		bl	UART_SetConfig
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 202              		.loc 1 480 3
 203 004a 7B68     		ldr	r3, [r7, #4]
 204 004c 1B68     		ldr	r3, [r3]
 205 004e 1A69     		ldr	r2, [r3, #16]
 206 0050 7B68     		ldr	r3, [r7, #4]
 207 0052 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 13


 208 0054 22F49042 		bic	r2, r2, #18432
 209 0058 1A61     		str	r2, [r3, #16]
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 210              		.loc 1 481 3
 211 005a 7B68     		ldr	r3, [r7, #4]
 212 005c 1B68     		ldr	r3, [r3]
 213 005e 5A69     		ldr	r2, [r3, #20]
 214 0060 7B68     		ldr	r3, [r7, #4]
 215 0062 1B68     		ldr	r3, [r3]
 216 0064 22F02202 		bic	r2, r2, #34
 217 0068 5A61     		str	r2, [r3, #20]
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 218              		.loc 1 484 3
 219 006a 7B68     		ldr	r3, [r7, #4]
 220 006c 1B68     		ldr	r3, [r3]
 221 006e 5A69     		ldr	r2, [r3, #20]
 222 0070 7B68     		ldr	r3, [r7, #4]
 223 0072 1B68     		ldr	r3, [r3]
 224 0074 42F00802 		orr	r2, r2, #8
 225 0078 5A61     		str	r2, [r3, #20]
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 226              		.loc 1 487 3
 227 007a 7B68     		ldr	r3, [r7, #4]
 228 007c 1B68     		ldr	r3, [r3]
 229 007e DA68     		ldr	r2, [r3, #12]
 230 0080 7B68     		ldr	r3, [r7, #4]
 231 0082 1B68     		ldr	r3, [r3]
 232 0084 42F40052 		orr	r2, r2, #8192
 233 0088 DA60     		str	r2, [r3, #12]
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 234              		.loc 1 490 20
 235 008a 7B68     		ldr	r3, [r7, #4]
 236 008c 0022     		movs	r2, #0
 237 008e 5A64     		str	r2, [r3, #68]
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 238              		.loc 1 491 17
 239 0090 7B68     		ldr	r3, [r7, #4]
 240 0092 2022     		movs	r2, #32
 241 0094 83F84120 		strb	r2, [r3, #65]
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 242              		.loc 1 492 18
 243 0098 7B68     		ldr	r3, [r7, #4]
 244 009a 2022     		movs	r2, #32
 245 009c 83F84220 		strb	r2, [r3, #66]
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 246              		.loc 1 493 22
 247 00a0 7B68     		ldr	r3, [r7, #4]
 248 00a2 0022     		movs	r2, #0
 249 00a4 5A63     		str	r2, [r3, #52]
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 14


 250              		.loc 1 495 10
 251 00a6 0023     		movs	r3, #0
 252              	.L7:
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 253              		.loc 1 496 1
 254 00a8 1846     		mov	r0, r3
 255 00aa 0837     		adds	r7, r7, #8
 256              	.LCFI8:
 257              		.cfi_def_cfa_offset 8
 258 00ac BD46     		mov	sp, r7
 259              	.LCFI9:
 260              		.cfi_def_cfa_register 13
 261              		@ sp needed
 262 00ae 80BD     		pop	{r7, pc}
 263              		.cfi_endproc
 264              	.LFE135:
 266              		.section	.text.HAL_LIN_Init,"ax",%progbits
 267              		.align	1
 268              		.global	HAL_LIN_Init
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 273              	HAL_LIN_Init:
 274              	.LFB136:
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 275              		.loc 1 510 1
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 8
 278              		@ frame_needed = 1, uses_anonymous_args = 0
 279 0000 80B5     		push	{r7, lr}
 280              	.LCFI10:
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 82B0     		sub	sp, sp, #8
 285              	.LCFI11:
 286              		.cfi_def_cfa_offset 16
 287 0004 00AF     		add	r7, sp, #0
 288              	.LCFI12:
 289              		.cfi_def_cfa_register 7
 290 0006 7860     		str	r0, [r7, #4]
 291 0008 3960     		str	r1, [r7]
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 15


 292              		.loc 1 512 6
 293 000a 7B68     		ldr	r3, [r7, #4]
 294 000c 002B     		cmp	r3, #0
 295 000e 01D1     		bne	.L10
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 296              		.loc 1 514 12
 297 0010 0123     		movs	r3, #1
 298 0012 5AE0     		b	.L11
 299              	.L10:
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the LIN UART instance */
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 300              		.loc 1 525 12
 301 0014 7B68     		ldr	r3, [r7, #4]
 302 0016 93F84130 		ldrb	r3, [r3, #65]
 303 001a DBB2     		uxtb	r3, r3
 304              		.loc 1 525 6
 305 001c 002B     		cmp	r3, #0
 306 001e 06D1     		bne	.L12
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 307              		.loc 1 528 17
 308 0020 7B68     		ldr	r3, [r7, #4]
 309 0022 0022     		movs	r2, #0
 310 0024 83F84020 		strb	r2, [r3, #64]
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 311              		.loc 1 542 5
 312 0028 7868     		ldr	r0, [r7, #4]
 313 002a FFF7FEFF 		bl	HAL_UART_MspInit
 314              	.L12:
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 16


 315              		.loc 1 546 17
 316 002e 7B68     		ldr	r3, [r7, #4]
 317 0030 2422     		movs	r2, #36
 318 0032 83F84120 		strb	r2, [r3, #65]
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 319              		.loc 1 549 3
 320 0036 7B68     		ldr	r3, [r7, #4]
 321 0038 1B68     		ldr	r3, [r3]
 322 003a DA68     		ldr	r2, [r3, #12]
 323 003c 7B68     		ldr	r3, [r7, #4]
 324 003e 1B68     		ldr	r3, [r3]
 325 0040 22F40052 		bic	r2, r2, #8192
 326 0044 DA60     		str	r2, [r3, #12]
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 327              		.loc 1 552 3
 328 0046 7868     		ldr	r0, [r7, #4]
 329 0048 FFF7FEFF 		bl	UART_SetConfig
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN bits in the USART_CR3 register.*/
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_CLKEN));
 330              		.loc 1 557 3
 331 004c 7B68     		ldr	r3, [r7, #4]
 332 004e 1B68     		ldr	r3, [r3]
 333 0050 1A69     		ldr	r2, [r3, #16]
 334 0052 7B68     		ldr	r3, [r7, #4]
 335 0054 1B68     		ldr	r3, [r3]
 336 0056 22F40062 		bic	r2, r2, #2048
 337 005a 1A61     		str	r2, [r3, #16]
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 338              		.loc 1 558 3
 339 005c 7B68     		ldr	r3, [r7, #4]
 340 005e 1B68     		ldr	r3, [r3]
 341 0060 5A69     		ldr	r2, [r3, #20]
 342 0062 7B68     		ldr	r3, [r7, #4]
 343 0064 1B68     		ldr	r3, [r3]
 344 0066 22F02A02 		bic	r2, r2, #42
 345 006a 5A61     		str	r2, [r3, #20]
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 346              		.loc 1 561 3
 347 006c 7B68     		ldr	r3, [r7, #4]
 348 006e 1B68     		ldr	r3, [r3]
 349 0070 1A69     		ldr	r2, [r3, #16]
 350 0072 7B68     		ldr	r3, [r7, #4]
 351 0074 1B68     		ldr	r3, [r3]
 352 0076 42F48042 		orr	r2, r2, #16384
 353 007a 1A61     		str	r2, [r3, #16]
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 17


 354              		.loc 1 564 3
 355 007c 7B68     		ldr	r3, [r7, #4]
 356 007e 1B68     		ldr	r3, [r3]
 357 0080 1A69     		ldr	r2, [r3, #16]
 358 0082 7B68     		ldr	r3, [r7, #4]
 359 0084 1B68     		ldr	r3, [r3]
 360 0086 22F02002 		bic	r2, r2, #32
 361 008a 1A61     		str	r2, [r3, #16]
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 362              		.loc 1 565 3
 363 008c 7B68     		ldr	r3, [r7, #4]
 364 008e 1B68     		ldr	r3, [r3]
 365 0090 1969     		ldr	r1, [r3, #16]
 366 0092 7B68     		ldr	r3, [r7, #4]
 367 0094 1B68     		ldr	r3, [r3]
 368 0096 3A68     		ldr	r2, [r7]
 369 0098 0A43     		orrs	r2, r2, r1
 370 009a 1A61     		str	r2, [r3, #16]
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 371              		.loc 1 568 3
 372 009c 7B68     		ldr	r3, [r7, #4]
 373 009e 1B68     		ldr	r3, [r3]
 374 00a0 DA68     		ldr	r2, [r3, #12]
 375 00a2 7B68     		ldr	r3, [r7, #4]
 376 00a4 1B68     		ldr	r3, [r3]
 377 00a6 42F40052 		orr	r2, r2, #8192
 378 00aa DA60     		str	r2, [r3, #12]
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 379              		.loc 1 571 20
 380 00ac 7B68     		ldr	r3, [r7, #4]
 381 00ae 0022     		movs	r2, #0
 382 00b0 5A64     		str	r2, [r3, #68]
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 383              		.loc 1 572 17
 384 00b2 7B68     		ldr	r3, [r7, #4]
 385 00b4 2022     		movs	r2, #32
 386 00b6 83F84120 		strb	r2, [r3, #65]
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 387              		.loc 1 573 18
 388 00ba 7B68     		ldr	r3, [r7, #4]
 389 00bc 2022     		movs	r2, #32
 390 00be 83F84220 		strb	r2, [r3, #66]
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 391              		.loc 1 574 22
 392 00c2 7B68     		ldr	r3, [r7, #4]
 393 00c4 0022     		movs	r2, #0
 394 00c6 5A63     		str	r2, [r3, #52]
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 395              		.loc 1 576 10
 396 00c8 0023     		movs	r3, #0
 397              	.L11:
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 18


 398              		.loc 1 577 1
 399 00ca 1846     		mov	r0, r3
 400 00cc 0837     		adds	r7, r7, #8
 401              	.LCFI13:
 402              		.cfi_def_cfa_offset 8
 403 00ce BD46     		mov	sp, r7
 404              	.LCFI14:
 405              		.cfi_def_cfa_register 13
 406              		@ sp needed
 407 00d0 80BD     		pop	{r7, pc}
 408              		.cfi_endproc
 409              	.LFE136:
 411              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 412              		.align	1
 413              		.global	HAL_MultiProcessor_Init
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 418              	HAL_MultiProcessor_Init:
 419              	.LFB137:
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address USART address
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 420              		.loc 1 592 1
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 16
 423              		@ frame_needed = 1, uses_anonymous_args = 0
 424 0000 80B5     		push	{r7, lr}
 425              	.LCFI15:
 426              		.cfi_def_cfa_offset 8
 427              		.cfi_offset 7, -8
 428              		.cfi_offset 14, -4
 429 0002 84B0     		sub	sp, sp, #16
 430              	.LCFI16:
 431              		.cfi_def_cfa_offset 24
 432 0004 00AF     		add	r7, sp, #0
 433              	.LCFI17:
 434              		.cfi_def_cfa_register 7
 435 0006 F860     		str	r0, [r7, #12]
 436 0008 0B46     		mov	r3, r1
 437 000a 7A60     		str	r2, [r7, #4]
 438 000c FB72     		strb	r3, [r7, #11]
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 439              		.loc 1 594 6
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 19


 440 000e FB68     		ldr	r3, [r7, #12]
 441 0010 002B     		cmp	r3, #0
 442 0012 01D1     		bne	.L14
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 443              		.loc 1 596 12
 444 0014 0123     		movs	r3, #1
 445 0016 62E0     		b	.L15
 446              	.L14:
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 447              		.loc 1 608 12
 448 0018 FB68     		ldr	r3, [r7, #12]
 449 001a 93F84130 		ldrb	r3, [r3, #65]
 450 001e DBB2     		uxtb	r3, r3
 451              		.loc 1 608 6
 452 0020 002B     		cmp	r3, #0
 453 0022 06D1     		bne	.L16
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 454              		.loc 1 611 17
 455 0024 FB68     		ldr	r3, [r7, #12]
 456 0026 0022     		movs	r2, #0
 457 0028 83F84020 		strb	r2, [r3, #64]
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 458              		.loc 1 625 5
 459 002c F868     		ldr	r0, [r7, #12]
 460 002e FFF7FEFF 		bl	HAL_UART_MspInit
 461              	.L16:
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 20


 462              		.loc 1 629 17
 463 0032 FB68     		ldr	r3, [r7, #12]
 464 0034 2422     		movs	r2, #36
 465 0036 83F84120 		strb	r2, [r3, #65]
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 466              		.loc 1 632 3
 467 003a FB68     		ldr	r3, [r7, #12]
 468 003c 1B68     		ldr	r3, [r3]
 469 003e DA68     		ldr	r2, [r3, #12]
 470 0040 FB68     		ldr	r3, [r7, #12]
 471 0042 1B68     		ldr	r3, [r3]
 472 0044 22F40052 		bic	r2, r2, #8192
 473 0048 DA60     		str	r2, [r3, #12]
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 474              		.loc 1 635 3
 475 004a F868     		ldr	r0, [r7, #12]
 476 004c FFF7FEFF 		bl	UART_SetConfig
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared:
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 477              		.loc 1 640 3
 478 0050 FB68     		ldr	r3, [r7, #12]
 479 0052 1B68     		ldr	r3, [r3]
 480 0054 1A69     		ldr	r2, [r3, #16]
 481 0056 FB68     		ldr	r3, [r7, #12]
 482 0058 1B68     		ldr	r3, [r3]
 483 005a 22F49042 		bic	r2, r2, #18432
 484 005e 1A61     		str	r2, [r3, #16]
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 485              		.loc 1 641 3
 486 0060 FB68     		ldr	r3, [r7, #12]
 487 0062 1B68     		ldr	r3, [r3]
 488 0064 5A69     		ldr	r2, [r3, #20]
 489 0066 FB68     		ldr	r3, [r7, #12]
 490 0068 1B68     		ldr	r3, [r3]
 491 006a 22F02A02 		bic	r2, r2, #42
 492 006e 5A61     		str	r2, [r3, #20]
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 493              		.loc 1 644 3
 494 0070 FB68     		ldr	r3, [r7, #12]
 495 0072 1B68     		ldr	r3, [r3]
 496 0074 1A69     		ldr	r2, [r3, #16]
 497 0076 FB68     		ldr	r3, [r7, #12]
 498 0078 1B68     		ldr	r3, [r3]
 499 007a 22F00F02 		bic	r2, r2, #15
 500 007e 1A61     		str	r2, [r3, #16]
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 501              		.loc 1 645 3
 502 0080 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 21


 503 0082 1B68     		ldr	r3, [r3]
 504 0084 1969     		ldr	r1, [r3, #16]
 505 0086 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 506 0088 FB68     		ldr	r3, [r7, #12]
 507 008a 1B68     		ldr	r3, [r3]
 508 008c 0A43     		orrs	r2, r2, r1
 509 008e 1A61     		str	r2, [r3, #16]
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 510              		.loc 1 648 3
 511 0090 FB68     		ldr	r3, [r7, #12]
 512 0092 1B68     		ldr	r3, [r3]
 513 0094 DA68     		ldr	r2, [r3, #12]
 514 0096 FB68     		ldr	r3, [r7, #12]
 515 0098 1B68     		ldr	r3, [r3]
 516 009a 22F40062 		bic	r2, r2, #2048
 517 009e DA60     		str	r2, [r3, #12]
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 518              		.loc 1 649 3
 519 00a0 FB68     		ldr	r3, [r7, #12]
 520 00a2 1B68     		ldr	r3, [r3]
 521 00a4 D968     		ldr	r1, [r3, #12]
 522 00a6 FB68     		ldr	r3, [r7, #12]
 523 00a8 1B68     		ldr	r3, [r3]
 524 00aa 7A68     		ldr	r2, [r7, #4]
 525 00ac 0A43     		orrs	r2, r2, r1
 526 00ae DA60     		str	r2, [r3, #12]
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 527              		.loc 1 652 3
 528 00b0 FB68     		ldr	r3, [r7, #12]
 529 00b2 1B68     		ldr	r3, [r3]
 530 00b4 DA68     		ldr	r2, [r3, #12]
 531 00b6 FB68     		ldr	r3, [r7, #12]
 532 00b8 1B68     		ldr	r3, [r3]
 533 00ba 42F40052 		orr	r2, r2, #8192
 534 00be DA60     		str	r2, [r3, #12]
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 535              		.loc 1 655 20
 536 00c0 FB68     		ldr	r3, [r7, #12]
 537 00c2 0022     		movs	r2, #0
 538 00c4 5A64     		str	r2, [r3, #68]
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 539              		.loc 1 656 17
 540 00c6 FB68     		ldr	r3, [r7, #12]
 541 00c8 2022     		movs	r2, #32
 542 00ca 83F84120 		strb	r2, [r3, #65]
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 543              		.loc 1 657 18
 544 00ce FB68     		ldr	r3, [r7, #12]
 545 00d0 2022     		movs	r2, #32
 546 00d2 83F84220 		strb	r2, [r3, #66]
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 22


 547              		.loc 1 658 22
 548 00d6 FB68     		ldr	r3, [r7, #12]
 549 00d8 0022     		movs	r2, #0
 550 00da 5A63     		str	r2, [r3, #52]
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 551              		.loc 1 660 10
 552 00dc 0023     		movs	r3, #0
 553              	.L15:
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 554              		.loc 1 661 1
 555 00de 1846     		mov	r0, r3
 556 00e0 1037     		adds	r7, r7, #16
 557              	.LCFI18:
 558              		.cfi_def_cfa_offset 8
 559 00e2 BD46     		mov	sp, r7
 560              	.LCFI19:
 561              		.cfi_def_cfa_register 13
 562              		@ sp needed
 563 00e4 80BD     		pop	{r7, pc}
 564              		.cfi_endproc
 565              	.LFE137:
 567              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 568              		.align	1
 569              		.global	HAL_UART_DeInit
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 574              	HAL_UART_DeInit:
 575              	.LFB138:
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral.
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 576              		.loc 1 670 1
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 8
 579              		@ frame_needed = 1, uses_anonymous_args = 0
 580 0000 80B5     		push	{r7, lr}
 581              	.LCFI20:
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 7, -8
 584              		.cfi_offset 14, -4
 585 0002 82B0     		sub	sp, sp, #8
 586              	.LCFI21:
 587              		.cfi_def_cfa_offset 16
 588 0004 00AF     		add	r7, sp, #0
 589              	.LCFI22:
 590              		.cfi_def_cfa_register 7
 591 0006 7860     		str	r0, [r7, #4]
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 23


 592              		.loc 1 672 6
 593 0008 7B68     		ldr	r3, [r7, #4]
 594 000a 002B     		cmp	r3, #0
 595 000c 01D1     		bne	.L18
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 596              		.loc 1 674 12
 597 000e 0123     		movs	r3, #1
 598 0010 24E0     		b	.L19
 599              	.L18:
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 600              		.loc 1 680 17
 601 0012 7B68     		ldr	r3, [r7, #4]
 602 0014 2422     		movs	r2, #36
 603 0016 83F84120 		strb	r2, [r3, #65]
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the Peripheral */
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 604              		.loc 1 683 3
 605 001a 7B68     		ldr	r3, [r7, #4]
 606 001c 1B68     		ldr	r3, [r3]
 607 001e DA68     		ldr	r2, [r3, #12]
 608 0020 7B68     		ldr	r3, [r7, #4]
 609 0022 1B68     		ldr	r3, [r3]
 610 0024 22F40052 		bic	r2, r2, #8192
 611 0028 DA60     		str	r2, [r3, #12]
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 612              		.loc 1 694 3
 613 002a 7868     		ldr	r0, [r7, #4]
 614 002c FFF7FEFF 		bl	HAL_UART_MspDeInit
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 615              		.loc 1 697 20
 616 0030 7B68     		ldr	r3, [r7, #4]
 617 0032 0022     		movs	r2, #0
 618 0034 5A64     		str	r2, [r3, #68]
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 619              		.loc 1 698 17
 620 0036 7B68     		ldr	r3, [r7, #4]
 621 0038 0022     		movs	r2, #0
 622 003a 83F84120 		strb	r2, [r3, #65]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 24


 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 623              		.loc 1 699 18
 624 003e 7B68     		ldr	r3, [r7, #4]
 625 0040 0022     		movs	r2, #0
 626 0042 83F84220 		strb	r2, [r3, #66]
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 627              		.loc 1 700 24
 628 0046 7B68     		ldr	r3, [r7, #4]
 629 0048 0022     		movs	r2, #0
 630 004a 1A63     		str	r2, [r3, #48]
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 631              		.loc 1 701 22
 632 004c 7B68     		ldr	r3, [r7, #4]
 633 004e 0022     		movs	r2, #0
 634 0050 5A63     		str	r2, [r3, #52]
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlock */
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 635              		.loc 1 704 3
 636 0052 7B68     		ldr	r3, [r7, #4]
 637 0054 0022     		movs	r2, #0
 638 0056 83F84020 		strb	r2, [r3, #64]
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 639              		.loc 1 706 10
 640 005a 0023     		movs	r3, #0
 641              	.L19:
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 642              		.loc 1 707 1
 643 005c 1846     		mov	r0, r3
 644 005e 0837     		adds	r7, r7, #8
 645              	.LCFI23:
 646              		.cfi_def_cfa_offset 8
 647 0060 BD46     		mov	sp, r7
 648              	.LCFI24:
 649              		.cfi_def_cfa_register 13
 650              		@ sp needed
 651 0062 80BD     		pop	{r7, pc}
 652              		.cfi_endproc
 653              	.LFE138:
 655              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 656              		.align	1
 657              		.weak	HAL_UART_MspInit
 658              		.syntax unified
 659              		.thumb
 660              		.thumb_func
 662              	HAL_UART_MspInit:
 663              	.LFB139:
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 25


 664              		.loc 1 716 1
 665              		.cfi_startproc
 666              		@ args = 0, pretend = 0, frame = 8
 667              		@ frame_needed = 1, uses_anonymous_args = 0
 668              		@ link register save eliminated.
 669 0000 80B4     		push	{r7}
 670              	.LCFI25:
 671              		.cfi_def_cfa_offset 4
 672              		.cfi_offset 7, -4
 673 0002 83B0     		sub	sp, sp, #12
 674              	.LCFI26:
 675              		.cfi_def_cfa_offset 16
 676 0004 00AF     		add	r7, sp, #0
 677              	.LCFI27:
 678              		.cfi_def_cfa_register 7
 679 0006 7860     		str	r0, [r7, #4]
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 680              		.loc 1 722 1
 681 0008 00BF     		nop
 682 000a 0C37     		adds	r7, r7, #12
 683              	.LCFI28:
 684              		.cfi_def_cfa_offset 4
 685 000c BD46     		mov	sp, r7
 686              	.LCFI29:
 687              		.cfi_def_cfa_register 13
 688              		@ sp needed
 689 000e 5DF8047B 		ldr	r7, [sp], #4
 690              	.LCFI30:
 691              		.cfi_restore 7
 692              		.cfi_def_cfa_offset 0
 693 0012 7047     		bx	lr
 694              		.cfi_endproc
 695              	.LFE139:
 697              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 698              		.align	1
 699              		.weak	HAL_UART_MspDeInit
 700              		.syntax unified
 701              		.thumb
 702              		.thumb_func
 704              	HAL_UART_MspDeInit:
 705              	.LFB140:
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 706              		.loc 1 731 1
 707              		.cfi_startproc
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 26


 708              		@ args = 0, pretend = 0, frame = 8
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710              		@ link register save eliminated.
 711 0000 80B4     		push	{r7}
 712              	.LCFI31:
 713              		.cfi_def_cfa_offset 4
 714              		.cfi_offset 7, -4
 715 0002 83B0     		sub	sp, sp, #12
 716              	.LCFI32:
 717              		.cfi_def_cfa_offset 16
 718 0004 00AF     		add	r7, sp, #0
 719              	.LCFI33:
 720              		.cfi_def_cfa_register 7
 721 0006 7860     		str	r0, [r7, #4]
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 722              		.loc 1 737 1
 723 0008 00BF     		nop
 724 000a 0C37     		adds	r7, r7, #12
 725              	.LCFI34:
 726              		.cfi_def_cfa_offset 4
 727 000c BD46     		mov	sp, r7
 728              	.LCFI35:
 729              		.cfi_def_cfa_register 13
 730              		@ sp needed
 731 000e 5DF8047B 		ldr	r7, [sp], #4
 732              	.LCFI36:
 733              		.cfi_restore 7
 734              		.cfi_def_cfa_offset 0
 735 0012 7047     		bx	lr
 736              		.cfi_endproc
 737              	.LFE140:
 739              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 740              		.align	1
 741              		.global	HAL_UART_Transmit
 742              		.syntax unified
 743              		.thumb
 744              		.thumb_func
 746              	HAL_UART_Transmit:
 747              	.LFB141:
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   The HAL_UART_RegisterCallback() may be called before HAL_UART_Init(), HAL_HalfDuplex_In
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_MultiProcessor_Init() to register callbacks for HAL_UART_MSPINIT_CB_ID and HAL_UART
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 27


 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (pCallback == NULL)
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 28


 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   The HAL_UART_UnRegisterCallback() may be called before HAL_UART_Init(), HAL_HalfDuplex_
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_LIN_Init(), HAL_MultiProcessor_Init() to un-register callbacks for HAL_UART_MSPINIT
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 29


 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and HAL_UART_MSPDEINIT_CB_ID
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 30


 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart     Uart handle
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 31


 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (pCallback == NULL)
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart     Uart handle
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 32


1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            after finishing transfer.
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            or DMA, these API's return the HAL status.
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The end of the data processing will be indicated through the
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            using DMA mode.
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or receive process
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode API's are :
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive()
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort()
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 33


1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Errors are handled as follows :
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size,
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 748              		.loc 1 1136 1
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 32
 751              		@ frame_needed = 1, uses_anonymous_args = 0
 752 0000 80B5     		push	{r7, lr}
 753              	.LCFI37:
 754              		.cfi_def_cfa_offset 8
 755              		.cfi_offset 7, -8
 756              		.cfi_offset 14, -4
 757 0002 8AB0     		sub	sp, sp, #40
 758              	.LCFI38:
 759              		.cfi_def_cfa_offset 48
 760 0004 02AF     		add	r7, sp, #8
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 34


 761              	.LCFI39:
 762              		.cfi_def_cfa 7, 40
 763 0006 F860     		str	r0, [r7, #12]
 764 0008 B960     		str	r1, [r7, #8]
 765 000a 3B60     		str	r3, [r7]
 766 000c 1346     		mov	r3, r2	@ movhi
 767 000e FB80     		strh	r3, [r7, #6]	@ movhi
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint8_t  *pdata8bits;
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint16_t *pdata16bits;
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 768              		.loc 1 1139 12
 769 0010 0023     		movs	r3, #0
 770 0012 7B61     		str	r3, [r7, #20]
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 771              		.loc 1 1142 12
 772 0014 FB68     		ldr	r3, [r7, #12]
 773 0016 93F84130 		ldrb	r3, [r3, #65]
 774 001a DBB2     		uxtb	r3, r3
 775              		.loc 1 1142 6
 776 001c 202B     		cmp	r3, #32
 777 001e 75D1     		bne	.L23
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 778              		.loc 1 1144 8
 779 0020 BB68     		ldr	r3, [r7, #8]
 780 0022 002B     		cmp	r3, #0
 781 0024 02D0     		beq	.L24
 782              		.loc 1 1144 25 discriminator 1
 783 0026 FB88     		ldrh	r3, [r7, #6]
 784 0028 002B     		cmp	r3, #0
 785 002a 01D1     		bne	.L25
 786              	.L24:
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 787              		.loc 1 1146 15
 788 002c 0123     		movs	r3, #1
 789 002e 6EE0     		b	.L26
 790              	.L25:
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 791              		.loc 1 1149 22
 792 0030 FB68     		ldr	r3, [r7, #12]
 793 0032 0022     		movs	r2, #0
 794 0034 5A64     		str	r2, [r3, #68]
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 795              		.loc 1 1150 19
 796 0036 FB68     		ldr	r3, [r7, #12]
 797 0038 2122     		movs	r2, #33
 798 003a 83F84120 		strb	r2, [r3, #65]
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 799              		.loc 1 1153 17
 800 003e FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 35


 801 0042 7861     		str	r0, [r7, #20]
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 802              		.loc 1 1155 23
 803 0044 FB68     		ldr	r3, [r7, #12]
 804 0046 FA88     		ldrh	r2, [r7, #6]	@ movhi
 805 0048 9A84     		strh	r2, [r3, #36]	@ movhi
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 806              		.loc 1 1156 24
 807 004a FB68     		ldr	r3, [r7, #12]
 808 004c FA88     		ldrh	r2, [r7, #6]	@ movhi
 809 004e DA84     		strh	r2, [r3, #38]	@ movhi
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 810              		.loc 1 1159 21
 811 0050 FB68     		ldr	r3, [r7, #12]
 812 0052 9B68     		ldr	r3, [r3, #8]
 813              		.loc 1 1159 8
 814 0054 B3F5805F 		cmp	r3, #4096
 815 0058 08D1     		bne	.L27
 816              		.loc 1 1159 71 discriminator 1
 817 005a FB68     		ldr	r3, [r7, #12]
 818 005c 1B69     		ldr	r3, [r3, #16]
 819              		.loc 1 1159 56 discriminator 1
 820 005e 002B     		cmp	r3, #0
 821 0060 04D1     		bne	.L27
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 822              		.loc 1 1161 19
 823 0062 0023     		movs	r3, #0
 824 0064 FB61     		str	r3, [r7, #28]
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (const uint16_t *) pData;
 825              		.loc 1 1162 19
 826 0066 BB68     		ldr	r3, [r7, #8]
 827 0068 BB61     		str	r3, [r7, #24]
 828 006a 03E0     		b	.L28
 829              	.L27:
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = pData;
 830              		.loc 1 1166 19
 831 006c BB68     		ldr	r3, [r7, #8]
 832 006e FB61     		str	r3, [r7, #28]
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = NULL;
 833              		.loc 1 1167 19
 834 0070 0023     		movs	r3, #0
 835 0072 BB61     		str	r3, [r7, #24]
 836              	.L28:
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 837              		.loc 1 1170 11
 838 0074 2EE0     		b	.L29
 839              	.L33:
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 36


1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 840              		.loc 1 1172 11
 841 0076 3B68     		ldr	r3, [r7]
 842 0078 0093     		str	r3, [sp]
 843 007a 7B69     		ldr	r3, [r7, #20]
 844 007c 0022     		movs	r2, #0
 845 007e 8021     		movs	r1, #128
 846 0080 F868     		ldr	r0, [r7, #12]
 847 0082 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 848 0086 0346     		mov	r3, r0
 849              		.loc 1 1172 10 discriminator 1
 850 0088 002B     		cmp	r3, #0
 851 008a 05D0     		beq	.L30
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 852              		.loc 1 1174 23
 853 008c FB68     		ldr	r3, [r7, #12]
 854 008e 2022     		movs	r2, #32
 855 0090 83F84120 		strb	r2, [r3, #65]
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 856              		.loc 1 1176 16
 857 0094 0323     		movs	r3, #3
 858 0096 3AE0     		b	.L26
 859              	.L30:
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (pdata8bits == NULL)
 860              		.loc 1 1178 10
 861 0098 FB69     		ldr	r3, [r7, #28]
 862 009a 002B     		cmp	r3, #0
 863 009c 0BD1     		bne	.L31
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 864              		.loc 1 1180 42
 865 009e BB69     		ldr	r3, [r7, #24]
 866 00a0 1B88     		ldrh	r3, [r3]
 867              		.loc 1 1180 31
 868 00a2 1A46     		mov	r2, r3
 869              		.loc 1 1180 14
 870 00a4 FB68     		ldr	r3, [r7, #12]
 871 00a6 1B68     		ldr	r3, [r3]
 872              		.loc 1 1180 31
 873 00a8 C2F30802 		ubfx	r2, r2, #0, #9
 874              		.loc 1 1180 29
 875 00ac 5A60     		str	r2, [r3, #4]
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata16bits++;
 876              		.loc 1 1181 20
 877 00ae BB69     		ldr	r3, [r7, #24]
 878 00b0 0233     		adds	r3, r3, #2
 879 00b2 BB61     		str	r3, [r7, #24]
 880 00b4 07E0     		b	.L32
 881              	.L31:
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 882              		.loc 1 1185 41
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 37


 883 00b6 FB69     		ldr	r3, [r7, #28]
 884 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 885              		.loc 1 1185 14
 886 00ba FB68     		ldr	r3, [r7, #12]
 887 00bc 1B68     		ldr	r3, [r3]
 888              		.loc 1 1185 29
 889 00be 5A60     		str	r2, [r3, #4]
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata8bits++;
 890              		.loc 1 1186 19
 891 00c0 FB69     		ldr	r3, [r7, #28]
 892 00c2 0133     		adds	r3, r3, #1
 893 00c4 FB61     		str	r3, [r7, #28]
 894              	.L32:
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
 895              		.loc 1 1188 12
 896 00c6 FB68     		ldr	r3, [r7, #12]
 897 00c8 DB8C     		ldrh	r3, [r3, #38]	@ movhi
 898 00ca 9BB2     		uxth	r3, r3
 899              		.loc 1 1188 25
 900 00cc 013B     		subs	r3, r3, #1
 901 00ce 9AB2     		uxth	r2, r3
 902 00d0 FB68     		ldr	r3, [r7, #12]
 903 00d2 DA84     		strh	r2, [r3, #38]	@ movhi
 904              	.L29:
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 905              		.loc 1 1170 17
 906 00d4 FB68     		ldr	r3, [r7, #12]
 907 00d6 DB8C     		ldrh	r3, [r3, #38]	@ movhi
 908 00d8 9BB2     		uxth	r3, r3
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 909              		.loc 1 1170 31
 910 00da 002B     		cmp	r3, #0
 911 00dc CBD1     		bne	.L33
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 912              		.loc 1 1191 9
 913 00de 3B68     		ldr	r3, [r7]
 914 00e0 0093     		str	r3, [sp]
 915 00e2 7B69     		ldr	r3, [r7, #20]
 916 00e4 0022     		movs	r2, #0
 917 00e6 4021     		movs	r1, #64
 918 00e8 F868     		ldr	r0, [r7, #12]
 919 00ea FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 920 00ee 0346     		mov	r3, r0
 921              		.loc 1 1191 8 discriminator 1
 922 00f0 002B     		cmp	r3, #0
 923 00f2 05D0     		beq	.L34
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 924              		.loc 1 1193 21
 925 00f4 FB68     		ldr	r3, [r7, #12]
 926 00f6 2022     		movs	r2, #32
 927 00f8 83F84120 		strb	r2, [r3, #65]
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 38


 928              		.loc 1 1195 14
 929 00fc 0323     		movs	r3, #3
 930 00fe 06E0     		b	.L26
 931              	.L34:
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 932              		.loc 1 1199 19
 933 0100 FB68     		ldr	r3, [r7, #12]
 934 0102 2022     		movs	r2, #32
 935 0104 83F84120 		strb	r2, [r3, #65]
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 936              		.loc 1 1201 12
 937 0108 0023     		movs	r3, #0
 938 010a 00E0     		b	.L26
 939              	.L23:
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 940              		.loc 1 1205 12
 941 010c 0223     		movs	r3, #2
 942              	.L26:
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 943              		.loc 1 1207 1
 944 010e 1846     		mov	r0, r3
 945 0110 2037     		adds	r7, r7, #32
 946              	.LCFI40:
 947              		.cfi_def_cfa_offset 8
 948 0112 BD46     		mov	sp, r7
 949              	.LCFI41:
 950              		.cfi_def_cfa_register 13
 951              		@ sp needed
 952 0114 80BD     		pop	{r7, pc}
 953              		.cfi_endproc
 954              	.LFE141:
 956              		.section	.text.HAL_UART_Receive,"ax",%progbits
 957              		.align	1
 958              		.global	HAL_UART_Receive
 959              		.syntax unified
 960              		.thumb
 961              		.thumb_func
 963              	HAL_UART_Receive:
 964              	.LFB142:
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode.
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 39


1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 965              		.loc 1 1222 1
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 32
 968              		@ frame_needed = 1, uses_anonymous_args = 0
 969 0000 80B5     		push	{r7, lr}
 970              	.LCFI42:
 971              		.cfi_def_cfa_offset 8
 972              		.cfi_offset 7, -8
 973              		.cfi_offset 14, -4
 974 0002 8AB0     		sub	sp, sp, #40
 975              	.LCFI43:
 976              		.cfi_def_cfa_offset 48
 977 0004 02AF     		add	r7, sp, #8
 978              	.LCFI44:
 979              		.cfi_def_cfa 7, 40
 980 0006 F860     		str	r0, [r7, #12]
 981 0008 B960     		str	r1, [r7, #8]
 982 000a 3B60     		str	r3, [r7]
 983 000c 1346     		mov	r3, r2	@ movhi
 984 000e FB80     		strh	r3, [r7, #6]	@ movhi
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits;
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 985              		.loc 1 1225 12
 986 0010 0023     		movs	r3, #0
 987 0012 7B61     		str	r3, [r7, #20]
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 988              		.loc 1 1228 12
 989 0014 FB68     		ldr	r3, [r7, #12]
 990 0016 93F84230 		ldrb	r3, [r3, #66]
 991 001a DBB2     		uxtb	r3, r3
 992              		.loc 1 1228 6
 993 001c 202B     		cmp	r3, #32
 994 001e 40F08180 		bne	.L36
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 995              		.loc 1 1230 8
 996 0022 BB68     		ldr	r3, [r7, #8]
 997 0024 002B     		cmp	r3, #0
 998 0026 02D0     		beq	.L37
 999              		.loc 1 1230 25 discriminator 1
 1000 0028 FB88     		ldrh	r3, [r7, #6]
 1001 002a 002B     		cmp	r3, #0
 1002 002c 01D1     		bne	.L38
 1003              	.L37:
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 1004              		.loc 1 1232 15
 1005 002e 0123     		movs	r3, #1
 1006 0030 79E0     		b	.L39
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 40


 1007              	.L38:
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1008              		.loc 1 1235 22
 1009 0032 FB68     		ldr	r3, [r7, #12]
 1010 0034 0022     		movs	r2, #0
 1011 0036 5A64     		str	r2, [r3, #68]
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1012              		.loc 1 1236 20
 1013 0038 FB68     		ldr	r3, [r7, #12]
 1014 003a 2222     		movs	r2, #34
 1015 003c 83F84220 		strb	r2, [r3, #66]
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1016              		.loc 1 1237 26
 1017 0040 FB68     		ldr	r3, [r7, #12]
 1018 0042 0022     		movs	r2, #0
 1019 0044 1A63     		str	r2, [r3, #48]
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1020              		.loc 1 1240 17
 1021 0046 FFF7FEFF 		bl	HAL_GetTick
 1022 004a 7861     		str	r0, [r7, #20]
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1023              		.loc 1 1242 23
 1024 004c FB68     		ldr	r3, [r7, #12]
 1025 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1026 0050 9A85     		strh	r2, [r3, #44]	@ movhi
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1027              		.loc 1 1243 24
 1028 0052 FB68     		ldr	r3, [r7, #12]
 1029 0054 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1030 0056 DA85     		strh	r2, [r3, #46]	@ movhi
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1031              		.loc 1 1246 21
 1032 0058 FB68     		ldr	r3, [r7, #12]
 1033 005a 9B68     		ldr	r3, [r3, #8]
 1034              		.loc 1 1246 8
 1035 005c B3F5805F 		cmp	r3, #4096
 1036 0060 08D1     		bne	.L40
 1037              		.loc 1 1246 71 discriminator 1
 1038 0062 FB68     		ldr	r3, [r7, #12]
 1039 0064 1B69     		ldr	r3, [r3, #16]
 1040              		.loc 1 1246 56 discriminator 1
 1041 0066 002B     		cmp	r3, #0
 1042 0068 04D1     		bne	.L40
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 1043              		.loc 1 1248 19
 1044 006a 0023     		movs	r3, #0
 1045 006c FB61     		str	r3, [r7, #28]
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1046              		.loc 1 1249 19
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 41


 1047 006e BB68     		ldr	r3, [r7, #8]
 1048 0070 BB61     		str	r3, [r7, #24]
 1049 0072 03E0     		b	.L41
 1050              	.L40:
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = pData;
 1051              		.loc 1 1253 19
 1052 0074 BB68     		ldr	r3, [r7, #8]
 1053 0076 FB61     		str	r3, [r7, #28]
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = NULL;
 1054              		.loc 1 1254 19
 1055 0078 0023     		movs	r3, #0
 1056 007a BB61     		str	r3, [r7, #24]
 1057              	.L41:
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1058              		.loc 1 1258 11
 1059 007c 47E0     		b	.L42
 1060              	.L49:
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1061              		.loc 1 1260 11
 1062 007e 3B68     		ldr	r3, [r7]
 1063 0080 0093     		str	r3, [sp]
 1064 0082 7B69     		ldr	r3, [r7, #20]
 1065 0084 0022     		movs	r2, #0
 1066 0086 2021     		movs	r1, #32
 1067 0088 F868     		ldr	r0, [r7, #12]
 1068 008a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1069 008e 0346     		mov	r3, r0
 1070              		.loc 1 1260 10 discriminator 1
 1071 0090 002B     		cmp	r3, #0
 1072 0092 05D0     		beq	.L43
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 1073              		.loc 1 1262 24
 1074 0094 FB68     		ldr	r3, [r7, #12]
 1075 0096 2022     		movs	r2, #32
 1076 0098 83F84220 		strb	r2, [r3, #66]
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 1077              		.loc 1 1264 16
 1078 009c 0323     		movs	r3, #3
 1079 009e 42E0     		b	.L39
 1080              	.L43:
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (pdata8bits == NULL)
 1081              		.loc 1 1266 10
 1082 00a0 FB69     		ldr	r3, [r7, #28]
 1083 00a2 002B     		cmp	r3, #0
 1084 00a4 0CD1     		bne	.L44
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->DR & 0x01FF);
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 42


 1085              		.loc 1 1268 40
 1086 00a6 FB68     		ldr	r3, [r7, #12]
 1087 00a8 1B68     		ldr	r3, [r3]
 1088              		.loc 1 1268 50
 1089 00aa 5B68     		ldr	r3, [r3, #4]
 1090              		.loc 1 1268 24
 1091 00ac 9BB2     		uxth	r3, r3
 1092 00ae C3F30803 		ubfx	r3, r3, #0, #9
 1093 00b2 9AB2     		uxth	r2, r3
 1094              		.loc 1 1268 22
 1095 00b4 BB69     		ldr	r3, [r7, #24]
 1096 00b6 1A80     		strh	r2, [r3]	@ movhi
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata16bits++;
 1097              		.loc 1 1269 20
 1098 00b8 BB69     		ldr	r3, [r7, #24]
 1099 00ba 0233     		adds	r3, r3, #2
 1100 00bc BB61     		str	r3, [r7, #24]
 1101 00be 1FE0     		b	.L45
 1102              	.L44:
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORD
 1103              		.loc 1 1273 25
 1104 00c0 FB68     		ldr	r3, [r7, #12]
 1105 00c2 9B68     		ldr	r3, [r3, #8]
 1106              		.loc 1 1273 12
 1107 00c4 B3F5805F 		cmp	r3, #4096
 1108 00c8 07D0     		beq	.L46
 1109              		.loc 1 1273 76 discriminator 1
 1110 00ca FB68     		ldr	r3, [r7, #12]
 1111 00cc 9B68     		ldr	r3, [r3, #8]
 1112              		.loc 1 1273 60 discriminator 1
 1113 00ce 002B     		cmp	r3, #0
 1114 00d0 0AD1     		bne	.L47
 1115              		.loc 1 1273 126 discriminator 2
 1116 00d2 FB68     		ldr	r3, [r7, #12]
 1117 00d4 1B69     		ldr	r3, [r3, #16]
 1118              		.loc 1 1273 111 discriminator 2
 1119 00d6 002B     		cmp	r3, #0
 1120 00d8 06D1     		bne	.L47
 1121              	.L46:
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 1122              		.loc 1 1275 40
 1123 00da FB68     		ldr	r3, [r7, #12]
 1124 00dc 1B68     		ldr	r3, [r3]
 1125              		.loc 1 1275 50
 1126 00de 5B68     		ldr	r3, [r3, #4]
 1127              		.loc 1 1275 25
 1128 00e0 DAB2     		uxtb	r2, r3
 1129              		.loc 1 1275 23
 1130 00e2 FB69     		ldr	r3, [r7, #28]
 1131 00e4 1A70     		strb	r2, [r3]
 1132 00e6 08E0     		b	.L48
 1133              	.L47:
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 43


1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 1134              		.loc 1 1279 40
 1135 00e8 FB68     		ldr	r3, [r7, #12]
 1136 00ea 1B68     		ldr	r3, [r3]
 1137              		.loc 1 1279 50
 1138 00ec 5B68     		ldr	r3, [r3, #4]
 1139              		.loc 1 1279 25
 1140 00ee DBB2     		uxtb	r3, r3
 1141 00f0 03F07F03 		and	r3, r3, #127
 1142 00f4 DAB2     		uxtb	r2, r3
 1143              		.loc 1 1279 23
 1144 00f6 FB69     		ldr	r3, [r7, #28]
 1145 00f8 1A70     		strb	r2, [r3]
 1146              	.L48:
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata8bits++;
 1147              		.loc 1 1281 19
 1148 00fa FB69     		ldr	r3, [r7, #28]
 1149 00fc 0133     		adds	r3, r3, #1
 1150 00fe FB61     		str	r3, [r7, #28]
 1151              	.L45:
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
 1152              		.loc 1 1283 12
 1153 0100 FB68     		ldr	r3, [r7, #12]
 1154 0102 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1155 0104 9BB2     		uxth	r3, r3
 1156              		.loc 1 1283 25
 1157 0106 013B     		subs	r3, r3, #1
 1158 0108 9AB2     		uxth	r2, r3
 1159 010a FB68     		ldr	r3, [r7, #12]
 1160 010c DA85     		strh	r2, [r3, #46]	@ movhi
 1161              	.L42:
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1162              		.loc 1 1258 17
 1163 010e FB68     		ldr	r3, [r7, #12]
 1164 0110 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1165 0112 9BB2     		uxth	r3, r3
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1166              		.loc 1 1258 31
 1167 0114 002B     		cmp	r3, #0
 1168 0116 B2D1     		bne	.L49
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1169              		.loc 1 1287 20
 1170 0118 FB68     		ldr	r3, [r7, #12]
 1171 011a 2022     		movs	r2, #32
 1172 011c 83F84220 		strb	r2, [r3, #66]
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1173              		.loc 1 1289 12
 1174 0120 0023     		movs	r3, #0
 1175 0122 00E0     		b	.L39
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 44


 1176              	.L36:
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1177              		.loc 1 1293 12
 1178 0124 0223     		movs	r3, #2
 1179              	.L39:
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1180              		.loc 1 1295 1
 1181 0126 1846     		mov	r0, r3
 1182 0128 2037     		adds	r7, r7, #32
 1183              	.LCFI45:
 1184              		.cfi_def_cfa_offset 8
 1185 012a BD46     		mov	sp, r7
 1186              	.LCFI46:
 1187              		.cfi_def_cfa_register 13
 1188              		@ sp needed
 1189 012c 80BD     		pop	{r7, pc}
 1190              		.cfi_endproc
 1191              	.LFE142:
 1193              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1194              		.align	1
 1195              		.global	HAL_UART_Transmit_IT
 1196              		.syntax unified
 1197              		.thumb
 1198              		.thumb_func
 1200              	HAL_UART_Transmit_IT:
 1201              	.LFB143:
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Si
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1202              		.loc 1 1309 1
 1203              		.cfi_startproc
 1204              		@ args = 0, pretend = 0, frame = 16
 1205              		@ frame_needed = 1, uses_anonymous_args = 0
 1206              		@ link register save eliminated.
 1207 0000 80B4     		push	{r7}
 1208              	.LCFI47:
 1209              		.cfi_def_cfa_offset 4
 1210              		.cfi_offset 7, -4
 1211 0002 85B0     		sub	sp, sp, #20
 1212              	.LCFI48:
 1213              		.cfi_def_cfa_offset 24
 1214 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 45


 1215              	.LCFI49:
 1216              		.cfi_def_cfa_register 7
 1217 0006 F860     		str	r0, [r7, #12]
 1218 0008 B960     		str	r1, [r7, #8]
 1219 000a 1346     		mov	r3, r2
 1220 000c FB80     		strh	r3, [r7, #6]	@ movhi
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1221              		.loc 1 1311 12
 1222 000e FB68     		ldr	r3, [r7, #12]
 1223 0010 93F84130 		ldrb	r3, [r3, #65]
 1224 0014 DBB2     		uxtb	r3, r3
 1225              		.loc 1 1311 6
 1226 0016 202B     		cmp	r3, #32
 1227 0018 21D1     		bne	.L51
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1228              		.loc 1 1313 8
 1229 001a BB68     		ldr	r3, [r7, #8]
 1230 001c 002B     		cmp	r3, #0
 1231 001e 02D0     		beq	.L52
 1232              		.loc 1 1313 25 discriminator 1
 1233 0020 FB88     		ldrh	r3, [r7, #6]
 1234 0022 002B     		cmp	r3, #0
 1235 0024 01D1     		bne	.L53
 1236              	.L52:
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1237              		.loc 1 1315 14
 1238 0026 0123     		movs	r3, #1
 1239 0028 1AE0     		b	.L54
 1240              	.L53:
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1241              		.loc 1 1318 23
 1242 002a FB68     		ldr	r3, [r7, #12]
 1243 002c BA68     		ldr	r2, [r7, #8]
 1244 002e 1A62     		str	r2, [r3, #32]
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1245              		.loc 1 1319 23
 1246 0030 FB68     		ldr	r3, [r7, #12]
 1247 0032 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1248 0034 9A84     		strh	r2, [r3, #36]	@ movhi
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1249              		.loc 1 1320 24
 1250 0036 FB68     		ldr	r3, [r7, #12]
 1251 0038 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1252 003a DA84     		strh	r2, [r3, #38]	@ movhi
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1253              		.loc 1 1322 22
 1254 003c FB68     		ldr	r3, [r7, #12]
 1255 003e 0022     		movs	r2, #0
 1256 0040 5A64     		str	r2, [r3, #68]
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1257              		.loc 1 1323 19
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 46


 1258 0042 FB68     		ldr	r3, [r7, #12]
 1259 0044 2122     		movs	r2, #33
 1260 0046 83F84120 		strb	r2, [r3, #65]
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 1261              		.loc 1 1326 5
 1262 004a FB68     		ldr	r3, [r7, #12]
 1263 004c 1B68     		ldr	r3, [r3]
 1264 004e DA68     		ldr	r2, [r3, #12]
 1265 0050 FB68     		ldr	r3, [r7, #12]
 1266 0052 1B68     		ldr	r3, [r3]
 1267 0054 42F08002 		orr	r2, r2, #128
 1268 0058 DA60     		str	r2, [r3, #12]
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1269              		.loc 1 1328 12
 1270 005a 0023     		movs	r3, #0
 1271 005c 00E0     		b	.L54
 1272              	.L51:
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1273              		.loc 1 1332 12
 1274 005e 0223     		movs	r3, #2
 1275              	.L54:
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1276              		.loc 1 1334 1
 1277 0060 1846     		mov	r0, r3
 1278 0062 1437     		adds	r7, r7, #20
 1279              	.LCFI50:
 1280              		.cfi_def_cfa_offset 4
 1281 0064 BD46     		mov	sp, r7
 1282              	.LCFI51:
 1283              		.cfi_def_cfa_register 13
 1284              		@ sp needed
 1285 0066 5DF8047B 		ldr	r7, [sp], #4
 1286              	.LCFI52:
 1287              		.cfi_restore 7
 1288              		.cfi_def_cfa_offset 0
 1289 006a 7047     		bx	lr
 1290              		.cfi_endproc
 1291              	.LFE143:
 1293              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1294              		.align	1
 1295              		.global	HAL_UART_Receive_IT
 1296              		.syntax unified
 1297              		.thumb
 1298              		.thumb_func
 1300              	HAL_UART_Receive_IT:
 1301              	.LFB144:
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode.
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 47


1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1302              		.loc 1 1348 1
 1303              		.cfi_startproc
 1304              		@ args = 0, pretend = 0, frame = 16
 1305              		@ frame_needed = 1, uses_anonymous_args = 0
 1306 0000 80B5     		push	{r7, lr}
 1307              	.LCFI53:
 1308              		.cfi_def_cfa_offset 8
 1309              		.cfi_offset 7, -8
 1310              		.cfi_offset 14, -4
 1311 0002 84B0     		sub	sp, sp, #16
 1312              	.LCFI54:
 1313              		.cfi_def_cfa_offset 24
 1314 0004 00AF     		add	r7, sp, #0
 1315              	.LCFI55:
 1316              		.cfi_def_cfa_register 7
 1317 0006 F860     		str	r0, [r7, #12]
 1318 0008 B960     		str	r1, [r7, #8]
 1319 000a 1346     		mov	r3, r2
 1320 000c FB80     		strh	r3, [r7, #6]	@ movhi
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1321              		.loc 1 1350 12
 1322 000e FB68     		ldr	r3, [r7, #12]
 1323 0010 93F84230 		ldrb	r3, [r3, #66]
 1324 0014 DBB2     		uxtb	r3, r3
 1325              		.loc 1 1350 6
 1326 0016 202B     		cmp	r3, #32
 1327 0018 12D1     		bne	.L56
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1328              		.loc 1 1352 8
 1329 001a BB68     		ldr	r3, [r7, #8]
 1330 001c 002B     		cmp	r3, #0
 1331 001e 02D0     		beq	.L57
 1332              		.loc 1 1352 25 discriminator 1
 1333 0020 FB88     		ldrh	r3, [r7, #6]
 1334 0022 002B     		cmp	r3, #0
 1335 0024 01D1     		bne	.L58
 1336              	.L57:
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1337              		.loc 1 1354 14
 1338 0026 0123     		movs	r3, #1
 1339 0028 0BE0     		b	.L59
 1340              	.L58:
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 48


1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1341              		.loc 1 1358 26
 1342 002a FB68     		ldr	r3, [r7, #12]
 1343 002c 0022     		movs	r2, #0
 1344 002e 1A63     		str	r2, [r3, #48]
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return (UART_Start_Receive_IT(huart, pData, Size));
 1345              		.loc 1 1360 13
 1346 0030 FB88     		ldrh	r3, [r7, #6]
 1347 0032 1A46     		mov	r2, r3
 1348 0034 B968     		ldr	r1, [r7, #8]
 1349 0036 F868     		ldr	r0, [r7, #12]
 1350 0038 FFF7FEFF 		bl	UART_Start_Receive_IT
 1351 003c 0346     		mov	r3, r0
 1352 003e 00E0     		b	.L59
 1353              	.L56:
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1354              		.loc 1 1364 12
 1355 0040 0223     		movs	r3, #2
 1356              	.L59:
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1357              		.loc 1 1366 1
 1358 0042 1846     		mov	r0, r3
 1359 0044 1037     		adds	r7, r7, #16
 1360              	.LCFI56:
 1361              		.cfi_def_cfa_offset 8
 1362 0046 BD46     		mov	sp, r7
 1363              	.LCFI57:
 1364              		.cfi_def_cfa_register 13
 1365              		@ sp needed
 1366 0048 80BD     		pop	{r7, pc}
 1367              		.cfi_endproc
 1368              	.LFE144:
 1370              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1371              		.align	1
 1372              		.global	HAL_UART_Transmit_DMA
 1373              		.syntax unified
 1374              		.thumb
 1375              		.thumb_func
 1377              	HAL_UART_Transmit_DMA:
 1378              	.LFB145:
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in DMA mode.
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 49


1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t S
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1379              		.loc 1 1380 1
 1380              		.cfi_startproc
 1381              		@ args = 0, pretend = 0, frame = 48
 1382              		@ frame_needed = 1, uses_anonymous_args = 0
 1383 0000 80B5     		push	{r7, lr}
 1384              	.LCFI58:
 1385              		.cfi_def_cfa_offset 8
 1386              		.cfi_offset 7, -8
 1387              		.cfi_offset 14, -4
 1388 0002 8CB0     		sub	sp, sp, #48
 1389              	.LCFI59:
 1390              		.cfi_def_cfa_offset 56
 1391 0004 00AF     		add	r7, sp, #0
 1392              	.LCFI60:
 1393              		.cfi_def_cfa_register 7
 1394 0006 F860     		str	r0, [r7, #12]
 1395 0008 B960     		str	r1, [r7, #8]
 1396 000a 1346     		mov	r3, r2
 1397 000c FB80     		strh	r3, [r7, #6]	@ movhi
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint32_t *tmp;
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1398              		.loc 1 1384 12
 1399 000e FB68     		ldr	r3, [r7, #12]
 1400 0010 93F84130 		ldrb	r3, [r3, #65]
 1401 0014 DBB2     		uxtb	r3, r3
 1402              		.loc 1 1384 6
 1403 0016 202B     		cmp	r3, #32
 1404 0018 62D1     		bne	.L61
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1405              		.loc 1 1386 16
 1406 001a BB68     		ldr	r3, [r7, #8]
 1407              		.loc 1 1386 8
 1408 001c 002B     		cmp	r3, #0
 1409 001e 02D0     		beq	.L62
 1410              		.loc 1 1386 25 discriminator 1
 1411 0020 FB88     		ldrh	r3, [r7, #6]
 1412 0022 002B     		cmp	r3, #0
 1413 0024 01D1     		bne	.L63
 1414              	.L62:
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1415              		.loc 1 1388 14
 1416 0026 0123     		movs	r3, #1
 1417 0028 5BE0     		b	.L64
 1418              	.L63:
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1419              		.loc 1 1391 23
 1420 002a BA68     		ldr	r2, [r7, #8]
 1421 002c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 50


 1422 002e 1A62     		str	r2, [r3, #32]
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1423              		.loc 1 1392 23
 1424 0030 FB68     		ldr	r3, [r7, #12]
 1425 0032 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1426 0034 9A84     		strh	r2, [r3, #36]	@ movhi
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1427              		.loc 1 1393 24
 1428 0036 FB68     		ldr	r3, [r7, #12]
 1429 0038 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1430 003a DA84     		strh	r2, [r3, #38]	@ movhi
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1431              		.loc 1 1395 22
 1432 003c FB68     		ldr	r3, [r7, #12]
 1433 003e 0022     		movs	r2, #0
 1434 0040 5A64     		str	r2, [r3, #68]
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1435              		.loc 1 1396 19
 1436 0042 FB68     		ldr	r3, [r7, #12]
 1437 0044 2122     		movs	r2, #33
 1438 0046 83F84120 		strb	r2, [r3, #65]
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1439              		.loc 1 1399 10
 1440 004a FB68     		ldr	r3, [r7, #12]
 1441 004c 9B6B     		ldr	r3, [r3, #56]
 1442              		.loc 1 1399 37
 1443 004e 274A     		ldr	r2, .L69
 1444 0050 DA63     		str	r2, [r3, #60]
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1445              		.loc 1 1402 10
 1446 0052 FB68     		ldr	r3, [r7, #12]
 1447 0054 9B6B     		ldr	r3, [r3, #56]
 1448              		.loc 1 1402 41
 1449 0056 264A     		ldr	r2, .L69+4
 1450 0058 1A64     		str	r2, [r3, #64]
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1451              		.loc 1 1405 10
 1452 005a FB68     		ldr	r3, [r7, #12]
 1453 005c 9B6B     		ldr	r3, [r3, #56]
 1454              		.loc 1 1405 38
 1455 005e 254A     		ldr	r2, .L69+8
 1456 0060 DA64     		str	r2, [r3, #76]
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 1457              		.loc 1 1408 10
 1458 0062 FB68     		ldr	r3, [r7, #12]
 1459 0064 9B6B     		ldr	r3, [r3, #56]
 1460              		.loc 1 1408 38
 1461 0066 0022     		movs	r2, #0
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 51


 1462 0068 1A65     		str	r2, [r3, #80]
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA stream */
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (const uint32_t *)&pData;
 1463              		.loc 1 1411 9
 1464 006a 07F10803 		add	r3, r7, #8
 1465 006e FB62     		str	r3, [r7, #44]
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_DMA_Start_IT(huart->hdmatx, *(const uint32_t *)tmp, (uint32_t)&huart->Instance->DR, Siz
 1466              		.loc 1 1412 9
 1467 0070 FB68     		ldr	r3, [r7, #12]
 1468 0072 986B     		ldr	r0, [r3, #56]
 1469 0074 FB6A     		ldr	r3, [r7, #44]
 1470 0076 1968     		ldr	r1, [r3]
 1471              		.loc 1 1412 81
 1472 0078 FB68     		ldr	r3, [r7, #12]
 1473 007a 1B68     		ldr	r3, [r3]
 1474              		.loc 1 1412 75
 1475 007c 0433     		adds	r3, r3, #4
 1476              		.loc 1 1412 9
 1477 007e 1A46     		mov	r2, r3
 1478 0080 FB88     		ldrh	r3, [r7, #6]
 1479 0082 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1480 0086 0346     		mov	r3, r0
 1481              		.loc 1 1412 8 discriminator 1
 1482 0088 002B     		cmp	r3, #0
 1483 008a 08D0     		beq	.L65
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set error code to DMA */
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode = HAL_UART_ERROR_DMA;
 1484              		.loc 1 1415 24
 1485 008c FB68     		ldr	r3, [r7, #12]
 1486 008e 1022     		movs	r2, #16
 1487 0090 5A64     		str	r2, [r3, #68]
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to ready */
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 1488              		.loc 1 1418 21
 1489 0092 FB68     		ldr	r3, [r7, #12]
 1490 0094 2022     		movs	r2, #32
 1491 0096 83F84120 		strb	r2, [r3, #65]
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1492              		.loc 1 1420 14
 1493 009a 0123     		movs	r3, #1
 1494 009c 21E0     		b	.L64
 1495              	.L65:
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 1496              		.loc 1 1423 5
 1497 009e FB68     		ldr	r3, [r7, #12]
 1498 00a0 1B68     		ldr	r3, [r3]
 1499 00a2 6FF04002 		mvn	r2, #64
 1500 00a6 1A60     		str	r2, [r3]
 1501              	.L68:
 1502              	.LBB310:
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 52


1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1503              		.loc 1 1427 5 discriminator 1
 1504 00a8 FB68     		ldr	r3, [r7, #12]
 1505 00aa 1B68     		ldr	r3, [r3]
 1506 00ac 1433     		adds	r3, r3, #20
 1507 00ae BB61     		str	r3, [r7, #24]
 1508              	.LBB311:
 1509              	.LBB312:
 1510              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 53


  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 54


 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 55


 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 56


 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 57


 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 58


 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 59


 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 60


 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 1511              		.loc 2 480 4
 1512 00b0 BB69     		ldr	r3, [r7, #24]
 1513              		.syntax unified
 1514              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1515 00b2 53E8003F 		ldrex r3, [r3]
 1516              	@ 0 "" 2
 1517              		.thumb
 1518              		.syntax unified
 1519 00b6 7B61     		str	r3, [r7, #20]
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1520              		.loc 2 481 10
 1521 00b8 7B69     		ldr	r3, [r7, #20]
 1522              	.LBE312:
 1523              	.LBE311:
 1524              		.loc 1 1427 5 discriminator 1
 1525 00ba 43F08003 		orr	r3, r3, #128
 1526 00be BB62     		str	r3, [r7, #40]
 1527 00c0 FB68     		ldr	r3, [r7, #12]
 1528 00c2 1B68     		ldr	r3, [r3]
 1529 00c4 1433     		adds	r3, r3, #20
 1530 00c6 BA6A     		ldr	r2, [r7, #40]
 1531 00c8 7A62     		str	r2, [r7, #36]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 61


 1532 00ca 3B62     		str	r3, [r7, #32]
 1533              	.LBB313:
 1534              	.LBB314:
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 1535              		.loc 2 531 4
 1536 00cc 396A     		ldr	r1, [r7, #32]
 1537 00ce 7A6A     		ldr	r2, [r7, #36]
 1538              		.syntax unified
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 62


 1539              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1540 00d0 41E80023 		strex r3, r2, [r1]
 1541              	@ 0 "" 2
 1542              		.thumb
 1543              		.syntax unified
 1544 00d4 FB61     		str	r3, [r7, #28]
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1545              		.loc 2 532 10
 1546 00d6 FB69     		ldr	r3, [r7, #28]
 1547              	.LBE314:
 1548              	.LBE313:
 1549              		.loc 1 1427 5 discriminator 1
 1550 00d8 002B     		cmp	r3, #0
 1551 00da E5D1     		bne	.L68
 1552              	.LBE310:
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1553              		.loc 1 1429 12
 1554 00dc 0023     		movs	r3, #0
 1555 00de 00E0     		b	.L64
 1556              	.L61:
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1557              		.loc 1 1433 12
 1558 00e0 0223     		movs	r3, #2
 1559              	.L64:
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1560              		.loc 1 1435 1
 1561 00e2 1846     		mov	r0, r3
 1562 00e4 3037     		adds	r7, r7, #48
 1563              	.LCFI61:
 1564              		.cfi_def_cfa_offset 8
 1565 00e6 BD46     		mov	sp, r7
 1566              	.LCFI62:
 1567              		.cfi_def_cfa_register 13
 1568              		@ sp needed
 1569 00e8 80BD     		pop	{r7, pc}
 1570              	.L70:
 1571 00ea 00BF     		.align	2
 1572              	.L69:
 1573 00ec 00000000 		.word	UART_DMATransmitCplt
 1574 00f0 00000000 		.word	UART_DMATxHalfCplt
 1575 00f4 00000000 		.word	UART_DMAError
 1576              		.cfi_endproc
 1577              	.LFE145:
 1579              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1580              		.align	1
 1581              		.global	HAL_UART_Receive_DMA
 1582              		.syntax unified
 1583              		.thumb
 1584              		.thumb_func
 1586              	HAL_UART_Receive_DMA:
 1587              	.LFB146:
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 63


1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in DMA mode.
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the received data contains the parity bit.
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1588              		.loc 1 1450 1
 1589              		.cfi_startproc
 1590              		@ args = 0, pretend = 0, frame = 16
 1591              		@ frame_needed = 1, uses_anonymous_args = 0
 1592 0000 80B5     		push	{r7, lr}
 1593              	.LCFI63:
 1594              		.cfi_def_cfa_offset 8
 1595              		.cfi_offset 7, -8
 1596              		.cfi_offset 14, -4
 1597 0002 84B0     		sub	sp, sp, #16
 1598              	.LCFI64:
 1599              		.cfi_def_cfa_offset 24
 1600 0004 00AF     		add	r7, sp, #0
 1601              	.LCFI65:
 1602              		.cfi_def_cfa_register 7
 1603 0006 F860     		str	r0, [r7, #12]
 1604 0008 B960     		str	r1, [r7, #8]
 1605 000a 1346     		mov	r3, r2
 1606 000c FB80     		strh	r3, [r7, #6]	@ movhi
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1607              		.loc 1 1452 12
 1608 000e FB68     		ldr	r3, [r7, #12]
 1609 0010 93F84230 		ldrb	r3, [r3, #66]
 1610 0014 DBB2     		uxtb	r3, r3
 1611              		.loc 1 1452 6
 1612 0016 202B     		cmp	r3, #32
 1613 0018 12D1     		bne	.L72
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1614              		.loc 1 1454 8
 1615 001a BB68     		ldr	r3, [r7, #8]
 1616 001c 002B     		cmp	r3, #0
 1617 001e 02D0     		beq	.L73
 1618              		.loc 1 1454 25 discriminator 1
 1619 0020 FB88     		ldrh	r3, [r7, #6]
 1620 0022 002B     		cmp	r3, #0
 1621 0024 01D1     		bne	.L74
 1622              	.L73:
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1623              		.loc 1 1456 14
 1624 0026 0123     		movs	r3, #1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 64


 1625 0028 0BE0     		b	.L75
 1626              	.L74:
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1627              		.loc 1 1460 26
 1628 002a FB68     		ldr	r3, [r7, #12]
 1629 002c 0022     		movs	r2, #0
 1630 002e 1A63     		str	r2, [r3, #48]
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return (UART_Start_Receive_DMA(huart, pData, Size));
 1631              		.loc 1 1462 13
 1632 0030 FB88     		ldrh	r3, [r7, #6]
 1633 0032 1A46     		mov	r2, r3
 1634 0034 B968     		ldr	r1, [r7, #8]
 1635 0036 F868     		ldr	r0, [r7, #12]
 1636 0038 FFF7FEFF 		bl	UART_Start_Receive_DMA
 1637 003c 0346     		mov	r3, r0
 1638 003e 00E0     		b	.L75
 1639              	.L72:
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1640              		.loc 1 1466 12
 1641 0040 0223     		movs	r3, #2
 1642              	.L75:
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1643              		.loc 1 1468 1
 1644 0042 1846     		mov	r0, r3
 1645 0044 1037     		adds	r7, r7, #16
 1646              	.LCFI66:
 1647              		.cfi_def_cfa_offset 8
 1648 0046 BD46     		mov	sp, r7
 1649              	.LCFI67:
 1650              		.cfi_def_cfa_register 13
 1651              		@ sp needed
 1652 0048 80BD     		pop	{r7, pc}
 1653              		.cfi_endproc
 1654              	.LFE146:
 1656              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1657              		.align	1
 1658              		.global	HAL_UART_DMAPause
 1659              		.syntax unified
 1660              		.thumb
 1661              		.thumb_func
 1663              	HAL_UART_DMAPause:
 1664              	.LFB147:
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 65


1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1665              		.loc 1 1477 1
 1666              		.cfi_startproc
 1667              		@ args = 0, pretend = 0, frame = 112
 1668              		@ frame_needed = 1, uses_anonymous_args = 0
 1669              		@ link register save eliminated.
 1670 0000 80B4     		push	{r7}
 1671              	.LCFI68:
 1672              		.cfi_def_cfa_offset 4
 1673              		.cfi_offset 7, -4
 1674 0002 9DB0     		sub	sp, sp, #116
 1675              	.LCFI69:
 1676              		.cfi_def_cfa_offset 120
 1677 0004 00AF     		add	r7, sp, #0
 1678              	.LCFI70:
 1679              		.cfi_def_cfa_register 7
 1680 0006 7860     		str	r0, [r7, #4]
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1681              		.loc 1 1478 12
 1682 0008 0023     		movs	r3, #0
 1683 000a FB66     		str	r3, [r7, #108]
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1684              		.loc 1 1480 16
 1685 000c 7B68     		ldr	r3, [r7, #4]
 1686 000e 1B68     		ldr	r3, [r3]
 1687 0010 5B69     		ldr	r3, [r3, #20]
 1688 0012 03F08003 		and	r3, r3, #128
 1689 0016 802B     		cmp	r3, #128
 1690 0018 0CBF     		ite	eq
 1691 001a 0123     		moveq	r3, #1
 1692 001c 0023     		movne	r3, #0
 1693 001e DBB2     		uxtb	r3, r3
 1694              		.loc 1 1480 14
 1695 0020 FB66     		str	r3, [r7, #108]
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1696              		.loc 1 1481 13
 1697 0022 7B68     		ldr	r3, [r7, #4]
 1698 0024 93F84130 		ldrb	r3, [r3, #65]
 1699 0028 DBB2     		uxtb	r3, r3
 1700              		.loc 1 1481 6
 1701 002a 212B     		cmp	r3, #33
 1702 002c 1CD1     		bne	.L77
 1703              		.loc 1 1481 49 discriminator 1
 1704 002e FB6E     		ldr	r3, [r7, #108]
 1705 0030 002B     		cmp	r3, #0
 1706 0032 19D0     		beq	.L77
 1707              	.L80:
 1708              	.LBB315:
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1709              		.loc 1 1484 5 discriminator 1
 1710 0034 7B68     		ldr	r3, [r7, #4]
 1711 0036 1B68     		ldr	r3, [r3]
 1712 0038 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 66


 1713 003a FB64     		str	r3, [r7, #76]
 1714              	.LBB316:
 1715              	.LBB317:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1716              		.loc 2 480 4
 1717 003c FB6C     		ldr	r3, [r7, #76]
 1718              		.syntax unified
 1719              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1720 003e 53E8003F 		ldrex r3, [r3]
 1721              	@ 0 "" 2
 1722              		.thumb
 1723              		.syntax unified
 1724 0042 BB64     		str	r3, [r7, #72]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1725              		.loc 2 481 10
 1726 0044 BB6C     		ldr	r3, [r7, #72]
 1727              	.LBE317:
 1728              	.LBE316:
 1729              		.loc 1 1484 5 discriminator 1
 1730 0046 23F08003 		bic	r3, r3, #128
 1731 004a BB66     		str	r3, [r7, #104]
 1732 004c 7B68     		ldr	r3, [r7, #4]
 1733 004e 1B68     		ldr	r3, [r3]
 1734 0050 1433     		adds	r3, r3, #20
 1735 0052 BA6E     		ldr	r2, [r7, #104]
 1736 0054 BA65     		str	r2, [r7, #88]
 1737 0056 7B65     		str	r3, [r7, #84]
 1738              	.LBB318:
 1739              	.LBB319:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1740              		.loc 2 531 4
 1741 0058 796D     		ldr	r1, [r7, #84]
 1742 005a BA6D     		ldr	r2, [r7, #88]
 1743              		.syntax unified
 1744              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1745 005c 41E80023 		strex r3, r2, [r1]
 1746              	@ 0 "" 2
 1747              		.thumb
 1748              		.syntax unified
 1749 0060 3B65     		str	r3, [r7, #80]
 1750              		.loc 2 532 10
 1751 0062 3B6D     		ldr	r3, [r7, #80]
 1752              	.LBE319:
 1753              	.LBE318:
 1754              		.loc 1 1484 5 discriminator 1
 1755 0064 002B     		cmp	r3, #0
 1756 0066 E5D1     		bne	.L80
 1757              	.L77:
 1758              	.LBE315:
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 1759              		.loc 1 1487 16
 1760 0068 7B68     		ldr	r3, [r7, #4]
 1761 006a 1B68     		ldr	r3, [r3]
 1762 006c 5B69     		ldr	r3, [r3, #20]
 1763 006e 03F04003 		and	r3, r3, #64
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 67


 1764 0072 402B     		cmp	r3, #64
 1765 0074 0CBF     		ite	eq
 1766 0076 0123     		moveq	r3, #1
 1767 0078 0023     		movne	r3, #0
 1768 007a DBB2     		uxtb	r3, r3
 1769              		.loc 1 1487 14
 1770 007c FB66     		str	r3, [r7, #108]
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1771              		.loc 1 1488 13
 1772 007e 7B68     		ldr	r3, [r7, #4]
 1773 0080 93F84230 		ldrb	r3, [r3, #66]
 1774 0084 DBB2     		uxtb	r3, r3
 1775              		.loc 1 1488 6
 1776 0086 222B     		cmp	r3, #34
 1777 0088 50D1     		bne	.L81
 1778              		.loc 1 1488 50 discriminator 1
 1779 008a FB6E     		ldr	r3, [r7, #108]
 1780 008c 002B     		cmp	r3, #0
 1781 008e 4DD0     		beq	.L81
 1782              	.L84:
 1783              	.LBB320:
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1784              		.loc 1 1491 5 discriminator 1
 1785 0090 7B68     		ldr	r3, [r7, #4]
 1786 0092 1B68     		ldr	r3, [r3]
 1787 0094 0C33     		adds	r3, r3, #12
 1788 0096 BB63     		str	r3, [r7, #56]
 1789              	.LBB321:
 1790              	.LBB322:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1791              		.loc 2 480 4
 1792 0098 BB6B     		ldr	r3, [r7, #56]
 1793              		.syntax unified
 1794              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1795 009a 53E8003F 		ldrex r3, [r3]
 1796              	@ 0 "" 2
 1797              		.thumb
 1798              		.syntax unified
 1799 009e 7B63     		str	r3, [r7, #52]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1800              		.loc 2 481 10
 1801 00a0 7B6B     		ldr	r3, [r7, #52]
 1802              	.LBE322:
 1803              	.LBE321:
 1804              		.loc 1 1491 5 discriminator 1
 1805 00a2 23F48073 		bic	r3, r3, #256
 1806 00a6 7B66     		str	r3, [r7, #100]
 1807 00a8 7B68     		ldr	r3, [r7, #4]
 1808 00aa 1B68     		ldr	r3, [r3]
 1809 00ac 0C33     		adds	r3, r3, #12
 1810 00ae 7A6E     		ldr	r2, [r7, #100]
 1811 00b0 7A64     		str	r2, [r7, #68]
 1812 00b2 3B64     		str	r3, [r7, #64]
 1813              	.LBB323:
 1814              	.LBB324:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 68


 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1815              		.loc 2 531 4
 1816 00b4 396C     		ldr	r1, [r7, #64]
 1817 00b6 7A6C     		ldr	r2, [r7, #68]
 1818              		.syntax unified
 1819              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1820 00b8 41E80023 		strex r3, r2, [r1]
 1821              	@ 0 "" 2
 1822              		.thumb
 1823              		.syntax unified
 1824 00bc FB63     		str	r3, [r7, #60]
 1825              		.loc 2 532 10
 1826 00be FB6B     		ldr	r3, [r7, #60]
 1827              	.LBE324:
 1828              	.LBE323:
 1829              		.loc 1 1491 5 discriminator 1
 1830 00c0 002B     		cmp	r3, #0
 1831 00c2 E5D1     		bne	.L84
 1832              	.L87:
 1833              	.LBE320:
 1834              	.LBB325:
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1835              		.loc 1 1492 5 discriminator 1
 1836 00c4 7B68     		ldr	r3, [r7, #4]
 1837 00c6 1B68     		ldr	r3, [r3]
 1838 00c8 1433     		adds	r3, r3, #20
 1839 00ca 7B62     		str	r3, [r7, #36]
 1840              	.LBB326:
 1841              	.LBB327:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1842              		.loc 2 480 4
 1843 00cc 7B6A     		ldr	r3, [r7, #36]
 1844              		.syntax unified
 1845              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1846 00ce 53E8003F 		ldrex r3, [r3]
 1847              	@ 0 "" 2
 1848              		.thumb
 1849              		.syntax unified
 1850 00d2 3B62     		str	r3, [r7, #32]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1851              		.loc 2 481 10
 1852 00d4 3B6A     		ldr	r3, [r7, #32]
 1853              	.LBE327:
 1854              	.LBE326:
 1855              		.loc 1 1492 5 discriminator 1
 1856 00d6 23F00103 		bic	r3, r3, #1
 1857 00da 3B66     		str	r3, [r7, #96]
 1858 00dc 7B68     		ldr	r3, [r7, #4]
 1859 00de 1B68     		ldr	r3, [r3]
 1860 00e0 1433     		adds	r3, r3, #20
 1861 00e2 3A6E     		ldr	r2, [r7, #96]
 1862 00e4 3A63     		str	r2, [r7, #48]
 1863 00e6 FB62     		str	r3, [r7, #44]
 1864              	.LBB328:
 1865              	.LBB329:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1866              		.loc 2 531 4
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 69


 1867 00e8 F96A     		ldr	r1, [r7, #44]
 1868 00ea 3A6B     		ldr	r2, [r7, #48]
 1869              		.syntax unified
 1870              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1871 00ec 41E80023 		strex r3, r2, [r1]
 1872              	@ 0 "" 2
 1873              		.thumb
 1874              		.syntax unified
 1875 00f0 BB62     		str	r3, [r7, #40]
 1876              		.loc 2 532 10
 1877 00f2 BB6A     		ldr	r3, [r7, #40]
 1878              	.LBE329:
 1879              	.LBE328:
 1880              		.loc 1 1492 5 discriminator 1
 1881 00f4 002B     		cmp	r3, #0
 1882 00f6 E5D1     		bne	.L87
 1883              	.L90:
 1884              	.LBE325:
 1885              	.LBB330:
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1886              		.loc 1 1495 5 discriminator 1
 1887 00f8 7B68     		ldr	r3, [r7, #4]
 1888 00fa 1B68     		ldr	r3, [r3]
 1889 00fc 1433     		adds	r3, r3, #20
 1890 00fe 3B61     		str	r3, [r7, #16]
 1891              	.LBB331:
 1892              	.LBB332:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1893              		.loc 2 480 4
 1894 0100 3B69     		ldr	r3, [r7, #16]
 1895              		.syntax unified
 1896              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1897 0102 53E8003F 		ldrex r3, [r3]
 1898              	@ 0 "" 2
 1899              		.thumb
 1900              		.syntax unified
 1901 0106 FB60     		str	r3, [r7, #12]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1902              		.loc 2 481 10
 1903 0108 FB68     		ldr	r3, [r7, #12]
 1904              	.LBE332:
 1905              	.LBE331:
 1906              		.loc 1 1495 5 discriminator 1
 1907 010a 23F04003 		bic	r3, r3, #64
 1908 010e FB65     		str	r3, [r7, #92]
 1909 0110 7B68     		ldr	r3, [r7, #4]
 1910 0112 1B68     		ldr	r3, [r3]
 1911 0114 1433     		adds	r3, r3, #20
 1912 0116 FA6D     		ldr	r2, [r7, #92]
 1913 0118 FA61     		str	r2, [r7, #28]
 1914 011a BB61     		str	r3, [r7, #24]
 1915              	.LBB333:
 1916              	.LBB334:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1917              		.loc 2 531 4
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 70


 1918 011c B969     		ldr	r1, [r7, #24]
 1919 011e FA69     		ldr	r2, [r7, #28]
 1920              		.syntax unified
 1921              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1922 0120 41E80023 		strex r3, r2, [r1]
 1923              	@ 0 "" 2
 1924              		.thumb
 1925              		.syntax unified
 1926 0124 7B61     		str	r3, [r7, #20]
 1927              		.loc 2 532 10
 1928 0126 7B69     		ldr	r3, [r7, #20]
 1929              	.LBE334:
 1930              	.LBE333:
 1931              		.loc 1 1495 5 discriminator 1
 1932 0128 002B     		cmp	r3, #0
 1933 012a E5D1     		bne	.L90
 1934              	.L81:
 1935              	.LBE330:
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 1936              		.loc 1 1498 10
 1937 012c 0023     		movs	r3, #0
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1938              		.loc 1 1499 1
 1939 012e 1846     		mov	r0, r3
 1940 0130 7437     		adds	r7, r7, #116
 1941              	.LCFI71:
 1942              		.cfi_def_cfa_offset 4
 1943 0132 BD46     		mov	sp, r7
 1944              	.LCFI72:
 1945              		.cfi_def_cfa_register 13
 1946              		@ sp needed
 1947 0134 5DF8047B 		ldr	r7, [sp], #4
 1948              	.LCFI73:
 1949              		.cfi_restore 7
 1950              		.cfi_def_cfa_offset 0
 1951 0138 7047     		bx	lr
 1952              		.cfi_endproc
 1953              	.LFE147:
 1955              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1956              		.align	1
 1957              		.global	HAL_UART_DMAResume
 1958              		.syntax unified
 1959              		.thumb
 1960              		.thumb_func
 1962              	HAL_UART_DMAResume:
 1963              	.LFB148:
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 71


 1964              		.loc 1 1508 1
 1965              		.cfi_startproc
 1966              		@ args = 0, pretend = 0, frame = 112
 1967              		@ frame_needed = 1, uses_anonymous_args = 0
 1968              		@ link register save eliminated.
 1969 0000 80B4     		push	{r7}
 1970              	.LCFI74:
 1971              		.cfi_def_cfa_offset 4
 1972              		.cfi_offset 7, -4
 1973 0002 9DB0     		sub	sp, sp, #116
 1974              	.LCFI75:
 1975              		.cfi_def_cfa_offset 120
 1976 0004 00AF     		add	r7, sp, #0
 1977              	.LCFI76:
 1978              		.cfi_def_cfa_register 7
 1979 0006 7860     		str	r0, [r7, #4]
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 1980              		.loc 1 1510 12
 1981 0008 7B68     		ldr	r3, [r7, #4]
 1982 000a 93F84130 		ldrb	r3, [r3, #65]
 1983 000e DBB2     		uxtb	r3, r3
 1984              		.loc 1 1510 6
 1985 0010 212B     		cmp	r3, #33
 1986 0012 19D1     		bne	.L93
 1987              	.L96:
 1988              	.LBB335:
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1989              		.loc 1 1513 5 discriminator 1
 1990 0014 7B68     		ldr	r3, [r7, #4]
 1991 0016 1B68     		ldr	r3, [r3]
 1992 0018 1433     		adds	r3, r3, #20
 1993 001a 3B65     		str	r3, [r7, #80]
 1994              	.LBB336:
 1995              	.LBB337:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1996              		.loc 2 480 4
 1997 001c 3B6D     		ldr	r3, [r7, #80]
 1998              		.syntax unified
 1999              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2000 001e 53E8003F 		ldrex r3, [r3]
 2001              	@ 0 "" 2
 2002              		.thumb
 2003              		.syntax unified
 2004 0022 FB64     		str	r3, [r7, #76]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2005              		.loc 2 481 10
 2006 0024 FB6C     		ldr	r3, [r7, #76]
 2007              	.LBE337:
 2008              	.LBE336:
 2009              		.loc 1 1513 5 discriminator 1
 2010 0026 43F08003 		orr	r3, r3, #128
 2011 002a FB66     		str	r3, [r7, #108]
 2012 002c 7B68     		ldr	r3, [r7, #4]
 2013 002e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 72


 2014 0030 1433     		adds	r3, r3, #20
 2015 0032 FA6E     		ldr	r2, [r7, #108]
 2016 0034 FA65     		str	r2, [r7, #92]
 2017 0036 BB65     		str	r3, [r7, #88]
 2018              	.LBB338:
 2019              	.LBB339:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2020              		.loc 2 531 4
 2021 0038 B96D     		ldr	r1, [r7, #88]
 2022 003a FA6D     		ldr	r2, [r7, #92]
 2023              		.syntax unified
 2024              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2025 003c 41E80023 		strex r3, r2, [r1]
 2026              	@ 0 "" 2
 2027              		.thumb
 2028              		.syntax unified
 2029 0040 7B65     		str	r3, [r7, #84]
 2030              		.loc 2 532 10
 2031 0042 7B6D     		ldr	r3, [r7, #84]
 2032              	.LBE339:
 2033              	.LBE338:
 2034              		.loc 1 1513 5 discriminator 1
 2035 0044 002B     		cmp	r3, #0
 2036 0046 E5D1     		bne	.L96
 2037              	.L93:
 2038              	.LBE335:
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2039              		.loc 1 1516 12
 2040 0048 7B68     		ldr	r3, [r7, #4]
 2041 004a 93F84230 		ldrb	r3, [r3, #66]
 2042 004e DBB2     		uxtb	r3, r3
 2043              		.loc 1 1516 6
 2044 0050 222B     		cmp	r3, #34
 2045 0052 5CD1     		bne	.L97
 2046              	.LBB340:
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 2047              		.loc 1 1519 5
 2048 0054 0023     		movs	r3, #0
 2049 0056 FB60     		str	r3, [r7, #12]
 2050 0058 7B68     		ldr	r3, [r7, #4]
 2051 005a 1B68     		ldr	r3, [r3]
 2052 005c 1B68     		ldr	r3, [r3]
 2053 005e FB60     		str	r3, [r7, #12]
 2054 0060 7B68     		ldr	r3, [r7, #4]
 2055 0062 1B68     		ldr	r3, [r3]
 2056 0064 5B68     		ldr	r3, [r3, #4]
 2057 0066 FB60     		str	r3, [r7, #12]
 2058 0068 FB68     		ldr	r3, [r7, #12]
 2059              	.LBE340:
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Init.Parity != UART_PARITY_NONE)
 2060              		.loc 1 1522 20
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 73


 2061 006a 7B68     		ldr	r3, [r7, #4]
 2062 006c 1B69     		ldr	r3, [r3, #16]
 2063              		.loc 1 1522 8
 2064 006e 002B     		cmp	r3, #0
 2065 0070 19D0     		beq	.L104
 2066              	.L101:
 2067              	.LBB341:
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2068              		.loc 1 1524 7 discriminator 1
 2069 0072 7B68     		ldr	r3, [r7, #4]
 2070 0074 1B68     		ldr	r3, [r3]
 2071 0076 0C33     		adds	r3, r3, #12
 2072 0078 FB63     		str	r3, [r7, #60]
 2073              	.LBB342:
 2074              	.LBB343:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2075              		.loc 2 480 4
 2076 007a FB6B     		ldr	r3, [r7, #60]
 2077              		.syntax unified
 2078              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2079 007c 53E8003F 		ldrex r3, [r3]
 2080              	@ 0 "" 2
 2081              		.thumb
 2082              		.syntax unified
 2083 0080 BB63     		str	r3, [r7, #56]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2084              		.loc 2 481 10
 2085 0082 BB6B     		ldr	r3, [r7, #56]
 2086              	.LBE343:
 2087              	.LBE342:
 2088              		.loc 1 1524 7 discriminator 1
 2089 0084 43F48073 		orr	r3, r3, #256
 2090 0088 BB66     		str	r3, [r7, #104]
 2091 008a 7B68     		ldr	r3, [r7, #4]
 2092 008c 1B68     		ldr	r3, [r3]
 2093 008e 0C33     		adds	r3, r3, #12
 2094 0090 BA6E     		ldr	r2, [r7, #104]
 2095 0092 BA64     		str	r2, [r7, #72]
 2096 0094 7B64     		str	r3, [r7, #68]
 2097              	.LBB344:
 2098              	.LBB345:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2099              		.loc 2 531 4
 2100 0096 796C     		ldr	r1, [r7, #68]
 2101 0098 BA6C     		ldr	r2, [r7, #72]
 2102              		.syntax unified
 2103              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2104 009a 41E80023 		strex r3, r2, [r1]
 2105              	@ 0 "" 2
 2106              		.thumb
 2107              		.syntax unified
 2108 009e 3B64     		str	r3, [r7, #64]
 2109              		.loc 2 532 10
 2110 00a0 3B6C     		ldr	r3, [r7, #64]
 2111              	.LBE345:
 2112              	.LBE344:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 74


 2113              		.loc 1 1524 7 discriminator 1
 2114 00a2 002B     		cmp	r3, #0
 2115 00a4 E5D1     		bne	.L101
 2116              	.L104:
 2117              	.LBE341:
 2118              	.LBB346:
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2119              		.loc 1 1526 5 discriminator 1
 2120 00a6 7B68     		ldr	r3, [r7, #4]
 2121 00a8 1B68     		ldr	r3, [r3]
 2122 00aa 1433     		adds	r3, r3, #20
 2123 00ac BB62     		str	r3, [r7, #40]
 2124              	.LBB347:
 2125              	.LBB348:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2126              		.loc 2 480 4
 2127 00ae BB6A     		ldr	r3, [r7, #40]
 2128              		.syntax unified
 2129              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2130 00b0 53E8003F 		ldrex r3, [r3]
 2131              	@ 0 "" 2
 2132              		.thumb
 2133              		.syntax unified
 2134 00b4 7B62     		str	r3, [r7, #36]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2135              		.loc 2 481 10
 2136 00b6 7B6A     		ldr	r3, [r7, #36]
 2137              	.LBE348:
 2138              	.LBE347:
 2139              		.loc 1 1526 5 discriminator 1
 2140 00b8 43F00103 		orr	r3, r3, #1
 2141 00bc 7B66     		str	r3, [r7, #100]
 2142 00be 7B68     		ldr	r3, [r7, #4]
 2143 00c0 1B68     		ldr	r3, [r3]
 2144 00c2 1433     		adds	r3, r3, #20
 2145 00c4 7A6E     		ldr	r2, [r7, #100]
 2146 00c6 7A63     		str	r2, [r7, #52]
 2147 00c8 3B63     		str	r3, [r7, #48]
 2148              	.LBB349:
 2149              	.LBB350:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2150              		.loc 2 531 4
 2151 00ca 396B     		ldr	r1, [r7, #48]
 2152 00cc 7A6B     		ldr	r2, [r7, #52]
 2153              		.syntax unified
 2154              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2155 00ce 41E80023 		strex r3, r2, [r1]
 2156              	@ 0 "" 2
 2157              		.thumb
 2158              		.syntax unified
 2159 00d2 FB62     		str	r3, [r7, #44]
 2160              		.loc 2 532 10
 2161 00d4 FB6A     		ldr	r3, [r7, #44]
 2162              	.LBE350:
 2163              	.LBE349:
 2164              		.loc 1 1526 5 discriminator 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 75


 2165 00d6 002B     		cmp	r3, #0
 2166 00d8 E5D1     		bne	.L104
 2167              	.L107:
 2168              	.LBE346:
 2169              	.LBB351:
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2170              		.loc 1 1529 5 discriminator 1
 2171 00da 7B68     		ldr	r3, [r7, #4]
 2172 00dc 1B68     		ldr	r3, [r3]
 2173 00de 1433     		adds	r3, r3, #20
 2174 00e0 7B61     		str	r3, [r7, #20]
 2175              	.LBB352:
 2176              	.LBB353:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2177              		.loc 2 480 4
 2178 00e2 7B69     		ldr	r3, [r7, #20]
 2179              		.syntax unified
 2180              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2181 00e4 53E8003F 		ldrex r3, [r3]
 2182              	@ 0 "" 2
 2183              		.thumb
 2184              		.syntax unified
 2185 00e8 3B61     		str	r3, [r7, #16]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2186              		.loc 2 481 10
 2187 00ea 3B69     		ldr	r3, [r7, #16]
 2188              	.LBE353:
 2189              	.LBE352:
 2190              		.loc 1 1529 5 discriminator 1
 2191 00ec 43F04003 		orr	r3, r3, #64
 2192 00f0 3B66     		str	r3, [r7, #96]
 2193 00f2 7B68     		ldr	r3, [r7, #4]
 2194 00f4 1B68     		ldr	r3, [r3]
 2195 00f6 1433     		adds	r3, r3, #20
 2196 00f8 3A6E     		ldr	r2, [r7, #96]
 2197 00fa 3A62     		str	r2, [r7, #32]
 2198 00fc FB61     		str	r3, [r7, #28]
 2199              	.LBB354:
 2200              	.LBB355:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2201              		.loc 2 531 4
 2202 00fe F969     		ldr	r1, [r7, #28]
 2203 0100 3A6A     		ldr	r2, [r7, #32]
 2204              		.syntax unified
 2205              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2206 0102 41E80023 		strex r3, r2, [r1]
 2207              	@ 0 "" 2
 2208              		.thumb
 2209              		.syntax unified
 2210 0106 BB61     		str	r3, [r7, #24]
 2211              		.loc 2 532 10
 2212 0108 BB69     		ldr	r3, [r7, #24]
 2213              	.LBE355:
 2214              	.LBE354:
 2215              		.loc 1 1529 5 discriminator 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 76


 2216 010a 002B     		cmp	r3, #0
 2217 010c E5D1     		bne	.L107
 2218              	.L97:
 2219              	.LBE351:
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2220              		.loc 1 1532 10
 2221 010e 0023     		movs	r3, #0
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2222              		.loc 1 1533 1
 2223 0110 1846     		mov	r0, r3
 2224 0112 7437     		adds	r7, r7, #116
 2225              	.LCFI77:
 2226              		.cfi_def_cfa_offset 4
 2227 0114 BD46     		mov	sp, r7
 2228              	.LCFI78:
 2229              		.cfi_def_cfa_register 13
 2230              		@ sp needed
 2231 0116 5DF8047B 		ldr	r7, [sp], #4
 2232              	.LCFI79:
 2233              		.cfi_restore 7
 2234              		.cfi_def_cfa_offset 0
 2235 011a 7047     		bx	lr
 2236              		.cfi_endproc
 2237              	.LFE148:
 2239              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2240              		.align	1
 2241              		.global	HAL_UART_DMAStop
 2242              		.syntax unified
 2243              		.thumb
 2244              		.thumb_func
 2246              	HAL_UART_DMAStop:
 2247              	.LFB149:
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2248              		.loc 1 1542 1
 2249              		.cfi_startproc
 2250              		@ args = 0, pretend = 0, frame = 64
 2251              		@ frame_needed = 1, uses_anonymous_args = 0
 2252 0000 80B5     		push	{r7, lr}
 2253              	.LCFI80:
 2254              		.cfi_def_cfa_offset 8
 2255              		.cfi_offset 7, -8
 2256              		.cfi_offset 14, -4
 2257 0002 90B0     		sub	sp, sp, #64
 2258              	.LCFI81:
 2259              		.cfi_def_cfa_offset 72
 2260 0004 00AF     		add	r7, sp, #0
 2261              	.LCFI82:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 77


 2262              		.cfi_def_cfa_register 7
 2263 0006 7860     		str	r0, [r7, #4]
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2264              		.loc 1 1543 12
 2265 0008 0023     		movs	r3, #0
 2266 000a FB63     		str	r3, [r7, #60]
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 2267              		.loc 1 1551 16
 2268 000c 7B68     		ldr	r3, [r7, #4]
 2269 000e 1B68     		ldr	r3, [r3]
 2270 0010 5B69     		ldr	r3, [r3, #20]
 2271 0012 03F08003 		and	r3, r3, #128
 2272 0016 802B     		cmp	r3, #128
 2273 0018 0CBF     		ite	eq
 2274 001a 0123     		moveq	r3, #1
 2275 001c 0023     		movne	r3, #0
 2276 001e DBB2     		uxtb	r3, r3
 2277              		.loc 1 1551 14
 2278 0020 FB63     		str	r3, [r7, #60]
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2279              		.loc 1 1552 13
 2280 0022 7B68     		ldr	r3, [r7, #4]
 2281 0024 93F84130 		ldrb	r3, [r3, #65]
 2282 0028 DBB2     		uxtb	r3, r3
 2283              		.loc 1 1552 6
 2284 002a 212B     		cmp	r3, #33
 2285 002c 28D1     		bne	.L110
 2286              		.loc 1 1552 49 discriminator 1
 2287 002e FB6B     		ldr	r3, [r7, #60]
 2288 0030 002B     		cmp	r3, #0
 2289 0032 25D0     		beq	.L110
 2290              	.L113:
 2291              	.LBB356:
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2292              		.loc 1 1554 5 discriminator 1
 2293 0034 7B68     		ldr	r3, [r7, #4]
 2294 0036 1B68     		ldr	r3, [r3]
 2295 0038 1433     		adds	r3, r3, #20
 2296 003a 7B62     		str	r3, [r7, #36]
 2297              	.LBB357:
 2298              	.LBB358:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2299              		.loc 2 480 4
 2300 003c 7B6A     		ldr	r3, [r7, #36]
 2301              		.syntax unified
 2302              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2303 003e 53E8003F 		ldrex r3, [r3]
 2304              	@ 0 "" 2
 2305              		.thumb
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 78


 2306              		.syntax unified
 2307 0042 3B62     		str	r3, [r7, #32]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2308              		.loc 2 481 10
 2309 0044 3B6A     		ldr	r3, [r7, #32]
 2310              	.LBE358:
 2311              	.LBE357:
 2312              		.loc 1 1554 5 discriminator 1
 2313 0046 23F08003 		bic	r3, r3, #128
 2314 004a BB63     		str	r3, [r7, #56]
 2315 004c 7B68     		ldr	r3, [r7, #4]
 2316 004e 1B68     		ldr	r3, [r3]
 2317 0050 1433     		adds	r3, r3, #20
 2318 0052 BA6B     		ldr	r2, [r7, #56]
 2319 0054 3A63     		str	r2, [r7, #48]
 2320 0056 FB62     		str	r3, [r7, #44]
 2321              	.LBB359:
 2322              	.LBB360:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2323              		.loc 2 531 4
 2324 0058 F96A     		ldr	r1, [r7, #44]
 2325 005a 3A6B     		ldr	r2, [r7, #48]
 2326              		.syntax unified
 2327              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2328 005c 41E80023 		strex r3, r2, [r1]
 2329              	@ 0 "" 2
 2330              		.thumb
 2331              		.syntax unified
 2332 0060 BB62     		str	r3, [r7, #40]
 2333              		.loc 2 532 10
 2334 0062 BB6A     		ldr	r3, [r7, #40]
 2335              	.LBE360:
 2336              	.LBE359:
 2337              		.loc 1 1554 5 discriminator 1
 2338 0064 002B     		cmp	r3, #0
 2339 0066 E5D1     		bne	.L113
 2340              	.LBE356:
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream */
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2341              		.loc 1 1557 14
 2342 0068 7B68     		ldr	r3, [r7, #4]
 2343 006a 9B6B     		ldr	r3, [r3, #56]
 2344              		.loc 1 1557 8
 2345 006c 002B     		cmp	r3, #0
 2346 006e 04D0     		beq	.L114
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2347              		.loc 1 1559 7
 2348 0070 7B68     		ldr	r3, [r7, #4]
 2349 0072 9B6B     		ldr	r3, [r3, #56]
 2350 0074 1846     		mov	r0, r3
 2351 0076 FFF7FEFF 		bl	HAL_DMA_Abort
 2352              	.L114:
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2353              		.loc 1 1561 5
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 79


 2354 007a 7868     		ldr	r0, [r7, #4]
 2355 007c FFF7FEFF 		bl	UART_EndTxTransfer
 2356              	.L110:
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 2357              		.loc 1 1565 16
 2358 0080 7B68     		ldr	r3, [r7, #4]
 2359 0082 1B68     		ldr	r3, [r3]
 2360 0084 5B69     		ldr	r3, [r3, #20]
 2361 0086 03F04003 		and	r3, r3, #64
 2362 008a 402B     		cmp	r3, #64
 2363 008c 0CBF     		ite	eq
 2364 008e 0123     		moveq	r3, #1
 2365 0090 0023     		movne	r3, #0
 2366 0092 DBB2     		uxtb	r3, r3
 2367              		.loc 1 1565 14
 2368 0094 FB63     		str	r3, [r7, #60]
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2369              		.loc 1 1566 13
 2370 0096 7B68     		ldr	r3, [r7, #4]
 2371 0098 93F84230 		ldrb	r3, [r3, #66]
 2372 009c DBB2     		uxtb	r3, r3
 2373              		.loc 1 1566 6
 2374 009e 222B     		cmp	r3, #34
 2375 00a0 28D1     		bne	.L115
 2376              		.loc 1 1566 50 discriminator 1
 2377 00a2 FB6B     		ldr	r3, [r7, #60]
 2378 00a4 002B     		cmp	r3, #0
 2379 00a6 25D0     		beq	.L115
 2380              	.L118:
 2381              	.LBB361:
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2382              		.loc 1 1568 5 discriminator 1
 2383 00a8 7B68     		ldr	r3, [r7, #4]
 2384 00aa 1B68     		ldr	r3, [r3]
 2385 00ac 1433     		adds	r3, r3, #20
 2386 00ae 3B61     		str	r3, [r7, #16]
 2387              	.LBB362:
 2388              	.LBB363:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2389              		.loc 2 480 4
 2390 00b0 3B69     		ldr	r3, [r7, #16]
 2391              		.syntax unified
 2392              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2393 00b2 53E8003F 		ldrex r3, [r3]
 2394              	@ 0 "" 2
 2395              		.thumb
 2396              		.syntax unified
 2397 00b6 FB60     		str	r3, [r7, #12]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2398              		.loc 2 481 10
 2399 00b8 FB68     		ldr	r3, [r7, #12]
 2400              	.LBE363:
 2401              	.LBE362:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 80


 2402              		.loc 1 1568 5 discriminator 1
 2403 00ba 23F04003 		bic	r3, r3, #64
 2404 00be 7B63     		str	r3, [r7, #52]
 2405 00c0 7B68     		ldr	r3, [r7, #4]
 2406 00c2 1B68     		ldr	r3, [r3]
 2407 00c4 1433     		adds	r3, r3, #20
 2408 00c6 7A6B     		ldr	r2, [r7, #52]
 2409 00c8 FA61     		str	r2, [r7, #28]
 2410 00ca BB61     		str	r3, [r7, #24]
 2411              	.LBB364:
 2412              	.LBB365:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2413              		.loc 2 531 4
 2414 00cc B969     		ldr	r1, [r7, #24]
 2415 00ce FA69     		ldr	r2, [r7, #28]
 2416              		.syntax unified
 2417              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2418 00d0 41E80023 		strex r3, r2, [r1]
 2419              	@ 0 "" 2
 2420              		.thumb
 2421              		.syntax unified
 2422 00d4 7B61     		str	r3, [r7, #20]
 2423              		.loc 2 532 10
 2424 00d6 7B69     		ldr	r3, [r7, #20]
 2425              	.LBE365:
 2426              	.LBE364:
 2427              		.loc 1 1568 5 discriminator 1
 2428 00d8 002B     		cmp	r3, #0
 2429 00da E5D1     		bne	.L118
 2430              	.LBE361:
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream */
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2431              		.loc 1 1571 14
 2432 00dc 7B68     		ldr	r3, [r7, #4]
 2433 00de DB6B     		ldr	r3, [r3, #60]
 2434              		.loc 1 1571 8
 2435 00e0 002B     		cmp	r3, #0
 2436 00e2 04D0     		beq	.L119
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2437              		.loc 1 1573 7
 2438 00e4 7B68     		ldr	r3, [r7, #4]
 2439 00e6 DB6B     		ldr	r3, [r3, #60]
 2440 00e8 1846     		mov	r0, r3
 2441 00ea FFF7FEFF 		bl	HAL_DMA_Abort
 2442              	.L119:
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2443              		.loc 1 1575 5
 2444 00ee 7868     		ldr	r0, [r7, #4]
 2445 00f0 FFF7FEFF 		bl	UART_EndRxTransfer
 2446              	.L115:
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2447              		.loc 1 1578 10
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 81


 2448 00f4 0023     		movs	r3, #0
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2449              		.loc 1 1579 1
 2450 00f6 1846     		mov	r0, r3
 2451 00f8 4037     		adds	r7, r7, #64
 2452              	.LCFI83:
 2453              		.cfi_def_cfa_offset 8
 2454 00fa BD46     		mov	sp, r7
 2455              	.LCFI84:
 2456              		.cfi_def_cfa_register 13
 2457              		@ sp needed
 2458 00fc 80BD     		pop	{r7, pc}
 2459              		.cfi_endproc
 2460              	.LFE149:
 2462              		.section	.text.HAL_UARTEx_ReceiveToIdle,"ax",%progbits
 2463              		.align	1
 2464              		.global	HAL_UARTEx_ReceiveToIdle
 2465              		.syntax unified
 2466              		.thumb
 2467              		.thumb_func
 2469              	HAL_UARTEx_ReceiveToIdle:
 2470              	.LFB150:
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode till either the expected number of data is re
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   HAL_OK is returned if reception is completed (expected number of data has been received
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         or if reception is stopped after IDLE event (less than the expected number of data has 
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         In this case, RxLen output parameter indicates number of data available in reception bu
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of uint16_t available through pData.
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param huart   UART handle.
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (uint8_t or uint16_t data elements).
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Size    Amount of data elements (uint8_t or uint16_t) to be received.
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param RxLen   Number of data elements finally received (could be lower than Size, in case rece
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Timeout Timeout duration expressed in ms (covers the whole reception sequence).
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                            uint32_t Timeout)
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2471              		.loc 1 1598 1
 2472              		.cfi_startproc
 2473              		@ args = 4, pretend = 0, frame = 32
 2474              		@ frame_needed = 1, uses_anonymous_args = 0
 2475 0000 80B5     		push	{r7, lr}
 2476              	.LCFI85:
 2477              		.cfi_def_cfa_offset 8
 2478              		.cfi_offset 7, -8
 2479              		.cfi_offset 14, -4
 2480 0002 88B0     		sub	sp, sp, #32
 2481              	.LCFI86:
 2482              		.cfi_def_cfa_offset 40
 2483 0004 00AF     		add	r7, sp, #0
 2484              	.LCFI87:
 2485              		.cfi_def_cfa_register 7
 2486 0006 F860     		str	r0, [r7, #12]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 82


 2487 0008 B960     		str	r1, [r7, #8]
 2488 000a 3B60     		str	r3, [r7]
 2489 000c 1346     		mov	r3, r2	@ movhi
 2490 000e FB80     		strh	r3, [r7, #6]	@ movhi
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits;
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart;
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2491              		.loc 1 1604 12
 2492 0010 FB68     		ldr	r3, [r7, #12]
 2493 0012 93F84230 		ldrb	r3, [r3, #66]
 2494 0016 DBB2     		uxtb	r3, r3
 2495              		.loc 1 1604 6
 2496 0018 202B     		cmp	r3, #32
 2497 001a 40F0C080 		bne	.L122
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2498              		.loc 1 1606 8
 2499 001e BB68     		ldr	r3, [r7, #8]
 2500 0020 002B     		cmp	r3, #0
 2501 0022 02D0     		beq	.L123
 2502              		.loc 1 1606 25 discriminator 1
 2503 0024 FB88     		ldrh	r3, [r7, #6]
 2504 0026 002B     		cmp	r3, #0
 2505 0028 01D1     		bne	.L124
 2506              	.L123:
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 2507              		.loc 1 1608 15
 2508 002a 0123     		movs	r3, #1
 2509 002c B8E0     		b	.L125
 2510              	.L124:
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2511              		.loc 1 1611 22
 2512 002e FB68     		ldr	r3, [r7, #12]
 2513 0030 0022     		movs	r2, #0
 2514 0032 5A64     		str	r2, [r3, #68]
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2515              		.loc 1 1612 20
 2516 0034 FB68     		ldr	r3, [r7, #12]
 2517 0036 2222     		movs	r2, #34
 2518 0038 83F84220 		strb	r2, [r3, #66]
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 2519              		.loc 1 1613 26
 2520 003c FB68     		ldr	r3, [r7, #12]
 2521 003e 0122     		movs	r2, #1
 2522 0040 1A63     		str	r2, [r3, #48]
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
 2523              		.loc 1 1614 24
 2524 0042 FB68     		ldr	r3, [r7, #12]
 2525 0044 0022     		movs	r2, #0
 2526 0046 5A63     		str	r2, [r3, #52]
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 83


1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 2527              		.loc 1 1617 17
 2528 0048 FFF7FEFF 		bl	HAL_GetTick
 2529 004c 7861     		str	r0, [r7, #20]
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 2530              		.loc 1 1619 24
 2531 004e FB68     		ldr	r3, [r7, #12]
 2532 0050 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2533 0052 9A85     		strh	r2, [r3, #44]	@ movhi
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 2534              		.loc 1 1620 24
 2535 0054 FB68     		ldr	r3, [r7, #12]
 2536 0056 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2537 0058 DA85     		strh	r2, [r3, #46]	@ movhi
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 2538              		.loc 1 1623 21
 2539 005a FB68     		ldr	r3, [r7, #12]
 2540 005c 9B68     		ldr	r3, [r3, #8]
 2541              		.loc 1 1623 8
 2542 005e B3F5805F 		cmp	r3, #4096
 2543 0062 08D1     		bne	.L126
 2544              		.loc 1 1623 71 discriminator 1
 2545 0064 FB68     		ldr	r3, [r7, #12]
 2546 0066 1B69     		ldr	r3, [r3, #16]
 2547              		.loc 1 1623 56 discriminator 1
 2548 0068 002B     		cmp	r3, #0
 2549 006a 04D1     		bne	.L126
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 2550              		.loc 1 1625 19
 2551 006c 0023     		movs	r3, #0
 2552 006e FB61     		str	r3, [r7, #28]
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 2553              		.loc 1 1626 19
 2554 0070 BB68     		ldr	r3, [r7, #8]
 2555 0072 BB61     		str	r3, [r7, #24]
 2556 0074 03E0     		b	.L127
 2557              	.L126:
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = pData;
 2558              		.loc 1 1630 19
 2559 0076 BB68     		ldr	r3, [r7, #8]
 2560 0078 FB61     		str	r3, [r7, #28]
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = NULL;
 2561              		.loc 1 1631 19
 2562 007a 0023     		movs	r3, #0
 2563 007c BB61     		str	r3, [r7, #24]
 2564              	.L127:
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Initialize output number of received elements */
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 84


1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     *RxLen = 0U;
 2565              		.loc 1 1635 12
 2566 007e 3B68     		ldr	r3, [r7]
 2567 0080 0022     		movs	r2, #0
 2568 0082 1A80     		strh	r2, [r3]	@ movhi
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* as long as data have to be received */
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 2569              		.loc 1 1638 11
 2570 0084 77E0     		b	.L128
 2571              	.L138:
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check if IDLE flag is set */
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 2572              		.loc 1 1641 11
 2573 0086 FB68     		ldr	r3, [r7, #12]
 2574 0088 1B68     		ldr	r3, [r3]
 2575 008a 1B68     		ldr	r3, [r3]
 2576 008c 03F01003 		and	r3, r3, #16
 2577              		.loc 1 1641 10
 2578 0090 102B     		cmp	r3, #16
 2579 0092 17D1     		bne	.L129
 2580              	.LBB366:
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Clear IDLE flag in ISR */
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 2581              		.loc 1 1644 9
 2582 0094 0023     		movs	r3, #0
 2583 0096 3B61     		str	r3, [r7, #16]
 2584 0098 FB68     		ldr	r3, [r7, #12]
 2585 009a 1B68     		ldr	r3, [r3]
 2586 009c 1B68     		ldr	r3, [r3]
 2587 009e 3B61     		str	r3, [r7, #16]
 2588 00a0 FB68     		ldr	r3, [r7, #12]
 2589 00a2 1B68     		ldr	r3, [r3]
 2590 00a4 5B68     		ldr	r3, [r3, #4]
 2591 00a6 3B61     		str	r3, [r7, #16]
 2592 00a8 3B69     		ldr	r3, [r7, #16]
 2593              	.LBE366:
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* If Set, but no data ever received, clear flag without exiting loop */
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* If Set, and data has already been received, this means Idle Event is valid : End recepti
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (*RxLen > 0U)
 2594              		.loc 1 1648 13
 2595 00aa 3B68     		ldr	r3, [r7]
 2596 00ac 1B88     		ldrh	r3, [r3]
 2597              		.loc 1 1648 12
 2598 00ae 002B     		cmp	r3, #0
 2599 00b0 08D0     		beq	.L129
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 2600              		.loc 1 1650 30
 2601 00b2 FB68     		ldr	r3, [r7, #12]
 2602 00b4 0222     		movs	r2, #2
 2603 00b6 5A63     		str	r2, [r3, #52]
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 2604              		.loc 1 1651 26
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 85


 2605 00b8 FB68     		ldr	r3, [r7, #12]
 2606 00ba 2022     		movs	r2, #32
 2607 00bc 83F84220 		strb	r2, [r3, #66]
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_OK;
 2608              		.loc 1 1653 18
 2609 00c0 0023     		movs	r3, #0
 2610 00c2 6DE0     		b	.L125
 2611              	.L129:
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check if RXNE flag is set */
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE))
 2612              		.loc 1 1658 11
 2613 00c4 FB68     		ldr	r3, [r7, #12]
 2614 00c6 1B68     		ldr	r3, [r3]
 2615 00c8 1B68     		ldr	r3, [r3]
 2616 00ca 03F02003 		and	r3, r3, #32
 2617              		.loc 1 1658 10
 2618 00ce 202B     		cmp	r3, #32
 2619 00d0 3CD1     		bne	.L130
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (pdata8bits == NULL)
 2620              		.loc 1 1660 12
 2621 00d2 FB69     		ldr	r3, [r7, #28]
 2622 00d4 002B     		cmp	r3, #0
 2623 00d6 0CD1     		bne	.L131
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 2624              		.loc 1 1662 42
 2625 00d8 FB68     		ldr	r3, [r7, #12]
 2626 00da 1B68     		ldr	r3, [r3]
 2627              		.loc 1 1662 52
 2628 00dc 5B68     		ldr	r3, [r3, #4]
 2629              		.loc 1 1662 26
 2630 00de 9BB2     		uxth	r3, r3
 2631 00e0 C3F30803 		ubfx	r3, r3, #0, #9
 2632 00e4 9AB2     		uxth	r2, r3
 2633              		.loc 1 1662 24
 2634 00e6 BB69     		ldr	r3, [r7, #24]
 2635 00e8 1A80     		strh	r2, [r3]	@ movhi
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pdata16bits++;
 2636              		.loc 1 1663 22
 2637 00ea BB69     		ldr	r3, [r7, #24]
 2638 00ec 0233     		adds	r3, r3, #2
 2639 00ee BB61     		str	r3, [r7, #24]
 2640 00f0 1FE0     		b	.L132
 2641              	.L131:
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WO
 2642              		.loc 1 1667 27
 2643 00f2 FB68     		ldr	r3, [r7, #12]
 2644 00f4 9B68     		ldr	r3, [r3, #8]
 2645              		.loc 1 1667 14
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 86


 2646 00f6 B3F5805F 		cmp	r3, #4096
 2647 00fa 07D0     		beq	.L133
 2648              		.loc 1 1667 78 discriminator 1
 2649 00fc FB68     		ldr	r3, [r7, #12]
 2650 00fe 9B68     		ldr	r3, [r3, #8]
 2651              		.loc 1 1667 62 discriminator 1
 2652 0100 002B     		cmp	r3, #0
 2653 0102 0AD1     		bne	.L134
 2654              		.loc 1 1667 128 discriminator 2
 2655 0104 FB68     		ldr	r3, [r7, #12]
 2656 0106 1B69     		ldr	r3, [r3, #16]
 2657              		.loc 1 1667 113 discriminator 2
 2658 0108 002B     		cmp	r3, #0
 2659 010a 06D1     		bne	.L134
 2660              	.L133:
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 2661              		.loc 1 1669 42
 2662 010c FB68     		ldr	r3, [r7, #12]
 2663 010e 1B68     		ldr	r3, [r3]
 2664              		.loc 1 1669 52
 2665 0110 5B68     		ldr	r3, [r3, #4]
 2666              		.loc 1 1669 27
 2667 0112 DAB2     		uxtb	r2, r3
 2668              		.loc 1 1669 25
 2669 0114 FB69     		ldr	r3, [r7, #28]
 2670 0116 1A70     		strb	r2, [r3]
 2671 0118 08E0     		b	.L135
 2672              	.L134:
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 2673              		.loc 1 1673 42
 2674 011a FB68     		ldr	r3, [r7, #12]
 2675 011c 1B68     		ldr	r3, [r3]
 2676              		.loc 1 1673 52
 2677 011e 5B68     		ldr	r3, [r3, #4]
 2678              		.loc 1 1673 27
 2679 0120 DBB2     		uxtb	r3, r3
 2680 0122 03F07F03 		and	r3, r3, #127
 2681 0126 DAB2     		uxtb	r2, r3
 2682              		.loc 1 1673 25
 2683 0128 FB69     		ldr	r3, [r7, #28]
 2684 012a 1A70     		strb	r2, [r3]
 2685              	.L135:
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pdata8bits++;
 2686              		.loc 1 1676 21
 2687 012c FB69     		ldr	r3, [r7, #28]
 2688 012e 0133     		adds	r3, r3, #1
 2689 0130 FB61     		str	r3, [r7, #28]
 2690              	.L132:
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Increment number of received elements */
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *RxLen += 1U;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 87


 2691              		.loc 1 1679 9
 2692 0132 3B68     		ldr	r3, [r7]
 2693 0134 1B88     		ldrh	r3, [r3]
 2694              		.loc 1 1679 16
 2695 0136 0133     		adds	r3, r3, #1
 2696 0138 9AB2     		uxth	r2, r3
 2697 013a 3B68     		ldr	r3, [r7]
 2698 013c 1A80     		strh	r2, [r3]	@ movhi
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxXferCount--;
 2699              		.loc 1 1680 14
 2700 013e FB68     		ldr	r3, [r7, #12]
 2701 0140 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 2702 0142 9BB2     		uxth	r3, r3
 2703              		.loc 1 1680 27
 2704 0144 013B     		subs	r3, r3, #1
 2705 0146 9AB2     		uxth	r2, r3
 2706 0148 FB68     		ldr	r3, [r7, #12]
 2707 014a DA85     		strh	r2, [r3, #46]	@ movhi
 2708              	.L130:
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check for the Timeout */
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (Timeout != HAL_MAX_DELAY)
 2709              		.loc 1 1684 10
 2710 014c BB6A     		ldr	r3, [r7, #40]
 2711 014e B3F1FF3F 		cmp	r3, #-1
 2712 0152 10D0     		beq	.L128
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2713              		.loc 1 1686 15
 2714 0154 FFF7FEFF 		bl	HAL_GetTick
 2715 0158 0246     		mov	r2, r0
 2716              		.loc 1 1686 29 discriminator 1
 2717 015a 7B69     		ldr	r3, [r7, #20]
 2718 015c D31A     		subs	r3, r2, r3
 2719              		.loc 1 1686 12 discriminator 1
 2720 015e BA6A     		ldr	r2, [r7, #40]
 2721 0160 9A42     		cmp	r2, r3
 2722 0162 02D3     		bcc	.L137
 2723              		.loc 1 1686 53 discriminator 1
 2724 0164 BB6A     		ldr	r3, [r7, #40]
 2725 0166 002B     		cmp	r3, #0
 2726 0168 05D1     		bne	.L128
 2727              	.L137:
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 2728              		.loc 1 1688 26
 2729 016a FB68     		ldr	r3, [r7, #12]
 2730 016c 2022     		movs	r2, #32
 2731 016e 83F84220 		strb	r2, [r3, #66]
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2732              		.loc 1 1690 18
 2733 0172 0323     		movs	r3, #3
 2734 0174 14E0     		b	.L125
 2735              	.L128:
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 88


 2736              		.loc 1 1638 17
 2737 0176 FB68     		ldr	r3, [r7, #12]
 2738 0178 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 2739 017a 9BB2     		uxth	r3, r3
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2740              		.loc 1 1638 31
 2741 017c 002B     		cmp	r3, #0
 2742 017e 82D1     		bne	.L138
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set number of received elements in output parameter : RxLen */
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     *RxLen = huart->RxXferSize - huart->RxXferCount;
 2743              		.loc 1 1696 19
 2744 0180 FB68     		ldr	r3, [r7, #12]
 2745 0182 9A8D     		ldrh	r2, [r3, #44]
 2746              		.loc 1 1696 39
 2747 0184 FB68     		ldr	r3, [r7, #12]
 2748 0186 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 2749 0188 9BB2     		uxth	r3, r3
 2750              		.loc 1 1696 32
 2751 018a D31A     		subs	r3, r2, r3
 2752 018c 9AB2     		uxth	r2, r3
 2753              		.loc 1 1696 12
 2754 018e 3B68     		ldr	r3, [r7]
 2755 0190 1A80     		strh	r2, [r3]	@ movhi
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2756              		.loc 1 1698 20
 2757 0192 FB68     		ldr	r3, [r7, #12]
 2758 0194 2022     		movs	r2, #32
 2759 0196 83F84220 		strb	r2, [r3, #66]
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 2760              		.loc 1 1700 12
 2761 019a 0023     		movs	r3, #0
 2762 019c 00E0     		b	.L125
 2763              	.L122:
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 2764              		.loc 1 1704 12
 2765 019e 0223     		movs	r3, #2
 2766              	.L125:
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2767              		.loc 1 1706 1
 2768 01a0 1846     		mov	r0, r3
 2769 01a2 2037     		adds	r7, r7, #32
 2770              	.LCFI88:
 2771              		.cfi_def_cfa_offset 8
 2772 01a4 BD46     		mov	sp, r7
 2773              	.LCFI89:
 2774              		.cfi_def_cfa_register 13
 2775              		@ sp needed
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 89


 2776 01a6 80BD     		pop	{r7, pc}
 2777              		.cfi_endproc
 2778              	.LFE150:
 2780              		.section	.text.HAL_UARTEx_ReceiveToIdle_IT,"ax",%progbits
 2781              		.align	1
 2782              		.global	HAL_UARTEx_ReceiveToIdle_IT
 2783              		.syntax unified
 2784              		.thumb
 2785              		.thumb_func
 2787              	HAL_UARTEx_ReceiveToIdle_IT:
 2788              	.LFB151:
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode till either the expected number of data is r
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         to UART interrupts raised by RXNE and IDLE events. Callback is called at end of recepti
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         number of received data elements.
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of uint16_t available through pData.
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param huart UART handle.
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t S
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2789              		.loc 1 1722 1
 2790              		.cfi_startproc
 2791              		@ args = 0, pretend = 0, frame = 48
 2792              		@ frame_needed = 1, uses_anonymous_args = 0
 2793 0000 80B5     		push	{r7, lr}
 2794              	.LCFI90:
 2795              		.cfi_def_cfa_offset 8
 2796              		.cfi_offset 7, -8
 2797              		.cfi_offset 14, -4
 2798 0002 8CB0     		sub	sp, sp, #48
 2799              	.LCFI91:
 2800              		.cfi_def_cfa_offset 56
 2801 0004 00AF     		add	r7, sp, #0
 2802              	.LCFI92:
 2803              		.cfi_def_cfa_register 7
 2804 0006 F860     		str	r0, [r7, #12]
 2805 0008 B960     		str	r1, [r7, #8]
 2806 000a 1346     		mov	r3, r2
 2807 000c FB80     		strh	r3, [r7, #6]	@ movhi
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status;
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2808              		.loc 1 1726 12
 2809 000e FB68     		ldr	r3, [r7, #12]
 2810 0010 93F84230 		ldrb	r3, [r3, #66]
 2811 0014 DBB2     		uxtb	r3, r3
 2812              		.loc 1 1726 6
 2813 0016 202B     		cmp	r3, #32
 2814 0018 4AD1     		bne	.L140
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 90


1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2815              		.loc 1 1728 8
 2816 001a BB68     		ldr	r3, [r7, #8]
 2817 001c 002B     		cmp	r3, #0
 2818 001e 02D0     		beq	.L141
 2819              		.loc 1 1728 25 discriminator 1
 2820 0020 FB88     		ldrh	r3, [r7, #6]
 2821 0022 002B     		cmp	r3, #0
 2822 0024 01D1     		bne	.L142
 2823              	.L141:
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 2824              		.loc 1 1730 14
 2825 0026 0123     		movs	r3, #1
 2826 0028 43E0     		b	.L143
 2827              	.L142:
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to reception till IDLE Event*/
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 2828              		.loc 1 1734 26
 2829 002a FB68     		ldr	r3, [r7, #12]
 2830 002c 0122     		movs	r2, #1
 2831 002e 1A63     		str	r2, [r3, #48]
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
 2832              		.loc 1 1735 24
 2833 0030 FB68     		ldr	r3, [r7, #12]
 2834 0032 0022     		movs	r2, #0
 2835 0034 5A63     		str	r2, [r3, #52]
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  UART_Start_Receive_IT(huart, pData, Size);
 2836              		.loc 1 1737 15
 2837 0036 FB88     		ldrh	r3, [r7, #6]
 2838 0038 1A46     		mov	r2, r3
 2839 003a B968     		ldr	r1, [r7, #8]
 2840 003c F868     		ldr	r0, [r7, #12]
 2841 003e FFF7FEFF 		bl	UART_Start_Receive_IT
 2842 0042 0346     		mov	r3, r0
 2843 0044 87F82F30 		strb	r3, [r7, #47]
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check Rx process has been successfully started */
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (status == HAL_OK)
 2844              		.loc 1 1740 8
 2845 0048 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2846 004c 002B     		cmp	r3, #0
 2847 004e 2CD1     		bne	.L144
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 2848              		.loc 1 1742 16
 2849 0050 FB68     		ldr	r3, [r7, #12]
 2850 0052 1B6B     		ldr	r3, [r3, #48]
 2851              		.loc 1 1742 10
 2852 0054 012B     		cmp	r3, #1
 2853 0056 25D1     		bne	.L145
 2854              	.LBB367:
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 91


1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 2855              		.loc 1 1744 9
 2856 0058 0023     		movs	r3, #0
 2857 005a 3B61     		str	r3, [r7, #16]
 2858 005c FB68     		ldr	r3, [r7, #12]
 2859 005e 1B68     		ldr	r3, [r3]
 2860 0060 1B68     		ldr	r3, [r3]
 2861 0062 3B61     		str	r3, [r7, #16]
 2862 0064 FB68     		ldr	r3, [r7, #12]
 2863 0066 1B68     		ldr	r3, [r3]
 2864 0068 5B68     		ldr	r3, [r3, #4]
 2865 006a 3B61     		str	r3, [r7, #16]
 2866 006c 3B69     		ldr	r3, [r7, #16]
 2867              	.L148:
 2868              	.LBE367:
 2869              	.LBB368:
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 2870              		.loc 1 1745 9 discriminator 1
 2871 006e FB68     		ldr	r3, [r7, #12]
 2872 0070 1B68     		ldr	r3, [r3]
 2873 0072 0C33     		adds	r3, r3, #12
 2874 0074 BB61     		str	r3, [r7, #24]
 2875              	.LBB369:
 2876              	.LBB370:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2877              		.loc 2 480 4
 2878 0076 BB69     		ldr	r3, [r7, #24]
 2879              		.syntax unified
 2880              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2881 0078 53E8003F 		ldrex r3, [r3]
 2882              	@ 0 "" 2
 2883              		.thumb
 2884              		.syntax unified
 2885 007c 7B61     		str	r3, [r7, #20]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2886              		.loc 2 481 10
 2887 007e 7B69     		ldr	r3, [r7, #20]
 2888              	.LBE370:
 2889              	.LBE369:
 2890              		.loc 1 1745 9 discriminator 1
 2891 0080 43F01003 		orr	r3, r3, #16
 2892 0084 BB62     		str	r3, [r7, #40]
 2893 0086 FB68     		ldr	r3, [r7, #12]
 2894 0088 1B68     		ldr	r3, [r3]
 2895 008a 0C33     		adds	r3, r3, #12
 2896 008c BA6A     		ldr	r2, [r7, #40]
 2897 008e 7A62     		str	r2, [r7, #36]
 2898 0090 3B62     		str	r3, [r7, #32]
 2899              	.LBB371:
 2900              	.LBB372:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2901              		.loc 2 531 4
 2902 0092 396A     		ldr	r1, [r7, #32]
 2903 0094 7A6A     		ldr	r2, [r7, #36]
 2904              		.syntax unified
 2905              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2906 0096 41E80023 		strex r3, r2, [r1]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 92


 2907              	@ 0 "" 2
 2908              		.thumb
 2909              		.syntax unified
 2910 009a FB61     		str	r3, [r7, #28]
 2911              		.loc 2 532 10
 2912 009c FB69     		ldr	r3, [r7, #28]
 2913              	.LBE372:
 2914              	.LBE371:
 2915              		.loc 1 1745 9 discriminator 1
 2916 009e 002B     		cmp	r3, #0
 2917 00a0 E5D1     		bne	.L148
 2918 00a2 02E0     		b	.L144
 2919              	.L145:
 2920              	.LBE368:
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* In case of errors already pending when reception is started,
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Interrupts may have already been raised and lead to reception abortion.
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            (Overrun error for instance).
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status = HAL_ERROR;
 2921              		.loc 1 1753 16
 2922 00a4 0123     		movs	r3, #1
 2923 00a6 87F82F30 		strb	r3, [r7, #47]
 2924              	.L144:
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return status;
 2925              		.loc 1 1757 12
 2926 00aa 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2927 00ae 00E0     		b	.L143
 2928              	.L140:
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 2929              		.loc 1 1761 12
 2930 00b0 0223     		movs	r3, #2
 2931              	.L143:
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2932              		.loc 1 1763 1
 2933 00b2 1846     		mov	r0, r3
 2934 00b4 3037     		adds	r7, r7, #48
 2935              	.LCFI93:
 2936              		.cfi_def_cfa_offset 8
 2937 00b6 BD46     		mov	sp, r7
 2938              	.LCFI94:
 2939              		.cfi_def_cfa_register 13
 2940              		@ sp needed
 2941 00b8 80BD     		pop	{r7, pc}
 2942              		.cfi_endproc
 2943              	.LFE151:
 2945              		.section	.text.HAL_UARTEx_ReceiveToIdle_DMA,"ax",%progbits
 2946              		.align	1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 93


 2947              		.global	HAL_UARTEx_ReceiveToIdle_DMA
 2948              		.syntax unified
 2949              		.thumb
 2950              		.thumb_func
 2952              	HAL_UARTEx_ReceiveToIdle_DMA:
 2953              	.LFB152:
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode till either the expected number of data is receive
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         to DMA services, transferring automatically received data elements in user reception bu
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         calling registered callbacks at half/end of reception. UART IDLE events are also used t
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         reception phase as ended. In all cases, callback execution will indicate number of rece
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the parity bit (MSB position).
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of uint16_t available through pData.
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param huart UART handle.
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t 
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2954              		.loc 1 1782 1
 2955              		.cfi_startproc
 2956              		@ args = 0, pretend = 0, frame = 48
 2957              		@ frame_needed = 1, uses_anonymous_args = 0
 2958 0000 80B5     		push	{r7, lr}
 2959              	.LCFI95:
 2960              		.cfi_def_cfa_offset 8
 2961              		.cfi_offset 7, -8
 2962              		.cfi_offset 14, -4
 2963 0002 8CB0     		sub	sp, sp, #48
 2964              	.LCFI96:
 2965              		.cfi_def_cfa_offset 56
 2966 0004 00AF     		add	r7, sp, #0
 2967              	.LCFI97:
 2968              		.cfi_def_cfa_register 7
 2969 0006 F860     		str	r0, [r7, #12]
 2970 0008 B960     		str	r1, [r7, #8]
 2971 000a 1346     		mov	r3, r2
 2972 000c FB80     		strh	r3, [r7, #6]	@ movhi
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status;
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2973              		.loc 1 1786 12
 2974 000e FB68     		ldr	r3, [r7, #12]
 2975 0010 93F84230 		ldrb	r3, [r3, #66]
 2976 0014 DBB2     		uxtb	r3, r3
 2977              		.loc 1 1786 6
 2978 0016 202B     		cmp	r3, #32
 2979 0018 46D1     		bne	.L150
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 94


 2980              		.loc 1 1788 8
 2981 001a BB68     		ldr	r3, [r7, #8]
 2982 001c 002B     		cmp	r3, #0
 2983 001e 02D0     		beq	.L151
 2984              		.loc 1 1788 25 discriminator 1
 2985 0020 FB88     		ldrh	r3, [r7, #6]
 2986 0022 002B     		cmp	r3, #0
 2987 0024 01D1     		bne	.L152
 2988              	.L151:
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 2989              		.loc 1 1790 14
 2990 0026 0123     		movs	r3, #1
 2991 0028 3FE0     		b	.L153
 2992              	.L152:
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to reception till IDLE Event*/
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 2993              		.loc 1 1794 26
 2994 002a FB68     		ldr	r3, [r7, #12]
 2995 002c 0122     		movs	r2, #1
 2996 002e 1A63     		str	r2, [r3, #48]
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventType = HAL_UART_RXEVENT_TC;
 2997              		.loc 1 1795 24
 2998 0030 FB68     		ldr	r3, [r7, #12]
 2999 0032 0022     		movs	r2, #0
 3000 0034 5A63     		str	r2, [r3, #52]
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  UART_Start_Receive_DMA(huart, pData, Size);
 3001              		.loc 1 1797 15
 3002 0036 FB88     		ldrh	r3, [r7, #6]
 3003 0038 1A46     		mov	r2, r3
 3004 003a B968     		ldr	r1, [r7, #8]
 3005 003c F868     		ldr	r0, [r7, #12]
 3006 003e FFF7FEFF 		bl	UART_Start_Receive_DMA
 3007 0042 0346     		mov	r3, r0
 3008 0044 87F82F30 		strb	r3, [r7, #47]
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check Rx process has been successfully started */
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3009              		.loc 1 1800 14
 3010 0048 FB68     		ldr	r3, [r7, #12]
 3011 004a 1B6B     		ldr	r3, [r3, #48]
 3012              		.loc 1 1800 8
 3013 004c 012B     		cmp	r3, #1
 3014 004e 25D1     		bne	.L154
 3015              	.LBB373:
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_CLEAR_IDLEFLAG(huart);
 3016              		.loc 1 1802 7
 3017 0050 0023     		movs	r3, #0
 3018 0052 3B61     		str	r3, [r7, #16]
 3019 0054 FB68     		ldr	r3, [r7, #12]
 3020 0056 1B68     		ldr	r3, [r3]
 3021 0058 1B68     		ldr	r3, [r3]
 3022 005a 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 95


 3023 005c FB68     		ldr	r3, [r7, #12]
 3024 005e 1B68     		ldr	r3, [r3]
 3025 0060 5B68     		ldr	r3, [r3, #4]
 3026 0062 3B61     		str	r3, [r7, #16]
 3027 0064 3B69     		ldr	r3, [r7, #16]
 3028              	.L157:
 3029              	.LBE373:
 3030              	.LBB374:
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 3031              		.loc 1 1803 7 discriminator 1
 3032 0066 FB68     		ldr	r3, [r7, #12]
 3033 0068 1B68     		ldr	r3, [r3]
 3034 006a 0C33     		adds	r3, r3, #12
 3035 006c BB61     		str	r3, [r7, #24]
 3036              	.LBB375:
 3037              	.LBB376:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3038              		.loc 2 480 4
 3039 006e BB69     		ldr	r3, [r7, #24]
 3040              		.syntax unified
 3041              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3042 0070 53E8003F 		ldrex r3, [r3]
 3043              	@ 0 "" 2
 3044              		.thumb
 3045              		.syntax unified
 3046 0074 7B61     		str	r3, [r7, #20]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3047              		.loc 2 481 10
 3048 0076 7B69     		ldr	r3, [r7, #20]
 3049              	.LBE376:
 3050              	.LBE375:
 3051              		.loc 1 1803 7 discriminator 1
 3052 0078 43F01003 		orr	r3, r3, #16
 3053 007c BB62     		str	r3, [r7, #40]
 3054 007e FB68     		ldr	r3, [r7, #12]
 3055 0080 1B68     		ldr	r3, [r3]
 3056 0082 0C33     		adds	r3, r3, #12
 3057 0084 BA6A     		ldr	r2, [r7, #40]
 3058 0086 7A62     		str	r2, [r7, #36]
 3059 0088 3B62     		str	r3, [r7, #32]
 3060              	.LBB377:
 3061              	.LBB378:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3062              		.loc 2 531 4
 3063 008a 396A     		ldr	r1, [r7, #32]
 3064 008c 7A6A     		ldr	r2, [r7, #36]
 3065              		.syntax unified
 3066              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3067 008e 41E80023 		strex r3, r2, [r1]
 3068              	@ 0 "" 2
 3069              		.thumb
 3070              		.syntax unified
 3071 0092 FB61     		str	r3, [r7, #28]
 3072              		.loc 2 532 10
 3073 0094 FB69     		ldr	r3, [r7, #28]
 3074              	.LBE378:
 3075              	.LBE377:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 96


 3076              		.loc 1 1803 7 discriminator 1
 3077 0096 002B     		cmp	r3, #0
 3078 0098 E5D1     		bne	.L157
 3079 009a 02E0     		b	.L158
 3080              	.L154:
 3081              	.LBE374:
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* In case of errors already pending when reception is started,
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          Interrupts may have already been raised and lead to reception abortion.
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          (Overrun error for instance).
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       status = HAL_ERROR;
 3082              		.loc 1 1811 14
 3083 009c 0123     		movs	r3, #1
 3084 009e 87F82F30 		strb	r3, [r7, #47]
 3085              	.L158:
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return status;
 3086              		.loc 1 1814 12
 3087 00a2 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3088 00a6 00E0     		b	.L153
 3089              	.L150:
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 3090              		.loc 1 1818 12
 3091 00a8 0223     		movs	r3, #2
 3092              	.L153:
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3093              		.loc 1 1820 1
 3094 00aa 1846     		mov	r0, r3
 3095 00ac 3037     		adds	r7, r7, #48
 3096              	.LCFI98:
 3097              		.cfi_def_cfa_offset 8
 3098 00ae BD46     		mov	sp, r7
 3099              	.LCFI99:
 3100              		.cfi_def_cfa_register 13
 3101              		@ sp needed
 3102 00b0 80BD     		pop	{r7, pc}
 3103              		.cfi_endproc
 3104              	.LFE152:
 3106              		.section	.text.HAL_UARTEx_GetRxEventType,"ax",%progbits
 3107              		.align	1
 3108              		.global	HAL_UARTEx_GetRxEventType
 3109              		.syntax unified
 3110              		.thumb
 3111              		.thumb_func
 3113              	HAL_UARTEx_GetRxEventType:
 3114              	.LFB153:
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Provide Rx Event type that has lead to RxEvent callback execution.
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 97


1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note  When HAL_UARTEx_ReceiveToIdle_IT() or HAL_UARTEx_ReceiveToIdle_DMA() API are called, pro
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        of reception process is provided to application through calls of Rx Event callback (eith
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        HAL_UARTEx_RxEventCallback() or user registered one). As several types of events could o
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        Half Transfer, or Transfer Complete), this function allows to retrieve the Rx Event type
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        to Rx Event callback execution.
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note  This function is expected to be called within the user implementation of Rx Event Callba
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        in order to provide the accurate value :
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        In Interrupt Mode :
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - HAL_UART_RXEVENT_TC : when Reception has been completed (expected nb of data has be
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - HAL_UART_RXEVENT_IDLE : when Idle event occurred prior reception has been completed
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *             received data is lower than expected one)
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        In DMA Mode :
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - HAL_UART_RXEVENT_TC : when Reception has been completed (expected nb of data has be
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - HAL_UART_RXEVENT_HT : when half of expected nb of data has been received
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - HAL_UART_RXEVENT_IDLE : when Idle event occurred prior reception has been completed
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *             received data is lower than expected one).
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        In DMA mode, RxEvent callback could be called several times;
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        When DMA is configured in Normal Mode, HT event does not stop Reception process;
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *        When DMA is configured in Circular Mode, HT, TC or IDLE events don't stop Reception proc
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval Rx Event Type (returned value will be a value of @ref UART_RxEvent_Type_Values)
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_RxEventTypeTypeDef HAL_UARTEx_GetRxEventType(UART_HandleTypeDef *huart)
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3115              		.loc 1 1847 1
 3116              		.cfi_startproc
 3117              		@ args = 0, pretend = 0, frame = 8
 3118              		@ frame_needed = 1, uses_anonymous_args = 0
 3119              		@ link register save eliminated.
 3120 0000 80B4     		push	{r7}
 3121              	.LCFI100:
 3122              		.cfi_def_cfa_offset 4
 3123              		.cfi_offset 7, -4
 3124 0002 83B0     		sub	sp, sp, #12
 3125              	.LCFI101:
 3126              		.cfi_def_cfa_offset 16
 3127 0004 00AF     		add	r7, sp, #0
 3128              	.LCFI102:
 3129              		.cfi_def_cfa_register 7
 3130 0006 7860     		str	r0, [r7, #4]
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Return Rx Event type value, as stored in UART handle */
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return(huart->RxEventType);
 3131              		.loc 1 1849 15
 3132 0008 7B68     		ldr	r3, [r7, #4]
 3133 000a 5B6B     		ldr	r3, [r3, #52]
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3134              		.loc 1 1850 1
 3135 000c 1846     		mov	r0, r3
 3136 000e 0C37     		adds	r7, r7, #12
 3137              	.LCFI103:
 3138              		.cfi_def_cfa_offset 4
 3139 0010 BD46     		mov	sp, r7
 3140              	.LCFI104:
 3141              		.cfi_def_cfa_register 13
 3142              		@ sp needed
 3143 0012 5DF8047B 		ldr	r7, [sp], #4
 3144              	.LCFI105:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 98


 3145              		.cfi_restore 7
 3146              		.cfi_def_cfa_offset 0
 3147 0016 7047     		bx	lr
 3148              		.cfi_endproc
 3149              	.LFE153:
 3151              		.section	.text.HAL_UART_Abort,"ax",%progbits
 3152              		.align	1
 3153              		.global	HAL_UART_Abort
 3154              		.syntax unified
 3155              		.thumb
 3156              		.thumb_func
 3158              	HAL_UART_Abort:
 3159              	.LFB154:
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3160              		.loc 1 1865 1
 3161              		.cfi_startproc
 3162              		@ args = 0, pretend = 0, frame = 128
 3163              		@ frame_needed = 1, uses_anonymous_args = 0
 3164 0000 80B5     		push	{r7, lr}
 3165              	.LCFI106:
 3166              		.cfi_def_cfa_offset 8
 3167              		.cfi_offset 7, -8
 3168              		.cfi_offset 14, -4
 3169 0002 A0B0     		sub	sp, sp, #128
 3170              	.LCFI107:
 3171              		.cfi_def_cfa_offset 136
 3172 0004 00AF     		add	r7, sp, #0
 3173              	.LCFI108:
 3174              		.cfi_def_cfa_register 7
 3175 0006 7860     		str	r0, [r7, #4]
 3176              	.L164:
 3177              	.LBB379:
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
 3178              		.loc 1 1867 3 discriminator 1
 3179 0008 7B68     		ldr	r3, [r7, #4]
 3180 000a 1B68     		ldr	r3, [r3]
 3181 000c 0C33     		adds	r3, r3, #12
 3182 000e FB65     		str	r3, [r7, #92]
 3183              	.LBB380:
 3184              	.LBB381:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3185              		.loc 2 480 4
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 99


 3186 0010 FB6D     		ldr	r3, [r7, #92]
 3187              		.syntax unified
 3188              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3189 0012 53E8003F 		ldrex r3, [r3]
 3190              	@ 0 "" 2
 3191              		.thumb
 3192              		.syntax unified
 3193 0016 BB65     		str	r3, [r7, #88]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3194              		.loc 2 481 10
 3195 0018 BB6D     		ldr	r3, [r7, #88]
 3196              	.LBE381:
 3197              	.LBE380:
 3198              		.loc 1 1867 3 discriminator 1
 3199 001a 23F4F073 		bic	r3, r3, #480
 3200 001e FB67     		str	r3, [r7, #124]
 3201 0020 7B68     		ldr	r3, [r7, #4]
 3202 0022 1B68     		ldr	r3, [r3]
 3203 0024 0C33     		adds	r3, r3, #12
 3204 0026 FA6F     		ldr	r2, [r7, #124]
 3205 0028 BA66     		str	r2, [r7, #104]
 3206 002a 7B66     		str	r3, [r7, #100]
 3207              	.LBB382:
 3208              	.LBB383:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3209              		.loc 2 531 4
 3210 002c 796E     		ldr	r1, [r7, #100]
 3211 002e BA6E     		ldr	r2, [r7, #104]
 3212              		.syntax unified
 3213              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3214 0030 41E80023 		strex r3, r2, [r1]
 3215              	@ 0 "" 2
 3216              		.thumb
 3217              		.syntax unified
 3218 0034 3B66     		str	r3, [r7, #96]
 3219              		.loc 2 532 10
 3220 0036 3B6E     		ldr	r3, [r7, #96]
 3221              	.LBE383:
 3222              	.LBE382:
 3223              		.loc 1 1867 3 discriminator 1
 3224 0038 002B     		cmp	r3, #0
 3225 003a E5D1     		bne	.L164
 3226              	.L167:
 3227              	.LBE379:
 3228              	.LBB384:
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3229              		.loc 1 1868 3 discriminator 1
 3230 003c 7B68     		ldr	r3, [r7, #4]
 3231 003e 1B68     		ldr	r3, [r3]
 3232 0040 1433     		adds	r3, r3, #20
 3233 0042 BB64     		str	r3, [r7, #72]
 3234              	.LBB385:
 3235              	.LBB386:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3236              		.loc 2 480 4
 3237 0044 BB6C     		ldr	r3, [r7, #72]
 3238              		.syntax unified
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 100


 3239              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3240 0046 53E8003F 		ldrex r3, [r3]
 3241              	@ 0 "" 2
 3242              		.thumb
 3243              		.syntax unified
 3244 004a 7B64     		str	r3, [r7, #68]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3245              		.loc 2 481 10
 3246 004c 7B6C     		ldr	r3, [r7, #68]
 3247              	.LBE386:
 3248              	.LBE385:
 3249              		.loc 1 1868 3 discriminator 1
 3250 004e 23F00103 		bic	r3, r3, #1
 3251 0052 BB67     		str	r3, [r7, #120]
 3252 0054 7B68     		ldr	r3, [r7, #4]
 3253 0056 1B68     		ldr	r3, [r3]
 3254 0058 1433     		adds	r3, r3, #20
 3255 005a BA6F     		ldr	r2, [r7, #120]
 3256 005c 7A65     		str	r2, [r7, #84]
 3257 005e 3B65     		str	r3, [r7, #80]
 3258              	.LBB387:
 3259              	.LBB388:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3260              		.loc 2 531 4
 3261 0060 396D     		ldr	r1, [r7, #80]
 3262 0062 7A6D     		ldr	r2, [r7, #84]
 3263              		.syntax unified
 3264              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3265 0064 41E80023 		strex r3, r2, [r1]
 3266              	@ 0 "" 2
 3267              		.thumb
 3268              		.syntax unified
 3269 0068 FB64     		str	r3, [r7, #76]
 3270              		.loc 2 532 10
 3271 006a FB6C     		ldr	r3, [r7, #76]
 3272              	.LBE388:
 3273              	.LBE387:
 3274              		.loc 1 1868 3 discriminator 1
 3275 006c 002B     		cmp	r3, #0
 3276 006e E5D1     		bne	.L167
 3277              	.LBE384:
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3278              		.loc 1 1871 12
 3279 0070 7B68     		ldr	r3, [r7, #4]
 3280 0072 1B6B     		ldr	r3, [r3, #48]
 3281              		.loc 1 1871 6
 3282 0074 012B     		cmp	r3, #1
 3283 0076 19D1     		bne	.L168
 3284              	.L171:
 3285              	.LBB389:
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3286              		.loc 1 1873 5 discriminator 1
 3287 0078 7B68     		ldr	r3, [r7, #4]
 3288 007a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 101


 3289 007c 0C33     		adds	r3, r3, #12
 3290 007e 7B63     		str	r3, [r7, #52]
 3291              	.LBB390:
 3292              	.LBB391:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3293              		.loc 2 480 4
 3294 0080 7B6B     		ldr	r3, [r7, #52]
 3295              		.syntax unified
 3296              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3297 0082 53E8003F 		ldrex r3, [r3]
 3298              	@ 0 "" 2
 3299              		.thumb
 3300              		.syntax unified
 3301 0086 3B63     		str	r3, [r7, #48]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3302              		.loc 2 481 10
 3303 0088 3B6B     		ldr	r3, [r7, #48]
 3304              	.LBE391:
 3305              	.LBE390:
 3306              		.loc 1 1873 5 discriminator 1
 3307 008a 23F01003 		bic	r3, r3, #16
 3308 008e 7B67     		str	r3, [r7, #116]
 3309 0090 7B68     		ldr	r3, [r7, #4]
 3310 0092 1B68     		ldr	r3, [r3]
 3311 0094 0C33     		adds	r3, r3, #12
 3312 0096 7A6F     		ldr	r2, [r7, #116]
 3313 0098 3A64     		str	r2, [r7, #64]
 3314 009a FB63     		str	r3, [r7, #60]
 3315              	.LBB392:
 3316              	.LBB393:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3317              		.loc 2 531 4
 3318 009c F96B     		ldr	r1, [r7, #60]
 3319 009e 3A6C     		ldr	r2, [r7, #64]
 3320              		.syntax unified
 3321              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3322 00a0 41E80023 		strex r3, r2, [r1]
 3323              	@ 0 "" 2
 3324              		.thumb
 3325              		.syntax unified
 3326 00a4 BB63     		str	r3, [r7, #56]
 3327              		.loc 2 532 10
 3328 00a6 BB6B     		ldr	r3, [r7, #56]
 3329              	.LBE393:
 3330              	.LBE392:
 3331              		.loc 1 1873 5 discriminator 1
 3332 00a8 002B     		cmp	r3, #0
 3333 00aa E5D1     		bne	.L171
 3334              	.L168:
 3335              	.LBE389:
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3336              		.loc 1 1877 7
 3337 00ac 7B68     		ldr	r3, [r7, #4]
 3338 00ae 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 102


 3339 00b0 5B69     		ldr	r3, [r3, #20]
 3340 00b2 03F08003 		and	r3, r3, #128
 3341              		.loc 1 1877 6
 3342 00b6 802B     		cmp	r3, #128
 3343 00b8 36D1     		bne	.L172
 3344              	.L175:
 3345              	.LBB394:
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3346              		.loc 1 1879 5 discriminator 1
 3347 00ba 7B68     		ldr	r3, [r7, #4]
 3348 00bc 1B68     		ldr	r3, [r3]
 3349 00be 1433     		adds	r3, r3, #20
 3350 00c0 3B62     		str	r3, [r7, #32]
 3351              	.LBB395:
 3352              	.LBB396:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3353              		.loc 2 480 4
 3354 00c2 3B6A     		ldr	r3, [r7, #32]
 3355              		.syntax unified
 3356              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3357 00c4 53E8003F 		ldrex r3, [r3]
 3358              	@ 0 "" 2
 3359              		.thumb
 3360              		.syntax unified
 3361 00c8 FB61     		str	r3, [r7, #28]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3362              		.loc 2 481 10
 3363 00ca FB69     		ldr	r3, [r7, #28]
 3364              	.LBE396:
 3365              	.LBE395:
 3366              		.loc 1 1879 5 discriminator 1
 3367 00cc 23F08003 		bic	r3, r3, #128
 3368 00d0 3B67     		str	r3, [r7, #112]
 3369 00d2 7B68     		ldr	r3, [r7, #4]
 3370 00d4 1B68     		ldr	r3, [r3]
 3371 00d6 1433     		adds	r3, r3, #20
 3372 00d8 3A6F     		ldr	r2, [r7, #112]
 3373 00da FA62     		str	r2, [r7, #44]
 3374 00dc BB62     		str	r3, [r7, #40]
 3375              	.LBB397:
 3376              	.LBB398:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3377              		.loc 2 531 4
 3378 00de B96A     		ldr	r1, [r7, #40]
 3379 00e0 FA6A     		ldr	r2, [r7, #44]
 3380              		.syntax unified
 3381              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3382 00e2 41E80023 		strex r3, r2, [r1]
 3383              	@ 0 "" 2
 3384              		.thumb
 3385              		.syntax unified
 3386 00e6 7B62     		str	r3, [r7, #36]
 3387              		.loc 2 532 10
 3388 00e8 7B6A     		ldr	r3, [r7, #36]
 3389              	.LBE398:
 3390              	.LBE397:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 103


 3391              		.loc 1 1879 5 discriminator 1
 3392 00ea 002B     		cmp	r3, #0
 3393 00ec E5D1     		bne	.L175
 3394              	.LBE394:
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream: use blocking DMA Abort API (no callback) */
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3395              		.loc 1 1882 14
 3396 00ee 7B68     		ldr	r3, [r7, #4]
 3397 00f0 9B6B     		ldr	r3, [r3, #56]
 3398              		.loc 1 1882 8
 3399 00f2 002B     		cmp	r3, #0
 3400 00f4 18D0     		beq	.L172
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3401              		.loc 1 1886 12
 3402 00f6 7B68     		ldr	r3, [r7, #4]
 3403 00f8 9B6B     		ldr	r3, [r3, #56]
 3404              		.loc 1 1886 40
 3405 00fa 0022     		movs	r2, #0
 3406 00fc 1A65     		str	r2, [r3, #80]
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3407              		.loc 1 1888 11
 3408 00fe 7B68     		ldr	r3, [r7, #4]
 3409 0100 9B6B     		ldr	r3, [r3, #56]
 3410 0102 1846     		mov	r0, r3
 3411 0104 FFF7FEFF 		bl	HAL_DMA_Abort
 3412 0108 0346     		mov	r3, r0
 3413              		.loc 1 1888 10 discriminator 1
 3414 010a 002B     		cmp	r3, #0
 3415 010c 0CD0     		beq	.L172
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3416              		.loc 1 1890 13
 3417 010e 7B68     		ldr	r3, [r7, #4]
 3418 0110 9B6B     		ldr	r3, [r3, #56]
 3419 0112 1846     		mov	r0, r3
 3420 0114 FFF7FEFF 		bl	HAL_DMA_GetError
 3421 0118 0346     		mov	r3, r0
 3422              		.loc 1 1890 12 discriminator 1
 3423 011a 202B     		cmp	r3, #32
 3424 011c 04D1     		bne	.L172
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3425              		.loc 1 1893 28
 3426 011e 7B68     		ldr	r3, [r7, #4]
 3427 0120 1022     		movs	r2, #16
 3428 0122 5A64     		str	r2, [r3, #68]
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3429              		.loc 1 1895 18
 3430 0124 0323     		movs	r3, #3
 3431 0126 52E0     		b	.L176
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 104


 3432              	.L172:
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3433              		.loc 1 1902 7
 3434 0128 7B68     		ldr	r3, [r7, #4]
 3435 012a 1B68     		ldr	r3, [r3]
 3436 012c 5B69     		ldr	r3, [r3, #20]
 3437 012e 03F04003 		and	r3, r3, #64
 3438              		.loc 1 1902 6
 3439 0132 402B     		cmp	r3, #64
 3440 0134 36D1     		bne	.L177
 3441              	.L180:
 3442              	.LBB399:
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3443              		.loc 1 1904 5 discriminator 1
 3444 0136 7B68     		ldr	r3, [r7, #4]
 3445 0138 1B68     		ldr	r3, [r3]
 3446 013a 1433     		adds	r3, r3, #20
 3447 013c FB60     		str	r3, [r7, #12]
 3448              	.LBB400:
 3449              	.LBB401:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3450              		.loc 2 480 4
 3451 013e FB68     		ldr	r3, [r7, #12]
 3452              		.syntax unified
 3453              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3454 0140 53E8003F 		ldrex r3, [r3]
 3455              	@ 0 "" 2
 3456              		.thumb
 3457              		.syntax unified
 3458 0144 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3459              		.loc 2 481 10
 3460 0146 BB68     		ldr	r3, [r7, #8]
 3461              	.LBE401:
 3462              	.LBE400:
 3463              		.loc 1 1904 5 discriminator 1
 3464 0148 23F04003 		bic	r3, r3, #64
 3465 014c FB66     		str	r3, [r7, #108]
 3466 014e 7B68     		ldr	r3, [r7, #4]
 3467 0150 1B68     		ldr	r3, [r3]
 3468 0152 1433     		adds	r3, r3, #20
 3469 0154 FA6E     		ldr	r2, [r7, #108]
 3470 0156 BA61     		str	r2, [r7, #24]
 3471 0158 7B61     		str	r3, [r7, #20]
 3472              	.LBB402:
 3473              	.LBB403:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3474              		.loc 2 531 4
 3475 015a 7969     		ldr	r1, [r7, #20]
 3476 015c BA69     		ldr	r2, [r7, #24]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 105


 3477              		.syntax unified
 3478              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3479 015e 41E80023 		strex r3, r2, [r1]
 3480              	@ 0 "" 2
 3481              		.thumb
 3482              		.syntax unified
 3483 0162 3B61     		str	r3, [r7, #16]
 3484              		.loc 2 532 10
 3485 0164 3B69     		ldr	r3, [r7, #16]
 3486              	.LBE403:
 3487              	.LBE402:
 3488              		.loc 1 1904 5 discriminator 1
 3489 0166 002B     		cmp	r3, #0
 3490 0168 E5D1     		bne	.L180
 3491              	.LBE399:
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream: use blocking DMA Abort API (no callback) */
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3492              		.loc 1 1907 14
 3493 016a 7B68     		ldr	r3, [r7, #4]
 3494 016c DB6B     		ldr	r3, [r3, #60]
 3495              		.loc 1 1907 8
 3496 016e 002B     		cmp	r3, #0
 3497 0170 18D0     		beq	.L177
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3498              		.loc 1 1911 12
 3499 0172 7B68     		ldr	r3, [r7, #4]
 3500 0174 DB6B     		ldr	r3, [r3, #60]
 3501              		.loc 1 1911 40
 3502 0176 0022     		movs	r2, #0
 3503 0178 1A65     		str	r2, [r3, #80]
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3504              		.loc 1 1913 11
 3505 017a 7B68     		ldr	r3, [r7, #4]
 3506 017c DB6B     		ldr	r3, [r3, #60]
 3507 017e 1846     		mov	r0, r3
 3508 0180 FFF7FEFF 		bl	HAL_DMA_Abort
 3509 0184 0346     		mov	r3, r0
 3510              		.loc 1 1913 10 discriminator 1
 3511 0186 002B     		cmp	r3, #0
 3512 0188 0CD0     		beq	.L177
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3513              		.loc 1 1915 13
 3514 018a 7B68     		ldr	r3, [r7, #4]
 3515 018c DB6B     		ldr	r3, [r3, #60]
 3516 018e 1846     		mov	r0, r3
 3517 0190 FFF7FEFF 		bl	HAL_DMA_GetError
 3518 0194 0346     		mov	r3, r0
 3519              		.loc 1 1915 12 discriminator 1
 3520 0196 202B     		cmp	r3, #32
 3521 0198 04D1     		bne	.L177
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 106


1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3522              		.loc 1 1918 28
 3523 019a 7B68     		ldr	r3, [r7, #4]
 3524 019c 1022     		movs	r2, #16
 3525 019e 5A64     		str	r2, [r3, #68]
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3526              		.loc 1 1920 18
 3527 01a0 0323     		movs	r3, #3
 3528 01a2 14E0     		b	.L176
 3529              	.L177:
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3530              		.loc 1 1927 22
 3531 01a4 7B68     		ldr	r3, [r7, #4]
 3532 01a6 0022     		movs	r2, #0
 3533 01a8 DA84     		strh	r2, [r3, #38]	@ movhi
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3534              		.loc 1 1928 22
 3535 01aa 7B68     		ldr	r3, [r7, #4]
 3536 01ac 0022     		movs	r2, #0
 3537 01ae DA85     		strh	r2, [r3, #46]	@ movhi
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 3538              		.loc 1 1931 20
 3539 01b0 7B68     		ldr	r3, [r7, #4]
 3540 01b2 0022     		movs	r2, #0
 3541 01b4 5A64     		str	r2, [r3, #68]
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3542              		.loc 1 1934 18
 3543 01b6 7B68     		ldr	r3, [r7, #4]
 3544 01b8 2022     		movs	r2, #32
 3545 01ba 83F84220 		strb	r2, [r3, #66]
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3546              		.loc 1 1935 17
 3547 01be 7B68     		ldr	r3, [r7, #4]
 3548 01c0 2022     		movs	r2, #32
 3549 01c2 83F84120 		strb	r2, [r3, #65]
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3550              		.loc 1 1936 24
 3551 01c6 7B68     		ldr	r3, [r7, #4]
 3552 01c8 0022     		movs	r2, #0
 3553 01ca 1A63     		str	r2, [r3, #48]
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3554              		.loc 1 1938 10
 3555 01cc 0023     		movs	r3, #0
 3556              	.L176:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 107


1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3557              		.loc 1 1939 1
 3558 01ce 1846     		mov	r0, r3
 3559 01d0 8037     		adds	r7, r7, #128
 3560              	.LCFI109:
 3561              		.cfi_def_cfa_offset 8
 3562 01d2 BD46     		mov	sp, r7
 3563              	.LCFI110:
 3564              		.cfi_def_cfa_register 13
 3565              		@ sp needed
 3566 01d4 80BD     		pop	{r7, pc}
 3567              		.cfi_endproc
 3568              	.LFE154:
 3570              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 3571              		.align	1
 3572              		.global	HAL_UART_AbortTransmit
 3573              		.syntax unified
 3574              		.thumb
 3575              		.thumb_func
 3577              	HAL_UART_AbortTransmit:
 3578              	.LFB155:
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3579              		.loc 1 1954 1
 3580              		.cfi_startproc
 3581              		@ args = 0, pretend = 0, frame = 56
 3582              		@ frame_needed = 1, uses_anonymous_args = 0
 3583 0000 80B5     		push	{r7, lr}
 3584              	.LCFI111:
 3585              		.cfi_def_cfa_offset 8
 3586              		.cfi_offset 7, -8
 3587              		.cfi_offset 14, -4
 3588 0002 8EB0     		sub	sp, sp, #56
 3589              	.LCFI112:
 3590              		.cfi_def_cfa_offset 64
 3591 0004 00AF     		add	r7, sp, #0
 3592              	.LCFI113:
 3593              		.cfi_def_cfa_register 7
 3594 0006 7860     		str	r0, [r7, #4]
 3595              	.L184:
 3596              	.LBB404:
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3597              		.loc 1 1956 3 discriminator 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 108


 3598 0008 7B68     		ldr	r3, [r7, #4]
 3599 000a 1B68     		ldr	r3, [r3]
 3600 000c 0C33     		adds	r3, r3, #12
 3601 000e 3B62     		str	r3, [r7, #32]
 3602              	.LBB405:
 3603              	.LBB406:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3604              		.loc 2 480 4
 3605 0010 3B6A     		ldr	r3, [r7, #32]
 3606              		.syntax unified
 3607              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3608 0012 53E8003F 		ldrex r3, [r3]
 3609              	@ 0 "" 2
 3610              		.thumb
 3611              		.syntax unified
 3612 0016 FB61     		str	r3, [r7, #28]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3613              		.loc 2 481 10
 3614 0018 FB69     		ldr	r3, [r7, #28]
 3615              	.LBE406:
 3616              	.LBE405:
 3617              		.loc 1 1956 3 discriminator 1
 3618 001a 23F0C003 		bic	r3, r3, #192
 3619 001e 7B63     		str	r3, [r7, #52]
 3620 0020 7B68     		ldr	r3, [r7, #4]
 3621 0022 1B68     		ldr	r3, [r3]
 3622 0024 0C33     		adds	r3, r3, #12
 3623 0026 7A6B     		ldr	r2, [r7, #52]
 3624 0028 FA62     		str	r2, [r7, #44]
 3625 002a BB62     		str	r3, [r7, #40]
 3626              	.LBB407:
 3627              	.LBB408:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3628              		.loc 2 531 4
 3629 002c B96A     		ldr	r1, [r7, #40]
 3630 002e FA6A     		ldr	r2, [r7, #44]
 3631              		.syntax unified
 3632              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3633 0030 41E80023 		strex r3, r2, [r1]
 3634              	@ 0 "" 2
 3635              		.thumb
 3636              		.syntax unified
 3637 0034 7B62     		str	r3, [r7, #36]
 3638              		.loc 2 532 10
 3639 0036 7B6A     		ldr	r3, [r7, #36]
 3640              	.LBE408:
 3641              	.LBE407:
 3642              		.loc 1 1956 3 discriminator 1
 3643 0038 002B     		cmp	r3, #0
 3644 003a E5D1     		bne	.L184
 3645              	.LBE404:
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3646              		.loc 1 1959 7
 3647 003c 7B68     		ldr	r3, [r7, #4]
 3648 003e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 109


 3649 0040 5B69     		ldr	r3, [r3, #20]
 3650 0042 03F08003 		and	r3, r3, #128
 3651              		.loc 1 1959 6
 3652 0046 802B     		cmp	r3, #128
 3653 0048 36D1     		bne	.L185
 3654              	.L188:
 3655              	.LBB409:
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3656              		.loc 1 1961 5 discriminator 1
 3657 004a 7B68     		ldr	r3, [r7, #4]
 3658 004c 1B68     		ldr	r3, [r3]
 3659 004e 1433     		adds	r3, r3, #20
 3660 0050 FB60     		str	r3, [r7, #12]
 3661              	.LBB410:
 3662              	.LBB411:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3663              		.loc 2 480 4
 3664 0052 FB68     		ldr	r3, [r7, #12]
 3665              		.syntax unified
 3666              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3667 0054 53E8003F 		ldrex r3, [r3]
 3668              	@ 0 "" 2
 3669              		.thumb
 3670              		.syntax unified
 3671 0058 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3672              		.loc 2 481 10
 3673 005a BB68     		ldr	r3, [r7, #8]
 3674              	.LBE411:
 3675              	.LBE410:
 3676              		.loc 1 1961 5 discriminator 1
 3677 005c 23F08003 		bic	r3, r3, #128
 3678 0060 3B63     		str	r3, [r7, #48]
 3679 0062 7B68     		ldr	r3, [r7, #4]
 3680 0064 1B68     		ldr	r3, [r3]
 3681 0066 1433     		adds	r3, r3, #20
 3682 0068 3A6B     		ldr	r2, [r7, #48]
 3683 006a BA61     		str	r2, [r7, #24]
 3684 006c 7B61     		str	r3, [r7, #20]
 3685              	.LBB412:
 3686              	.LBB413:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3687              		.loc 2 531 4
 3688 006e 7969     		ldr	r1, [r7, #20]
 3689 0070 BA69     		ldr	r2, [r7, #24]
 3690              		.syntax unified
 3691              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3692 0072 41E80023 		strex r3, r2, [r1]
 3693              	@ 0 "" 2
 3694              		.thumb
 3695              		.syntax unified
 3696 0076 3B61     		str	r3, [r7, #16]
 3697              		.loc 2 532 10
 3698 0078 3B69     		ldr	r3, [r7, #16]
 3699              	.LBE413:
 3700              	.LBE412:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 110


 3701              		.loc 1 1961 5 discriminator 1
 3702 007a 002B     		cmp	r3, #0
 3703 007c E5D1     		bne	.L188
 3704              	.LBE409:
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3705              		.loc 1 1964 14
 3706 007e 7B68     		ldr	r3, [r7, #4]
 3707 0080 9B6B     		ldr	r3, [r3, #56]
 3708              		.loc 1 1964 8
 3709 0082 002B     		cmp	r3, #0
 3710 0084 18D0     		beq	.L185
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3711              		.loc 1 1968 12
 3712 0086 7B68     		ldr	r3, [r7, #4]
 3713 0088 9B6B     		ldr	r3, [r3, #56]
 3714              		.loc 1 1968 40
 3715 008a 0022     		movs	r2, #0
 3716 008c 1A65     		str	r2, [r3, #80]
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3717              		.loc 1 1970 11
 3718 008e 7B68     		ldr	r3, [r7, #4]
 3719 0090 9B6B     		ldr	r3, [r3, #56]
 3720 0092 1846     		mov	r0, r3
 3721 0094 FFF7FEFF 		bl	HAL_DMA_Abort
 3722 0098 0346     		mov	r3, r0
 3723              		.loc 1 1970 10 discriminator 1
 3724 009a 002B     		cmp	r3, #0
 3725 009c 0CD0     		beq	.L185
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3726              		.loc 1 1972 13
 3727 009e 7B68     		ldr	r3, [r7, #4]
 3728 00a0 9B6B     		ldr	r3, [r3, #56]
 3729 00a2 1846     		mov	r0, r3
 3730 00a4 FFF7FEFF 		bl	HAL_DMA_GetError
 3731 00a8 0346     		mov	r3, r0
 3732              		.loc 1 1972 12 discriminator 1
 3733 00aa 202B     		cmp	r3, #32
 3734 00ac 04D1     		bne	.L185
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3735              		.loc 1 1975 28
 3736 00ae 7B68     		ldr	r3, [r7, #4]
 3737 00b0 1022     		movs	r2, #16
 3738 00b2 5A64     		str	r2, [r3, #68]
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3739              		.loc 1 1977 18
 3740 00b4 0323     		movs	r3, #3
 3741 00b6 07E0     		b	.L189
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 111


 3742              	.L185:
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3743              		.loc 1 1984 22
 3744 00b8 7B68     		ldr	r3, [r7, #4]
 3745 00ba 0022     		movs	r2, #0
 3746 00bc DA84     		strh	r2, [r3, #38]	@ movhi
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3747              		.loc 1 1987 17
 3748 00be 7B68     		ldr	r3, [r7, #4]
 3749 00c0 2022     		movs	r2, #32
 3750 00c2 83F84120 		strb	r2, [r3, #65]
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3751              		.loc 1 1989 10
 3752 00c6 0023     		movs	r3, #0
 3753              	.L189:
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3754              		.loc 1 1990 1
 3755 00c8 1846     		mov	r0, r3
 3756 00ca 3837     		adds	r7, r7, #56
 3757              	.LCFI114:
 3758              		.cfi_def_cfa_offset 8
 3759 00cc BD46     		mov	sp, r7
 3760              	.LCFI115:
 3761              		.cfi_def_cfa_register 13
 3762              		@ sp needed
 3763 00ce 80BD     		pop	{r7, pc}
 3764              		.cfi_endproc
 3765              	.LFE155:
 3767              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 3768              		.align	1
 3769              		.global	HAL_UART_AbortReceive
 3770              		.syntax unified
 3771              		.thumb
 3772              		.thumb_func
 3774              	HAL_UART_AbortReceive:
 3775              	.LFB156:
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 112


2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3776              		.loc 1 2005 1
 3777              		.cfi_startproc
 3778              		@ args = 0, pretend = 0, frame = 104
 3779              		@ frame_needed = 1, uses_anonymous_args = 0
 3780 0000 80B5     		push	{r7, lr}
 3781              	.LCFI116:
 3782              		.cfi_def_cfa_offset 8
 3783              		.cfi_offset 7, -8
 3784              		.cfi_offset 14, -4
 3785 0002 9AB0     		sub	sp, sp, #104
 3786              	.LCFI117:
 3787              		.cfi_def_cfa_offset 112
 3788 0004 00AF     		add	r7, sp, #0
 3789              	.LCFI118:
 3790              		.cfi_def_cfa_register 7
 3791 0006 7860     		str	r0, [r7, #4]
 3792              	.L193:
 3793              	.LBB414:
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3794              		.loc 1 2007 3 discriminator 1
 3795 0008 7B68     		ldr	r3, [r7, #4]
 3796 000a 1B68     		ldr	r3, [r3]
 3797 000c 0C33     		adds	r3, r3, #12
 3798 000e BB64     		str	r3, [r7, #72]
 3799              	.LBB415:
 3800              	.LBB416:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3801              		.loc 2 480 4
 3802 0010 BB6C     		ldr	r3, [r7, #72]
 3803              		.syntax unified
 3804              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3805 0012 53E8003F 		ldrex r3, [r3]
 3806              	@ 0 "" 2
 3807              		.thumb
 3808              		.syntax unified
 3809 0016 7B64     		str	r3, [r7, #68]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3810              		.loc 2 481 10
 3811 0018 7B6C     		ldr	r3, [r7, #68]
 3812              	.LBE416:
 3813              	.LBE415:
 3814              		.loc 1 2007 3 discriminator 1
 3815 001a 23F49073 		bic	r3, r3, #288
 3816 001e 7B66     		str	r3, [r7, #100]
 3817 0020 7B68     		ldr	r3, [r7, #4]
 3818 0022 1B68     		ldr	r3, [r3]
 3819 0024 0C33     		adds	r3, r3, #12
 3820 0026 7A6E     		ldr	r2, [r7, #100]
 3821 0028 7A65     		str	r2, [r7, #84]
 3822 002a 3B65     		str	r3, [r7, #80]
 3823              	.LBB417:
 3824              	.LBB418:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 113


 3825              		.loc 2 531 4
 3826 002c 396D     		ldr	r1, [r7, #80]
 3827 002e 7A6D     		ldr	r2, [r7, #84]
 3828              		.syntax unified
 3829              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3830 0030 41E80023 		strex r3, r2, [r1]
 3831              	@ 0 "" 2
 3832              		.thumb
 3833              		.syntax unified
 3834 0034 FB64     		str	r3, [r7, #76]
 3835              		.loc 2 532 10
 3836 0036 FB6C     		ldr	r3, [r7, #76]
 3837              	.LBE418:
 3838              	.LBE417:
 3839              		.loc 1 2007 3 discriminator 1
 3840 0038 002B     		cmp	r3, #0
 3841 003a E5D1     		bne	.L193
 3842              	.L196:
 3843              	.LBE414:
 3844              	.LBB419:
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3845              		.loc 1 2008 3 discriminator 1
 3846 003c 7B68     		ldr	r3, [r7, #4]
 3847 003e 1B68     		ldr	r3, [r3]
 3848 0040 1433     		adds	r3, r3, #20
 3849 0042 7B63     		str	r3, [r7, #52]
 3850              	.LBB420:
 3851              	.LBB421:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3852              		.loc 2 480 4
 3853 0044 7B6B     		ldr	r3, [r7, #52]
 3854              		.syntax unified
 3855              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3856 0046 53E8003F 		ldrex r3, [r3]
 3857              	@ 0 "" 2
 3858              		.thumb
 3859              		.syntax unified
 3860 004a 3B63     		str	r3, [r7, #48]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3861              		.loc 2 481 10
 3862 004c 3B6B     		ldr	r3, [r7, #48]
 3863              	.LBE421:
 3864              	.LBE420:
 3865              		.loc 1 2008 3 discriminator 1
 3866 004e 23F00103 		bic	r3, r3, #1
 3867 0052 3B66     		str	r3, [r7, #96]
 3868 0054 7B68     		ldr	r3, [r7, #4]
 3869 0056 1B68     		ldr	r3, [r3]
 3870 0058 1433     		adds	r3, r3, #20
 3871 005a 3A6E     		ldr	r2, [r7, #96]
 3872 005c 3A64     		str	r2, [r7, #64]
 3873 005e FB63     		str	r3, [r7, #60]
 3874              	.LBB422:
 3875              	.LBB423:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3876              		.loc 2 531 4
 3877 0060 F96B     		ldr	r1, [r7, #60]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 114


 3878 0062 3A6C     		ldr	r2, [r7, #64]
 3879              		.syntax unified
 3880              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3881 0064 41E80023 		strex r3, r2, [r1]
 3882              	@ 0 "" 2
 3883              		.thumb
 3884              		.syntax unified
 3885 0068 BB63     		str	r3, [r7, #56]
 3886              		.loc 2 532 10
 3887 006a BB6B     		ldr	r3, [r7, #56]
 3888              	.LBE423:
 3889              	.LBE422:
 3890              		.loc 1 2008 3 discriminator 1
 3891 006c 002B     		cmp	r3, #0
 3892 006e E5D1     		bne	.L196
 3893              	.LBE419:
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3894              		.loc 1 2011 12
 3895 0070 7B68     		ldr	r3, [r7, #4]
 3896 0072 1B6B     		ldr	r3, [r3, #48]
 3897              		.loc 1 2011 6
 3898 0074 012B     		cmp	r3, #1
 3899 0076 19D1     		bne	.L197
 3900              	.L200:
 3901              	.LBB424:
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3902              		.loc 1 2013 5 discriminator 1
 3903 0078 7B68     		ldr	r3, [r7, #4]
 3904 007a 1B68     		ldr	r3, [r3]
 3905 007c 0C33     		adds	r3, r3, #12
 3906 007e 3B62     		str	r3, [r7, #32]
 3907              	.LBB425:
 3908              	.LBB426:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3909              		.loc 2 480 4
 3910 0080 3B6A     		ldr	r3, [r7, #32]
 3911              		.syntax unified
 3912              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3913 0082 53E8003F 		ldrex r3, [r3]
 3914              	@ 0 "" 2
 3915              		.thumb
 3916              		.syntax unified
 3917 0086 FB61     		str	r3, [r7, #28]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3918              		.loc 2 481 10
 3919 0088 FB69     		ldr	r3, [r7, #28]
 3920              	.LBE426:
 3921              	.LBE425:
 3922              		.loc 1 2013 5 discriminator 1
 3923 008a 23F01003 		bic	r3, r3, #16
 3924 008e FB65     		str	r3, [r7, #92]
 3925 0090 7B68     		ldr	r3, [r7, #4]
 3926 0092 1B68     		ldr	r3, [r3]
 3927 0094 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 115


 3928 0096 FA6D     		ldr	r2, [r7, #92]
 3929 0098 FA62     		str	r2, [r7, #44]
 3930 009a BB62     		str	r3, [r7, #40]
 3931              	.LBB427:
 3932              	.LBB428:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3933              		.loc 2 531 4
 3934 009c B96A     		ldr	r1, [r7, #40]
 3935 009e FA6A     		ldr	r2, [r7, #44]
 3936              		.syntax unified
 3937              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3938 00a0 41E80023 		strex r3, r2, [r1]
 3939              	@ 0 "" 2
 3940              		.thumb
 3941              		.syntax unified
 3942 00a4 7B62     		str	r3, [r7, #36]
 3943              		.loc 2 532 10
 3944 00a6 7B6A     		ldr	r3, [r7, #36]
 3945              	.LBE428:
 3946              	.LBE427:
 3947              		.loc 1 2013 5 discriminator 1
 3948 00a8 002B     		cmp	r3, #0
 3949 00aa E5D1     		bne	.L200
 3950              	.L197:
 3951              	.LBE424:
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3952              		.loc 1 2017 7
 3953 00ac 7B68     		ldr	r3, [r7, #4]
 3954 00ae 1B68     		ldr	r3, [r3]
 3955 00b0 5B69     		ldr	r3, [r3, #20]
 3956 00b2 03F04003 		and	r3, r3, #64
 3957              		.loc 1 2017 6
 3958 00b6 402B     		cmp	r3, #64
 3959 00b8 36D1     		bne	.L201
 3960              	.L204:
 3961              	.LBB429:
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3962              		.loc 1 2019 5 discriminator 1
 3963 00ba 7B68     		ldr	r3, [r7, #4]
 3964 00bc 1B68     		ldr	r3, [r3]
 3965 00be 1433     		adds	r3, r3, #20
 3966 00c0 FB60     		str	r3, [r7, #12]
 3967              	.LBB430:
 3968              	.LBB431:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3969              		.loc 2 480 4
 3970 00c2 FB68     		ldr	r3, [r7, #12]
 3971              		.syntax unified
 3972              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3973 00c4 53E8003F 		ldrex r3, [r3]
 3974              	@ 0 "" 2
 3975              		.thumb
 3976              		.syntax unified
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 116


 3977 00c8 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3978              		.loc 2 481 10
 3979 00ca BB68     		ldr	r3, [r7, #8]
 3980              	.LBE431:
 3981              	.LBE430:
 3982              		.loc 1 2019 5 discriminator 1
 3983 00cc 23F04003 		bic	r3, r3, #64
 3984 00d0 BB65     		str	r3, [r7, #88]
 3985 00d2 7B68     		ldr	r3, [r7, #4]
 3986 00d4 1B68     		ldr	r3, [r3]
 3987 00d6 1433     		adds	r3, r3, #20
 3988 00d8 BA6D     		ldr	r2, [r7, #88]
 3989 00da BA61     		str	r2, [r7, #24]
 3990 00dc 7B61     		str	r3, [r7, #20]
 3991              	.LBB432:
 3992              	.LBB433:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3993              		.loc 2 531 4
 3994 00de 7969     		ldr	r1, [r7, #20]
 3995 00e0 BA69     		ldr	r2, [r7, #24]
 3996              		.syntax unified
 3997              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3998 00e2 41E80023 		strex r3, r2, [r1]
 3999              	@ 0 "" 2
 4000              		.thumb
 4001              		.syntax unified
 4002 00e6 3B61     		str	r3, [r7, #16]
 4003              		.loc 2 532 10
 4004 00e8 3B69     		ldr	r3, [r7, #16]
 4005              	.LBE433:
 4006              	.LBE432:
 4007              		.loc 1 2019 5 discriminator 1
 4008 00ea 002B     		cmp	r3, #0
 4009 00ec E5D1     		bne	.L204
 4010              	.LBE429:
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4011              		.loc 1 2022 14
 4012 00ee 7B68     		ldr	r3, [r7, #4]
 4013 00f0 DB6B     		ldr	r3, [r3, #60]
 4014              		.loc 1 2022 8
 4015 00f2 002B     		cmp	r3, #0
 4016 00f4 18D0     		beq	.L201
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 4017              		.loc 1 2026 12
 4018 00f6 7B68     		ldr	r3, [r7, #4]
 4019 00f8 DB6B     		ldr	r3, [r3, #60]
 4020              		.loc 1 2026 40
 4021 00fa 0022     		movs	r2, #0
 4022 00fc 1A65     		str	r2, [r3, #80]
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 117


 4023              		.loc 1 2028 11
 4024 00fe 7B68     		ldr	r3, [r7, #4]
 4025 0100 DB6B     		ldr	r3, [r3, #60]
 4026 0102 1846     		mov	r0, r3
 4027 0104 FFF7FEFF 		bl	HAL_DMA_Abort
 4028 0108 0346     		mov	r3, r0
 4029              		.loc 1 2028 10 discriminator 1
 4030 010a 002B     		cmp	r3, #0
 4031 010c 0CD0     		beq	.L201
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 4032              		.loc 1 2030 13
 4033 010e 7B68     		ldr	r3, [r7, #4]
 4034 0110 DB6B     		ldr	r3, [r3, #60]
 4035 0112 1846     		mov	r0, r3
 4036 0114 FFF7FEFF 		bl	HAL_DMA_GetError
 4037 0118 0346     		mov	r3, r0
 4038              		.loc 1 2030 12 discriminator 1
 4039 011a 202B     		cmp	r3, #32
 4040 011c 04D1     		bne	.L201
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 4041              		.loc 1 2033 28
 4042 011e 7B68     		ldr	r3, [r7, #4]
 4043 0120 1022     		movs	r2, #16
 4044 0122 5A64     		str	r2, [r3, #68]
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 4045              		.loc 1 2035 18
 4046 0124 0323     		movs	r3, #3
 4047 0126 0AE0     		b	.L205
 4048              	.L201:
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Rx transfer counter */
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 4049              		.loc 1 2042 22
 4050 0128 7B68     		ldr	r3, [r7, #4]
 4051 012a 0022     		movs	r2, #0
 4052 012c DA85     		strh	r2, [r3, #46]	@ movhi
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4053              		.loc 1 2045 18
 4054 012e 7B68     		ldr	r3, [r7, #4]
 4055 0130 2022     		movs	r2, #32
 4056 0132 83F84220 		strb	r2, [r3, #66]
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4057              		.loc 1 2046 24
 4058 0136 7B68     		ldr	r3, [r7, #4]
 4059 0138 0022     		movs	r2, #0
 4060 013a 1A63     		str	r2, [r3, #48]
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 118


2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4061              		.loc 1 2048 10
 4062 013c 0023     		movs	r3, #0
 4063              	.L205:
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4064              		.loc 1 2049 1
 4065 013e 1846     		mov	r0, r3
 4066 0140 6837     		adds	r7, r7, #104
 4067              	.LCFI119:
 4068              		.cfi_def_cfa_offset 8
 4069 0142 BD46     		mov	sp, r7
 4070              	.LCFI120:
 4071              		.cfi_def_cfa_register 13
 4072              		@ sp needed
 4073 0144 80BD     		pop	{r7, pc}
 4074              		.cfi_endproc
 4075              	.LFE156:
 4077              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 4078              		.align	1
 4079              		.global	HAL_UART_Abort_IT
 4080              		.syntax unified
 4081              		.thumb
 4082              		.thumb_func
 4084              	HAL_UART_Abort_IT:
 4085              	.LFB157:
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4086              		.loc 1 2066 1
 4087              		.cfi_startproc
 4088              		@ args = 0, pretend = 0, frame = 136
 4089              		@ frame_needed = 1, uses_anonymous_args = 0
 4090 0000 80B5     		push	{r7, lr}
 4091              	.LCFI121:
 4092              		.cfi_def_cfa_offset 8
 4093              		.cfi_offset 7, -8
 4094              		.cfi_offset 14, -4
 4095 0002 A2B0     		sub	sp, sp, #136
 4096              	.LCFI122:
 4097              		.cfi_def_cfa_offset 144
 4098 0004 00AF     		add	r7, sp, #0
 4099              	.LCFI123:
 4100              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 119


 4101 0006 7860     		str	r0, [r7, #4]
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 4102              		.loc 1 2067 12
 4103 0008 0123     		movs	r3, #1
 4104 000a C7F88430 		str	r3, [r7, #132]
 4105              	.L209:
 4106              	.LBB434:
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
 4107              		.loc 1 2070 3 discriminator 1
 4108 000e 7B68     		ldr	r3, [r7, #4]
 4109 0010 1B68     		ldr	r3, [r3]
 4110 0012 0C33     		adds	r3, r3, #12
 4111 0014 3B66     		str	r3, [r7, #96]
 4112              	.LBB435:
 4113              	.LBB436:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4114              		.loc 2 480 4
 4115 0016 3B6E     		ldr	r3, [r7, #96]
 4116              		.syntax unified
 4117              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4118 0018 53E8003F 		ldrex r3, [r3]
 4119              	@ 0 "" 2
 4120              		.thumb
 4121              		.syntax unified
 4122 001c FB65     		str	r3, [r7, #92]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4123              		.loc 2 481 10
 4124 001e FB6D     		ldr	r3, [r7, #92]
 4125              	.LBE436:
 4126              	.LBE435:
 4127              		.loc 1 2070 3 discriminator 1
 4128 0020 23F4F073 		bic	r3, r3, #480
 4129 0024 C7F88030 		str	r3, [r7, #128]
 4130 0028 7B68     		ldr	r3, [r7, #4]
 4131 002a 1B68     		ldr	r3, [r3]
 4132 002c 0C33     		adds	r3, r3, #12
 4133 002e D7F88020 		ldr	r2, [r7, #128]
 4134 0032 FA66     		str	r2, [r7, #108]
 4135 0034 BB66     		str	r3, [r7, #104]
 4136              	.LBB437:
 4137              	.LBB438:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4138              		.loc 2 531 4
 4139 0036 B96E     		ldr	r1, [r7, #104]
 4140 0038 FA6E     		ldr	r2, [r7, #108]
 4141              		.syntax unified
 4142              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4143 003a 41E80023 		strex r3, r2, [r1]
 4144              	@ 0 "" 2
 4145              		.thumb
 4146              		.syntax unified
 4147 003e 7B66     		str	r3, [r7, #100]
 4148              		.loc 2 532 10
 4149 0040 7B6E     		ldr	r3, [r7, #100]
 4150              	.LBE438:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 120


 4151              	.LBE437:
 4152              		.loc 1 2070 3 discriminator 1
 4153 0042 002B     		cmp	r3, #0
 4154 0044 E3D1     		bne	.L209
 4155              	.L212:
 4156              	.LBE434:
 4157              	.LBB439:
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4158              		.loc 1 2071 3 discriminator 1
 4159 0046 7B68     		ldr	r3, [r7, #4]
 4160 0048 1B68     		ldr	r3, [r3]
 4161 004a 1433     		adds	r3, r3, #20
 4162 004c FB64     		str	r3, [r7, #76]
 4163              	.LBB440:
 4164              	.LBB441:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4165              		.loc 2 480 4
 4166 004e FB6C     		ldr	r3, [r7, #76]
 4167              		.syntax unified
 4168              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4169 0050 53E8003F 		ldrex r3, [r3]
 4170              	@ 0 "" 2
 4171              		.thumb
 4172              		.syntax unified
 4173 0054 BB64     		str	r3, [r7, #72]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4174              		.loc 2 481 10
 4175 0056 BB6C     		ldr	r3, [r7, #72]
 4176              	.LBE441:
 4177              	.LBE440:
 4178              		.loc 1 2071 3 discriminator 1
 4179 0058 23F00103 		bic	r3, r3, #1
 4180 005c FB67     		str	r3, [r7, #124]
 4181 005e 7B68     		ldr	r3, [r7, #4]
 4182 0060 1B68     		ldr	r3, [r3]
 4183 0062 1433     		adds	r3, r3, #20
 4184 0064 FA6F     		ldr	r2, [r7, #124]
 4185 0066 BA65     		str	r2, [r7, #88]
 4186 0068 7B65     		str	r3, [r7, #84]
 4187              	.LBB442:
 4188              	.LBB443:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4189              		.loc 2 531 4
 4190 006a 796D     		ldr	r1, [r7, #84]
 4191 006c BA6D     		ldr	r2, [r7, #88]
 4192              		.syntax unified
 4193              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4194 006e 41E80023 		strex r3, r2, [r1]
 4195              	@ 0 "" 2
 4196              		.thumb
 4197              		.syntax unified
 4198 0072 3B65     		str	r3, [r7, #80]
 4199              		.loc 2 532 10
 4200 0074 3B6D     		ldr	r3, [r7, #80]
 4201              	.LBE443:
 4202              	.LBE442:
 4203              		.loc 1 2071 3 discriminator 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 121


 4204 0076 002B     		cmp	r3, #0
 4205 0078 E5D1     		bne	.L212
 4206              	.LBE439:
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4207              		.loc 1 2074 12
 4208 007a 7B68     		ldr	r3, [r7, #4]
 4209 007c 1B6B     		ldr	r3, [r3, #48]
 4210              		.loc 1 2074 6
 4211 007e 012B     		cmp	r3, #1
 4212 0080 19D1     		bne	.L213
 4213              	.L216:
 4214              	.LBB444:
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 4215              		.loc 1 2076 5 discriminator 1
 4216 0082 7B68     		ldr	r3, [r7, #4]
 4217 0084 1B68     		ldr	r3, [r3]
 4218 0086 0C33     		adds	r3, r3, #12
 4219 0088 BB63     		str	r3, [r7, #56]
 4220              	.LBB445:
 4221              	.LBB446:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4222              		.loc 2 480 4
 4223 008a BB6B     		ldr	r3, [r7, #56]
 4224              		.syntax unified
 4225              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4226 008c 53E8003F 		ldrex r3, [r3]
 4227              	@ 0 "" 2
 4228              		.thumb
 4229              		.syntax unified
 4230 0090 7B63     		str	r3, [r7, #52]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4231              		.loc 2 481 10
 4232 0092 7B6B     		ldr	r3, [r7, #52]
 4233              	.LBE446:
 4234              	.LBE445:
 4235              		.loc 1 2076 5 discriminator 1
 4236 0094 23F01003 		bic	r3, r3, #16
 4237 0098 BB67     		str	r3, [r7, #120]
 4238 009a 7B68     		ldr	r3, [r7, #4]
 4239 009c 1B68     		ldr	r3, [r3]
 4240 009e 0C33     		adds	r3, r3, #12
 4241 00a0 BA6F     		ldr	r2, [r7, #120]
 4242 00a2 7A64     		str	r2, [r7, #68]
 4243 00a4 3B64     		str	r3, [r7, #64]
 4244              	.LBB447:
 4245              	.LBB448:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4246              		.loc 2 531 4
 4247 00a6 396C     		ldr	r1, [r7, #64]
 4248 00a8 7A6C     		ldr	r2, [r7, #68]
 4249              		.syntax unified
 4250              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4251 00aa 41E80023 		strex r3, r2, [r1]
 4252              	@ 0 "" 2
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 122


 4253              		.thumb
 4254              		.syntax unified
 4255 00ae FB63     		str	r3, [r7, #60]
 4256              		.loc 2 532 10
 4257 00b0 FB6B     		ldr	r3, [r7, #60]
 4258              	.LBE448:
 4259              	.LBE447:
 4260              		.loc 1 2076 5 discriminator 1
 4261 00b2 002B     		cmp	r3, #0
 4262 00b4 E5D1     		bne	.L216
 4263              	.L213:
 4264              	.LBE444:
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      before any call to DMA Abort functions */
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 4265              		.loc 1 2082 12
 4266 00b6 7B68     		ldr	r3, [r7, #4]
 4267 00b8 9B6B     		ldr	r3, [r3, #56]
 4268              		.loc 1 2082 6
 4269 00ba 002B     		cmp	r3, #0
 4270 00bc 0FD0     		beq	.L217
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4271              		.loc 1 2086 9
 4272 00be 7B68     		ldr	r3, [r7, #4]
 4273 00c0 1B68     		ldr	r3, [r3]
 4274 00c2 5B69     		ldr	r3, [r3, #20]
 4275 00c4 03F08003 		and	r3, r3, #128
 4276              		.loc 1 2086 8
 4277 00c8 802B     		cmp	r3, #128
 4278 00ca 04D1     		bne	.L218
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 4279              		.loc 1 2088 12
 4280 00cc 7B68     		ldr	r3, [r7, #4]
 4281 00ce 9B6B     		ldr	r3, [r3, #56]
 4282              		.loc 1 2088 40
 4283 00d0 534A     		ldr	r2, .L233
 4284 00d2 1A65     		str	r2, [r3, #80]
 4285 00d4 03E0     		b	.L217
 4286              	.L218:
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 4287              		.loc 1 2092 12
 4288 00d6 7B68     		ldr	r3, [r7, #4]
 4289 00d8 9B6B     		ldr	r3, [r3, #56]
 4290              		.loc 1 2092 40
 4291 00da 0022     		movs	r2, #0
 4292 00dc 1A65     		str	r2, [r3, #80]
 4293              	.L217:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 123


2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 4294              		.loc 1 2096 12
 4295 00de 7B68     		ldr	r3, [r7, #4]
 4296 00e0 DB6B     		ldr	r3, [r3, #60]
 4297              		.loc 1 2096 6
 4298 00e2 002B     		cmp	r3, #0
 4299 00e4 0FD0     		beq	.L219
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4300              		.loc 1 2100 9
 4301 00e6 7B68     		ldr	r3, [r7, #4]
 4302 00e8 1B68     		ldr	r3, [r3]
 4303 00ea 5B69     		ldr	r3, [r3, #20]
 4304 00ec 03F04003 		and	r3, r3, #64
 4305              		.loc 1 2100 8
 4306 00f0 402B     		cmp	r3, #64
 4307 00f2 04D1     		bne	.L220
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 4308              		.loc 1 2102 12
 4309 00f4 7B68     		ldr	r3, [r7, #4]
 4310 00f6 DB6B     		ldr	r3, [r3, #60]
 4311              		.loc 1 2102 40
 4312 00f8 4A4A     		ldr	r2, .L233+4
 4313 00fa 1A65     		str	r2, [r3, #80]
 4314 00fc 03E0     		b	.L219
 4315              	.L220:
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 4316              		.loc 1 2106 12
 4317 00fe 7B68     		ldr	r3, [r7, #4]
 4318 0100 DB6B     		ldr	r3, [r3, #60]
 4319              		.loc 1 2106 40
 4320 0102 0022     		movs	r2, #0
 4321 0104 1A65     		str	r2, [r3, #80]
 4322              	.L219:
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4323              		.loc 1 2111 7
 4324 0106 7B68     		ldr	r3, [r7, #4]
 4325 0108 1B68     		ldr	r3, [r3]
 4326 010a 5B69     		ldr	r3, [r3, #20]
 4327 010c 03F08003 		and	r3, r3, #128
 4328              		.loc 1 2111 6
 4329 0110 802B     		cmp	r3, #128
 4330 0112 2DD1     		bne	.L221
 4331              	.L224:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 124


 4332              	.LBB449:
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4333              		.loc 1 2114 5 discriminator 1
 4334 0114 7B68     		ldr	r3, [r7, #4]
 4335 0116 1B68     		ldr	r3, [r3]
 4336 0118 1433     		adds	r3, r3, #20
 4337 011a 7B62     		str	r3, [r7, #36]
 4338              	.LBB450:
 4339              	.LBB451:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4340              		.loc 2 480 4
 4341 011c 7B6A     		ldr	r3, [r7, #36]
 4342              		.syntax unified
 4343              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4344 011e 53E8003F 		ldrex r3, [r3]
 4345              	@ 0 "" 2
 4346              		.thumb
 4347              		.syntax unified
 4348 0122 3B62     		str	r3, [r7, #32]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4349              		.loc 2 481 10
 4350 0124 3B6A     		ldr	r3, [r7, #32]
 4351              	.LBE451:
 4352              	.LBE450:
 4353              		.loc 1 2114 5 discriminator 1
 4354 0126 23F08003 		bic	r3, r3, #128
 4355 012a 7B67     		str	r3, [r7, #116]
 4356 012c 7B68     		ldr	r3, [r7, #4]
 4357 012e 1B68     		ldr	r3, [r3]
 4358 0130 1433     		adds	r3, r3, #20
 4359 0132 7A6F     		ldr	r2, [r7, #116]
 4360 0134 3A63     		str	r2, [r7, #48]
 4361 0136 FB62     		str	r3, [r7, #44]
 4362              	.LBB452:
 4363              	.LBB453:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4364              		.loc 2 531 4
 4365 0138 F96A     		ldr	r1, [r7, #44]
 4366 013a 3A6B     		ldr	r2, [r7, #48]
 4367              		.syntax unified
 4368              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4369 013c 41E80023 		strex r3, r2, [r1]
 4370              	@ 0 "" 2
 4371              		.thumb
 4372              		.syntax unified
 4373 0140 BB62     		str	r3, [r7, #40]
 4374              		.loc 2 532 10
 4375 0142 BB6A     		ldr	r3, [r7, #40]
 4376              	.LBE453:
 4377              	.LBE452:
 4378              		.loc 1 2114 5 discriminator 1
 4379 0144 002B     		cmp	r3, #0
 4380 0146 E5D1     		bne	.L224
 4381              	.LBE449:
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 125


2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use non blocking DMA Abort API (callback) */
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4382              		.loc 1 2117 14
 4383 0148 7B68     		ldr	r3, [r7, #4]
 4384 014a 9B6B     		ldr	r3, [r3, #56]
 4385              		.loc 1 2117 8
 4386 014c 002B     		cmp	r3, #0
 4387 014e 0FD0     		beq	.L221
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4388              		.loc 1 2123 11
 4389 0150 7B68     		ldr	r3, [r7, #4]
 4390 0152 9B6B     		ldr	r3, [r3, #56]
 4391 0154 1846     		mov	r0, r3
 4392 0156 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4393 015a 0346     		mov	r3, r0
 4394              		.loc 1 2123 10 discriminator 1
 4395 015c 002B     		cmp	r3, #0
 4396 015e 04D0     		beq	.L225
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 4397              		.loc 1 2125 14
 4398 0160 7B68     		ldr	r3, [r7, #4]
 4399 0162 9B6B     		ldr	r3, [r3, #56]
 4400              		.loc 1 2125 42
 4401 0164 0022     		movs	r2, #0
 4402 0166 1A65     		str	r2, [r3, #80]
 4403 0168 02E0     		b	.L221
 4404              	.L225:
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
 4405              		.loc 1 2129 19
 4406 016a 0023     		movs	r3, #0
 4407 016c C7F88430 		str	r3, [r7, #132]
 4408              	.L221:
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4409              		.loc 1 2135 7
 4410 0170 7B68     		ldr	r3, [r7, #4]
 4411 0172 1B68     		ldr	r3, [r3]
 4412 0174 5B69     		ldr	r3, [r3, #20]
 4413 0176 03F04003 		and	r3, r3, #64
 4414              		.loc 1 2135 6
 4415 017a 402B     		cmp	r3, #64
 4416 017c 30D1     		bne	.L226
 4417              	.L229:
 4418              	.LBB454:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 126


2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4419              		.loc 1 2137 5 discriminator 1
 4420 017e 7B68     		ldr	r3, [r7, #4]
 4421 0180 1B68     		ldr	r3, [r3]
 4422 0182 1433     		adds	r3, r3, #20
 4423 0184 3B61     		str	r3, [r7, #16]
 4424              	.LBB455:
 4425              	.LBB456:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4426              		.loc 2 480 4
 4427 0186 3B69     		ldr	r3, [r7, #16]
 4428              		.syntax unified
 4429              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4430 0188 53E8003F 		ldrex r3, [r3]
 4431              	@ 0 "" 2
 4432              		.thumb
 4433              		.syntax unified
 4434 018c FB60     		str	r3, [r7, #12]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4435              		.loc 2 481 10
 4436 018e FB68     		ldr	r3, [r7, #12]
 4437              	.LBE456:
 4438              	.LBE455:
 4439              		.loc 1 2137 5 discriminator 1
 4440 0190 23F04003 		bic	r3, r3, #64
 4441 0194 3B67     		str	r3, [r7, #112]
 4442 0196 7B68     		ldr	r3, [r7, #4]
 4443 0198 1B68     		ldr	r3, [r3]
 4444 019a 1433     		adds	r3, r3, #20
 4445 019c 3A6F     		ldr	r2, [r7, #112]
 4446 019e FA61     		str	r2, [r7, #28]
 4447 01a0 BB61     		str	r3, [r7, #24]
 4448              	.LBB457:
 4449              	.LBB458:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4450              		.loc 2 531 4
 4451 01a2 B969     		ldr	r1, [r7, #24]
 4452 01a4 FA69     		ldr	r2, [r7, #28]
 4453              		.syntax unified
 4454              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4455 01a6 41E80023 		strex r3, r2, [r1]
 4456              	@ 0 "" 2
 4457              		.thumb
 4458              		.syntax unified
 4459 01aa 7B61     		str	r3, [r7, #20]
 4460              		.loc 2 532 10
 4461 01ac 7B69     		ldr	r3, [r7, #20]
 4462              	.LBE458:
 4463              	.LBE457:
 4464              		.loc 1 2137 5 discriminator 1
 4465 01ae 002B     		cmp	r3, #0
 4466 01b0 E5D1     		bne	.L229
 4467              	.LBE454:
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use non blocking DMA Abort API (callback) */
2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 127


 4468              		.loc 1 2140 14
 4469 01b2 7B68     		ldr	r3, [r7, #4]
 4470 01b4 DB6B     		ldr	r3, [r3, #60]
 4471              		.loc 1 2140 8
 4472 01b6 002B     		cmp	r3, #0
 4473 01b8 12D0     		beq	.L226
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 4474              		.loc 1 2146 11
 4475 01ba 7B68     		ldr	r3, [r7, #4]
 4476 01bc DB6B     		ldr	r3, [r3, #60]
 4477 01be 1846     		mov	r0, r3
 4478 01c0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4479 01c4 0346     		mov	r3, r0
 4480              		.loc 1 2146 10 discriminator 1
 4481 01c6 002B     		cmp	r3, #0
 4482 01c8 07D0     		beq	.L230
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 4483              		.loc 1 2148 14
 4484 01ca 7B68     		ldr	r3, [r7, #4]
 4485 01cc DB6B     		ldr	r3, [r3, #60]
 4486              		.loc 1 2148 42
 4487 01ce 0022     		movs	r2, #0
 4488 01d0 1A65     		str	r2, [r3, #80]
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
 4489              		.loc 1 2149 19
 4490 01d2 0123     		movs	r3, #1
 4491 01d4 C7F88430 		str	r3, [r7, #132]
 4492 01d8 02E0     		b	.L226
 4493              	.L230:
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
 4494              		.loc 1 2153 19
 4495 01da 0023     		movs	r3, #0
 4496 01dc C7F88430 		str	r3, [r7, #132]
 4497              	.L226:
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (AbortCplt == 0x01U)
 4498              		.loc 1 2159 6
 4499 01e0 D7F88430 		ldr	r3, [r7, #132]
 4500 01e4 012B     		cmp	r3, #1
 4501 01e6 16D1     		bne	.L231
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4502              		.loc 1 2162 24
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 128


 4503 01e8 7B68     		ldr	r3, [r7, #4]
 4504 01ea 0022     		movs	r2, #0
 4505 01ec DA84     		strh	r2, [r3, #38]	@ movhi
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 4506              		.loc 1 2163 24
 4507 01ee 7B68     		ldr	r3, [r7, #4]
 4508 01f0 0022     		movs	r2, #0
 4509 01f2 DA85     		strh	r2, [r3, #46]	@ movhi
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset ErrorCode */
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 4510              		.loc 1 2166 22
 4511 01f4 7B68     		ldr	r3, [r7, #4]
 4512 01f6 0022     		movs	r2, #0
 4513 01f8 5A64     		str	r2, [r3, #68]
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 4514              		.loc 1 2169 20
 4515 01fa 7B68     		ldr	r3, [r7, #4]
 4516 01fc 2022     		movs	r2, #32
 4517 01fe 83F84120 		strb	r2, [r3, #65]
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4518              		.loc 1 2170 20
 4519 0202 7B68     		ldr	r3, [r7, #4]
 4520 0204 2022     		movs	r2, #32
 4521 0206 83F84220 		strb	r2, [r3, #66]
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4522              		.loc 1 2171 26
 4523 020a 7B68     		ldr	r3, [r7, #4]
 4524 020c 0022     		movs	r2, #0
 4525 020e 1A63     		str	r2, [r3, #48]
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort complete callback */
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 4526              		.loc 1 2179 5
 4527 0210 7868     		ldr	r0, [r7, #4]
 4528 0212 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4529              	.L231:
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4530              		.loc 1 2183 10
 4531 0216 0023     		movs	r3, #0
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4532              		.loc 1 2184 1
 4533 0218 1846     		mov	r0, r3
 4534 021a 8837     		adds	r7, r7, #136
 4535              	.LCFI124:
 4536              		.cfi_def_cfa_offset 8
 4537 021c BD46     		mov	sp, r7
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 129


 4538              	.LCFI125:
 4539              		.cfi_def_cfa_register 13
 4540              		@ sp needed
 4541 021e 80BD     		pop	{r7, pc}
 4542              	.L234:
 4543              		.align	2
 4544              	.L233:
 4545 0220 00000000 		.word	UART_DMATxAbortCallback
 4546 0224 00000000 		.word	UART_DMARxAbortCallback
 4547              		.cfi_endproc
 4548              	.LFE157:
 4550              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 4551              		.align	1
 4552              		.global	HAL_UART_AbortTransmit_IT
 4553              		.syntax unified
 4554              		.thumb
 4555              		.thumb_func
 4557              	HAL_UART_AbortTransmit_IT:
 4558              	.LFB158:
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4559              		.loc 1 2201 1
 4560              		.cfi_startproc
 4561              		@ args = 0, pretend = 0, frame = 56
 4562              		@ frame_needed = 1, uses_anonymous_args = 0
 4563 0000 80B5     		push	{r7, lr}
 4564              	.LCFI126:
 4565              		.cfi_def_cfa_offset 8
 4566              		.cfi_offset 7, -8
 4567              		.cfi_offset 14, -4
 4568 0002 8EB0     		sub	sp, sp, #56
 4569              	.LCFI127:
 4570              		.cfi_def_cfa_offset 64
 4571 0004 00AF     		add	r7, sp, #0
 4572              	.LCFI128:
 4573              		.cfi_def_cfa_register 7
 4574 0006 7860     		str	r0, [r7, #4]
 4575              	.L238:
 4576              	.LBB459:
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 4577              		.loc 1 2203 3 discriminator 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 130


 4578 0008 7B68     		ldr	r3, [r7, #4]
 4579 000a 1B68     		ldr	r3, [r3]
 4580 000c 0C33     		adds	r3, r3, #12
 4581 000e 3B62     		str	r3, [r7, #32]
 4582              	.LBB460:
 4583              	.LBB461:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4584              		.loc 2 480 4
 4585 0010 3B6A     		ldr	r3, [r7, #32]
 4586              		.syntax unified
 4587              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4588 0012 53E8003F 		ldrex r3, [r3]
 4589              	@ 0 "" 2
 4590              		.thumb
 4591              		.syntax unified
 4592 0016 FB61     		str	r3, [r7, #28]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4593              		.loc 2 481 10
 4594 0018 FB69     		ldr	r3, [r7, #28]
 4595              	.LBE461:
 4596              	.LBE460:
 4597              		.loc 1 2203 3 discriminator 1
 4598 001a 23F0C003 		bic	r3, r3, #192
 4599 001e 7B63     		str	r3, [r7, #52]
 4600 0020 7B68     		ldr	r3, [r7, #4]
 4601 0022 1B68     		ldr	r3, [r3]
 4602 0024 0C33     		adds	r3, r3, #12
 4603 0026 7A6B     		ldr	r2, [r7, #52]
 4604 0028 FA62     		str	r2, [r7, #44]
 4605 002a BB62     		str	r3, [r7, #40]
 4606              	.LBB462:
 4607              	.LBB463:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4608              		.loc 2 531 4
 4609 002c B96A     		ldr	r1, [r7, #40]
 4610 002e FA6A     		ldr	r2, [r7, #44]
 4611              		.syntax unified
 4612              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4613 0030 41E80023 		strex r3, r2, [r1]
 4614              	@ 0 "" 2
 4615              		.thumb
 4616              		.syntax unified
 4617 0034 7B62     		str	r3, [r7, #36]
 4618              		.loc 2 532 10
 4619 0036 7B6A     		ldr	r3, [r7, #36]
 4620              	.LBE463:
 4621              	.LBE462:
 4622              		.loc 1 2203 3 discriminator 1
 4623 0038 002B     		cmp	r3, #0
 4624 003a E5D1     		bne	.L238
 4625              	.LBE459:
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4626              		.loc 1 2206 7
 4627 003c 7B68     		ldr	r3, [r7, #4]
 4628 003e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 131


 4629 0040 5B69     		ldr	r3, [r3, #20]
 4630 0042 03F08003 		and	r3, r3, #128
 4631              		.loc 1 2206 6
 4632 0046 802B     		cmp	r3, #128
 4633 0048 3CD1     		bne	.L239
 4634              	.L242:
 4635              	.LBB464:
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4636              		.loc 1 2208 5 discriminator 1
 4637 004a 7B68     		ldr	r3, [r7, #4]
 4638 004c 1B68     		ldr	r3, [r3]
 4639 004e 1433     		adds	r3, r3, #20
 4640 0050 FB60     		str	r3, [r7, #12]
 4641              	.LBB465:
 4642              	.LBB466:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4643              		.loc 2 480 4
 4644 0052 FB68     		ldr	r3, [r7, #12]
 4645              		.syntax unified
 4646              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4647 0054 53E8003F 		ldrex r3, [r3]
 4648              	@ 0 "" 2
 4649              		.thumb
 4650              		.syntax unified
 4651 0058 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4652              		.loc 2 481 10
 4653 005a BB68     		ldr	r3, [r7, #8]
 4654              	.LBE466:
 4655              	.LBE465:
 4656              		.loc 1 2208 5 discriminator 1
 4657 005c 23F08003 		bic	r3, r3, #128
 4658 0060 3B63     		str	r3, [r7, #48]
 4659 0062 7B68     		ldr	r3, [r7, #4]
 4660 0064 1B68     		ldr	r3, [r3]
 4661 0066 1433     		adds	r3, r3, #20
 4662 0068 3A6B     		ldr	r2, [r7, #48]
 4663 006a BA61     		str	r2, [r7, #24]
 4664 006c 7B61     		str	r3, [r7, #20]
 4665              	.LBB467:
 4666              	.LBB468:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4667              		.loc 2 531 4
 4668 006e 7969     		ldr	r1, [r7, #20]
 4669 0070 BA69     		ldr	r2, [r7, #24]
 4670              		.syntax unified
 4671              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4672 0072 41E80023 		strex r3, r2, [r1]
 4673              	@ 0 "" 2
 4674              		.thumb
 4675              		.syntax unified
 4676 0076 3B61     		str	r3, [r7, #16]
 4677              		.loc 2 532 10
 4678 0078 3B69     		ldr	r3, [r7, #16]
 4679              	.LBE468:
 4680              	.LBE467:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 132


 4681              		.loc 1 2208 5 discriminator 1
 4682 007a 002B     		cmp	r3, #0
 4683 007c E5D1     		bne	.L242
 4684              	.LBE464:
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4685              		.loc 1 2211 14
 4686 007e 7B68     		ldr	r3, [r7, #4]
 4687 0080 9B6B     		ldr	r3, [r3, #56]
 4688              		.loc 1 2211 8
 4689 0082 002B     		cmp	r3, #0
 4690 0084 13D0     		beq	.L243
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 4691              		.loc 1 2215 12
 4692 0086 7B68     		ldr	r3, [r7, #4]
 4693 0088 9B6B     		ldr	r3, [r3, #56]
 4694              		.loc 1 2215 40
 4695 008a 164A     		ldr	r2, .L246
 4696 008c 1A65     		str	r2, [r3, #80]
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4697              		.loc 1 2218 11
 4698 008e 7B68     		ldr	r3, [r7, #4]
 4699 0090 9B6B     		ldr	r3, [r3, #56]
 4700 0092 1846     		mov	r0, r3
 4701 0094 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4702 0098 0346     		mov	r3, r0
 4703              		.loc 1 2218 10 discriminator 1
 4704 009a 002B     		cmp	r3, #0
 4705 009c 1CD0     		beq	.L244
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 4706              		.loc 1 2221 14
 4707 009e 7B68     		ldr	r3, [r7, #4]
 4708 00a0 9B6B     		ldr	r3, [r3, #56]
 4709              		.loc 1 2221 22
 4710 00a2 1B6D     		ldr	r3, [r3, #80]
 4711              		.loc 1 2221 47
 4712 00a4 7A68     		ldr	r2, [r7, #4]
 4713 00a6 926B     		ldr	r2, [r2, #56]
 4714              		.loc 1 2221 9
 4715 00a8 1046     		mov	r0, r2
 4716 00aa 9847     		blx	r3
 4717              	.LVL0:
 4718 00ac 14E0     		b	.L244
 4719              	.L243:
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Tx transfer counter */
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 133


2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
 4720              		.loc 1 2227 26
 4721 00ae 7B68     		ldr	r3, [r7, #4]
 4722 00b0 0022     		movs	r2, #0
 4723 00b2 DA84     		strh	r2, [r3, #38]	@ movhi
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 4724              		.loc 1 2230 21
 4725 00b4 7B68     		ldr	r3, [r7, #4]
 4726 00b6 2022     		movs	r2, #32
 4727 00b8 83F84120 		strb	r2, [r3, #65]
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 4728              		.loc 1 2238 7
 4729 00bc 7868     		ldr	r0, [r7, #4]
 4730 00be FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4731 00c2 09E0     		b	.L244
 4732              	.L239:
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4733              		.loc 1 2245 24
 4734 00c4 7B68     		ldr	r3, [r7, #4]
 4735 00c6 0022     		movs	r2, #0
 4736 00c8 DA84     		strh	r2, [r3, #38]	@ movhi
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 4737              		.loc 1 2248 19
 4738 00ca 7B68     		ldr	r3, [r7, #4]
 4739 00cc 2022     		movs	r2, #32
 4740 00ce 83F84120 		strb	r2, [r3, #65]
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 4741              		.loc 1 2256 5
 4742 00d2 7868     		ldr	r0, [r7, #4]
 4743 00d4 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4744              	.L244:
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 134


2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4745              		.loc 1 2260 10
 4746 00d8 0023     		movs	r3, #0
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4747              		.loc 1 2261 1
 4748 00da 1846     		mov	r0, r3
 4749 00dc 3837     		adds	r7, r7, #56
 4750              	.LCFI129:
 4751              		.cfi_def_cfa_offset 8
 4752 00de BD46     		mov	sp, r7
 4753              	.LCFI130:
 4754              		.cfi_def_cfa_register 13
 4755              		@ sp needed
 4756 00e0 80BD     		pop	{r7, pc}
 4757              	.L247:
 4758 00e2 00BF     		.align	2
 4759              	.L246:
 4760 00e4 00000000 		.word	UART_DMATxOnlyAbortCallback
 4761              		.cfi_endproc
 4762              	.LFE158:
 4764              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 4765              		.align	1
 4766              		.global	HAL_UART_AbortReceive_IT
 4767              		.syntax unified
 4768              		.thumb
 4769              		.thumb_func
 4771              	HAL_UART_AbortReceive_IT:
 4772              	.LFB159:
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4773              		.loc 1 2278 1
 4774              		.cfi_startproc
 4775              		@ args = 0, pretend = 0, frame = 104
 4776              		@ frame_needed = 1, uses_anonymous_args = 0
 4777 0000 80B5     		push	{r7, lr}
 4778              	.LCFI131:
 4779              		.cfi_def_cfa_offset 8
 4780              		.cfi_offset 7, -8
 4781              		.cfi_offset 14, -4
 4782 0002 9AB0     		sub	sp, sp, #104
 4783              	.LCFI132:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 135


 4784              		.cfi_def_cfa_offset 112
 4785 0004 00AF     		add	r7, sp, #0
 4786              	.LCFI133:
 4787              		.cfi_def_cfa_register 7
 4788 0006 7860     		str	r0, [r7, #4]
 4789              	.L251:
 4790              	.LBB469:
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4791              		.loc 1 2280 3 discriminator 1
 4792 0008 7B68     		ldr	r3, [r7, #4]
 4793 000a 1B68     		ldr	r3, [r3]
 4794 000c 0C33     		adds	r3, r3, #12
 4795 000e BB64     		str	r3, [r7, #72]
 4796              	.LBB470:
 4797              	.LBB471:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4798              		.loc 2 480 4
 4799 0010 BB6C     		ldr	r3, [r7, #72]
 4800              		.syntax unified
 4801              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4802 0012 53E8003F 		ldrex r3, [r3]
 4803              	@ 0 "" 2
 4804              		.thumb
 4805              		.syntax unified
 4806 0016 7B64     		str	r3, [r7, #68]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4807              		.loc 2 481 10
 4808 0018 7B6C     		ldr	r3, [r7, #68]
 4809              	.LBE471:
 4810              	.LBE470:
 4811              		.loc 1 2280 3 discriminator 1
 4812 001a 23F49073 		bic	r3, r3, #288
 4813 001e 7B66     		str	r3, [r7, #100]
 4814 0020 7B68     		ldr	r3, [r7, #4]
 4815 0022 1B68     		ldr	r3, [r3]
 4816 0024 0C33     		adds	r3, r3, #12
 4817 0026 7A6E     		ldr	r2, [r7, #100]
 4818 0028 7A65     		str	r2, [r7, #84]
 4819 002a 3B65     		str	r3, [r7, #80]
 4820              	.LBB472:
 4821              	.LBB473:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4822              		.loc 2 531 4
 4823 002c 396D     		ldr	r1, [r7, #80]
 4824 002e 7A6D     		ldr	r2, [r7, #84]
 4825              		.syntax unified
 4826              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4827 0030 41E80023 		strex r3, r2, [r1]
 4828              	@ 0 "" 2
 4829              		.thumb
 4830              		.syntax unified
 4831 0034 FB64     		str	r3, [r7, #76]
 4832              		.loc 2 532 10
 4833 0036 FB6C     		ldr	r3, [r7, #76]
 4834              	.LBE473:
 4835              	.LBE472:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 136


 4836              		.loc 1 2280 3 discriminator 1
 4837 0038 002B     		cmp	r3, #0
 4838 003a E5D1     		bne	.L251
 4839              	.L254:
 4840              	.LBE469:
 4841              	.LBB474:
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4842              		.loc 1 2281 3 discriminator 1
 4843 003c 7B68     		ldr	r3, [r7, #4]
 4844 003e 1B68     		ldr	r3, [r3]
 4845 0040 1433     		adds	r3, r3, #20
 4846 0042 7B63     		str	r3, [r7, #52]
 4847              	.LBB475:
 4848              	.LBB476:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4849              		.loc 2 480 4
 4850 0044 7B6B     		ldr	r3, [r7, #52]
 4851              		.syntax unified
 4852              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4853 0046 53E8003F 		ldrex r3, [r3]
 4854              	@ 0 "" 2
 4855              		.thumb
 4856              		.syntax unified
 4857 004a 3B63     		str	r3, [r7, #48]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4858              		.loc 2 481 10
 4859 004c 3B6B     		ldr	r3, [r7, #48]
 4860              	.LBE476:
 4861              	.LBE475:
 4862              		.loc 1 2281 3 discriminator 1
 4863 004e 23F00103 		bic	r3, r3, #1
 4864 0052 3B66     		str	r3, [r7, #96]
 4865 0054 7B68     		ldr	r3, [r7, #4]
 4866 0056 1B68     		ldr	r3, [r3]
 4867 0058 1433     		adds	r3, r3, #20
 4868 005a 3A6E     		ldr	r2, [r7, #96]
 4869 005c 3A64     		str	r2, [r7, #64]
 4870 005e FB63     		str	r3, [r7, #60]
 4871              	.LBB477:
 4872              	.LBB478:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4873              		.loc 2 531 4
 4874 0060 F96B     		ldr	r1, [r7, #60]
 4875 0062 3A6C     		ldr	r2, [r7, #64]
 4876              		.syntax unified
 4877              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4878 0064 41E80023 		strex r3, r2, [r1]
 4879              	@ 0 "" 2
 4880              		.thumb
 4881              		.syntax unified
 4882 0068 BB63     		str	r3, [r7, #56]
 4883              		.loc 2 532 10
 4884 006a BB6B     		ldr	r3, [r7, #56]
 4885              	.LBE478:
 4886              	.LBE477:
 4887              		.loc 1 2281 3 discriminator 1
 4888 006c 002B     		cmp	r3, #0
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 137


 4889 006e E5D1     		bne	.L254
 4890              	.LBE474:
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4891              		.loc 1 2284 12
 4892 0070 7B68     		ldr	r3, [r7, #4]
 4893 0072 1B6B     		ldr	r3, [r3, #48]
 4894              		.loc 1 2284 6
 4895 0074 012B     		cmp	r3, #1
 4896 0076 19D1     		bne	.L255
 4897              	.L258:
 4898              	.LBB479:
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 4899              		.loc 1 2286 5 discriminator 1
 4900 0078 7B68     		ldr	r3, [r7, #4]
 4901 007a 1B68     		ldr	r3, [r3]
 4902 007c 0C33     		adds	r3, r3, #12
 4903 007e 3B62     		str	r3, [r7, #32]
 4904              	.LBB480:
 4905              	.LBB481:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4906              		.loc 2 480 4
 4907 0080 3B6A     		ldr	r3, [r7, #32]
 4908              		.syntax unified
 4909              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4910 0082 53E8003F 		ldrex r3, [r3]
 4911              	@ 0 "" 2
 4912              		.thumb
 4913              		.syntax unified
 4914 0086 FB61     		str	r3, [r7, #28]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4915              		.loc 2 481 10
 4916 0088 FB69     		ldr	r3, [r7, #28]
 4917              	.LBE481:
 4918              	.LBE480:
 4919              		.loc 1 2286 5 discriminator 1
 4920 008a 23F01003 		bic	r3, r3, #16
 4921 008e FB65     		str	r3, [r7, #92]
 4922 0090 7B68     		ldr	r3, [r7, #4]
 4923 0092 1B68     		ldr	r3, [r3]
 4924 0094 0C33     		adds	r3, r3, #12
 4925 0096 FA6D     		ldr	r2, [r7, #92]
 4926 0098 FA62     		str	r2, [r7, #44]
 4927 009a BB62     		str	r3, [r7, #40]
 4928              	.LBB482:
 4929              	.LBB483:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4930              		.loc 2 531 4
 4931 009c B96A     		ldr	r1, [r7, #40]
 4932 009e FA6A     		ldr	r2, [r7, #44]
 4933              		.syntax unified
 4934              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4935 00a0 41E80023 		strex r3, r2, [r1]
 4936              	@ 0 "" 2
 4937              		.thumb
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 138


 4938              		.syntax unified
 4939 00a4 7B62     		str	r3, [r7, #36]
 4940              		.loc 2 532 10
 4941 00a6 7B6A     		ldr	r3, [r7, #36]
 4942              	.LBE483:
 4943              	.LBE482:
 4944              		.loc 1 2286 5 discriminator 1
 4945 00a8 002B     		cmp	r3, #0
 4946 00aa E5D1     		bne	.L258
 4947              	.L255:
 4948              	.LBE479:
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4949              		.loc 1 2290 7
 4950 00ac 7B68     		ldr	r3, [r7, #4]
 4951 00ae 1B68     		ldr	r3, [r3]
 4952 00b0 5B69     		ldr	r3, [r3, #20]
 4953 00b2 03F04003 		and	r3, r3, #64
 4954              		.loc 1 2290 6
 4955 00b6 402B     		cmp	r3, #64
 4956 00b8 3FD1     		bne	.L259
 4957              	.L262:
 4958              	.LBB484:
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4959              		.loc 1 2292 5 discriminator 1
 4960 00ba 7B68     		ldr	r3, [r7, #4]
 4961 00bc 1B68     		ldr	r3, [r3]
 4962 00be 1433     		adds	r3, r3, #20
 4963 00c0 FB60     		str	r3, [r7, #12]
 4964              	.LBB485:
 4965              	.LBB486:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4966              		.loc 2 480 4
 4967 00c2 FB68     		ldr	r3, [r7, #12]
 4968              		.syntax unified
 4969              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4970 00c4 53E8003F 		ldrex r3, [r3]
 4971              	@ 0 "" 2
 4972              		.thumb
 4973              		.syntax unified
 4974 00c8 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4975              		.loc 2 481 10
 4976 00ca BB68     		ldr	r3, [r7, #8]
 4977              	.LBE486:
 4978              	.LBE485:
 4979              		.loc 1 2292 5 discriminator 1
 4980 00cc 23F04003 		bic	r3, r3, #64
 4981 00d0 BB65     		str	r3, [r7, #88]
 4982 00d2 7B68     		ldr	r3, [r7, #4]
 4983 00d4 1B68     		ldr	r3, [r3]
 4984 00d6 1433     		adds	r3, r3, #20
 4985 00d8 BA6D     		ldr	r2, [r7, #88]
 4986 00da BA61     		str	r2, [r7, #24]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 139


 4987 00dc 7B61     		str	r3, [r7, #20]
 4988              	.LBB487:
 4989              	.LBB488:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4990              		.loc 2 531 4
 4991 00de 7969     		ldr	r1, [r7, #20]
 4992 00e0 BA69     		ldr	r2, [r7, #24]
 4993              		.syntax unified
 4994              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4995 00e2 41E80023 		strex r3, r2, [r1]
 4996              	@ 0 "" 2
 4997              		.thumb
 4998              		.syntax unified
 4999 00e6 3B61     		str	r3, [r7, #16]
 5000              		.loc 2 532 10
 5001 00e8 3B69     		ldr	r3, [r7, #16]
 5002              	.LBE488:
 5003              	.LBE487:
 5004              		.loc 1 2292 5 discriminator 1
 5005 00ea 002B     		cmp	r3, #0
 5006 00ec E5D1     		bne	.L262
 5007              	.LBE484:
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 5008              		.loc 1 2295 14
 5009 00ee 7B68     		ldr	r3, [r7, #4]
 5010 00f0 DB6B     		ldr	r3, [r3, #60]
 5011              		.loc 1 2295 8
 5012 00f2 002B     		cmp	r3, #0
 5013 00f4 13D0     		beq	.L263
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 5014              		.loc 1 2299 12
 5015 00f6 7B68     		ldr	r3, [r7, #4]
 5016 00f8 DB6B     		ldr	r3, [r3, #60]
 5017              		.loc 1 2299 40
 5018 00fa 194A     		ldr	r2, .L266
 5019 00fc 1A65     		str	r2, [r3, #80]
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 5020              		.loc 1 2302 11
 5021 00fe 7B68     		ldr	r3, [r7, #4]
 5022 0100 DB6B     		ldr	r3, [r3, #60]
 5023 0102 1846     		mov	r0, r3
 5024 0104 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5025 0108 0346     		mov	r3, r0
 5026              		.loc 1 2302 10 discriminator 1
 5027 010a 002B     		cmp	r3, #0
 5028 010c 22D0     		beq	.L264
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 5029              		.loc 1 2305 14
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 140


 5030 010e 7B68     		ldr	r3, [r7, #4]
 5031 0110 DB6B     		ldr	r3, [r3, #60]
 5032              		.loc 1 2305 22
 5033 0112 1B6D     		ldr	r3, [r3, #80]
 5034              		.loc 1 2305 47
 5035 0114 7A68     		ldr	r2, [r7, #4]
 5036 0116 D26B     		ldr	r2, [r2, #60]
 5037              		.loc 1 2305 9
 5038 0118 1046     		mov	r0, r2
 5039 011a 9847     		blx	r3
 5040              	.LVL1:
 5041 011c 1AE0     		b	.L264
 5042              	.L263:
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
 5043              		.loc 1 2311 26
 5044 011e 7B68     		ldr	r3, [r7, #4]
 5045 0120 0022     		movs	r2, #0
 5046 0122 DA85     		strh	r2, [r3, #46]	@ movhi
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 5047              		.loc 1 2314 22
 5048 0124 7B68     		ldr	r3, [r7, #4]
 5049 0126 2022     		movs	r2, #32
 5050 0128 83F84220 		strb	r2, [r3, #66]
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5051              		.loc 1 2315 28
 5052 012c 7B68     		ldr	r3, [r7, #4]
 5053 012e 0022     		movs	r2, #0
 5054 0130 1A63     		str	r2, [r3, #48]
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 5055              		.loc 1 2323 7
 5056 0132 7868     		ldr	r0, [r7, #4]
 5057 0134 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 5058 0138 0CE0     		b	.L264
 5059              	.L259:
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 5060              		.loc 1 2330 24
 5061 013a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 141


 5062 013c 0022     		movs	r2, #0
 5063 013e DA85     		strh	r2, [r3, #46]	@ movhi
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 5064              		.loc 1 2333 20
 5065 0140 7B68     		ldr	r3, [r7, #4]
 5066 0142 2022     		movs	r2, #32
 5067 0144 83F84220 		strb	r2, [r3, #66]
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5068              		.loc 1 2334 26
 5069 0148 7B68     		ldr	r3, [r7, #4]
 5070 014a 0022     		movs	r2, #0
 5071 014c 1A63     		str	r2, [r3, #48]
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 5072              		.loc 1 2342 5
 5073 014e 7868     		ldr	r0, [r7, #4]
 5074 0150 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 5075              	.L264:
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 5076              		.loc 1 2346 10
 5077 0154 0023     		movs	r3, #0
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5078              		.loc 1 2347 1
 5079 0156 1846     		mov	r0, r3
 5080 0158 6837     		adds	r7, r7, #104
 5081              	.LCFI134:
 5082              		.cfi_def_cfa_offset 8
 5083 015a BD46     		mov	sp, r7
 5084              	.LCFI135:
 5085              		.cfi_def_cfa_register 13
 5086              		@ sp needed
 5087 015c 80BD     		pop	{r7, pc}
 5088              	.L267:
 5089 015e 00BF     		.align	2
 5090              	.L266:
 5091 0160 00000000 		.word	UART_DMARxOnlyAbortCallback
 5092              		.cfi_endproc
 5093              	.LFE159:
 5095              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 5096              		.align	1
 5097              		.global	HAL_UART_IRQHandler
 5098              		.syntax unified
 5099              		.thumb
 5100              		.thumb_func
 5102              	HAL_UART_IRQHandler:
 5103              	.LFB160:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 142


2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5104              		.loc 1 2356 1
 5105              		.cfi_startproc
 5106              		@ args = 0, pretend = 0, frame = 232
 5107              		@ frame_needed = 1, uses_anonymous_args = 0
 5108 0000 80B5     		push	{r7, lr}
 5109              	.LCFI136:
 5110              		.cfi_def_cfa_offset 8
 5111              		.cfi_offset 7, -8
 5112              		.cfi_offset 14, -4
 5113 0002 BAB0     		sub	sp, sp, #232
 5114              	.LCFI137:
 5115              		.cfi_def_cfa_offset 240
 5116 0004 00AF     		add	r7, sp, #0
 5117              	.LCFI138:
 5118              		.cfi_def_cfa_register 7
 5119 0006 7860     		str	r0, [r7, #4]
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 5120              		.loc 1 2357 25
 5121 0008 7B68     		ldr	r3, [r7, #4]
 5122 000a 1B68     		ldr	r3, [r3]
 5123              		.loc 1 2357 12
 5124 000c 1B68     		ldr	r3, [r3]
 5125 000e C7F8E430 		str	r3, [r7, #228]
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 5126              		.loc 1 2358 25
 5127 0012 7B68     		ldr	r3, [r7, #4]
 5128 0014 1B68     		ldr	r3, [r3]
 5129              		.loc 1 2358 12
 5130 0016 DB68     		ldr	r3, [r3, #12]
 5131 0018 C7F8E030 		str	r3, [r7, #224]
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 5132              		.loc 1 2359 25
 5133 001c 7B68     		ldr	r3, [r7, #4]
 5134 001e 1B68     		ldr	r3, [r3]
 5135              		.loc 1 2359 12
 5136 0020 5B69     		ldr	r3, [r3, #20]
 5137 0022 C7F8DC30 		str	r3, [r7, #220]
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
 5138              		.loc 1 2360 12
 5139 0026 0023     		movs	r3, #0
 5140 0028 C7F8D830 		str	r3, [r7, #216]
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 5141              		.loc 1 2361 12
 5142 002c 0023     		movs	r3, #0
 5143 002e C7F8D430 		str	r3, [r7, #212]
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 143


 5144              		.loc 1 2364 14
 5145 0032 D7F8E430 		ldr	r3, [r7, #228]
 5146 0036 03F00F03 		and	r3, r3, #15
 5147 003a C7F8D830 		str	r3, [r7, #216]
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (errorflags == RESET)
 5148              		.loc 1 2365 6
 5149 003e D7F8D830 		ldr	r3, [r7, #216]
 5150 0042 002B     		cmp	r3, #0
 5151 0044 0FD1     		bne	.L269
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 5152              		.loc 1 2368 20
 5153 0046 D7F8E430 		ldr	r3, [r7, #228]
 5154 004a 03F02003 		and	r3, r3, #32
 5155              		.loc 1 2368 8
 5156 004e 002B     		cmp	r3, #0
 5157 0050 09D0     		beq	.L269
 5158              		.loc 1 2368 59 discriminator 1
 5159 0052 D7F8E030 		ldr	r3, [r7, #224]
 5160 0056 03F02003 		and	r3, r3, #32
 5161              		.loc 1 2368 47 discriminator 1
 5162 005a 002B     		cmp	r3, #0
 5163 005c 03D0     		beq	.L269
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
 5164              		.loc 1 2370 7
 5165 005e 7868     		ldr	r0, [r7, #4]
 5166 0060 FFF7FEFF 		bl	UART_Receive_IT
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 5167              		.loc 1 2371 7
 5168 0064 73E2     		b	.L268
 5169              	.L269:
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET)
 5170              		.loc 1 2376 6
 5171 0066 D7F8D830 		ldr	r3, [r7, #216]
 5172 006a 002B     		cmp	r3, #0
 5173 006c 00F0DE80 		beq	.L271
 5174              		.loc 1 2376 42 discriminator 1
 5175 0070 D7F8DC30 		ldr	r3, [r7, #220]
 5176 0074 03F00103 		and	r3, r3, #1
 5177              		.loc 1 2376 29 discriminator 1
 5178 0078 002B     		cmp	r3, #0
 5179 007a 06D1     		bne	.L272
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                 || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 5180              		.loc 1 2377 45
 5181 007c D7F8E030 		ldr	r3, [r7, #224]
 5182 0080 03F49073 		and	r3, r3, #288
 5183              		.loc 1 2377 33
 5184 0084 002B     		cmp	r3, #0
 5185 0086 00F0D180 		beq	.L271
 5186              	.L272:
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 144


2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 5187              		.loc 1 2380 20
 5188 008a D7F8E430 		ldr	r3, [r7, #228]
 5189 008e 03F00103 		and	r3, r3, #1
 5190              		.loc 1 2380 8
 5191 0092 002B     		cmp	r3, #0
 5192 0094 0BD0     		beq	.L273
 5193              		.loc 1 2380 57 discriminator 1
 5194 0096 D7F8E030 		ldr	r3, [r7, #224]
 5195 009a 03F48073 		and	r3, r3, #256
 5196              		.loc 1 2380 45 discriminator 1
 5197 009e 002B     		cmp	r3, #0
 5198 00a0 05D0     		beq	.L273
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 5199              		.loc 1 2382 12
 5200 00a2 7B68     		ldr	r3, [r7, #4]
 5201 00a4 5B6C     		ldr	r3, [r3, #68]
 5202              		.loc 1 2382 24
 5203 00a6 43F00102 		orr	r2, r3, #1
 5204 00aa 7B68     		ldr	r3, [r7, #4]
 5205 00ac 5A64     		str	r2, [r3, #68]
 5206              	.L273:
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 5207              		.loc 1 2386 20
 5208 00ae D7F8E430 		ldr	r3, [r7, #228]
 5209 00b2 03F00403 		and	r3, r3, #4
 5210              		.loc 1 2386 8
 5211 00b6 002B     		cmp	r3, #0
 5212 00b8 0BD0     		beq	.L274
 5213              		.loc 1 2386 57 discriminator 1
 5214 00ba D7F8DC30 		ldr	r3, [r7, #220]
 5215 00be 03F00103 		and	r3, r3, #1
 5216              		.loc 1 2386 45 discriminator 1
 5217 00c2 002B     		cmp	r3, #0
 5218 00c4 05D0     		beq	.L274
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 5219              		.loc 1 2388 12
 5220 00c6 7B68     		ldr	r3, [r7, #4]
 5221 00c8 5B6C     		ldr	r3, [r3, #68]
 5222              		.loc 1 2388 24
 5223 00ca 43F00202 		orr	r2, r3, #2
 5224 00ce 7B68     		ldr	r3, [r7, #4]
 5225 00d0 5A64     		str	r2, [r3, #68]
 5226              	.L274:
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 5227              		.loc 1 2392 20
 5228 00d2 D7F8E430 		ldr	r3, [r7, #228]
 5229 00d6 03F00203 		and	r3, r3, #2
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 145


 5230              		.loc 1 2392 8
 5231 00da 002B     		cmp	r3, #0
 5232 00dc 0BD0     		beq	.L275
 5233              		.loc 1 2392 57 discriminator 1
 5234 00de D7F8DC30 		ldr	r3, [r7, #220]
 5235 00e2 03F00103 		and	r3, r3, #1
 5236              		.loc 1 2392 45 discriminator 1
 5237 00e6 002B     		cmp	r3, #0
 5238 00e8 05D0     		beq	.L275
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 5239              		.loc 1 2394 12
 5240 00ea 7B68     		ldr	r3, [r7, #4]
 5241 00ec 5B6C     		ldr	r3, [r3, #68]
 5242              		.loc 1 2394 24
 5243 00ee 43F00402 		orr	r2, r3, #4
 5244 00f2 7B68     		ldr	r3, [r7, #4]
 5245 00f4 5A64     		str	r2, [r3, #68]
 5246              	.L275:
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET)
 5247              		.loc 1 2398 20
 5248 00f6 D7F8E430 		ldr	r3, [r7, #228]
 5249 00fa 03F00803 		and	r3, r3, #8
 5250              		.loc 1 2398 8
 5251 00fe 002B     		cmp	r3, #0
 5252 0100 11D0     		beq	.L276
 5253              		.loc 1 2398 59 discriminator 1
 5254 0102 D7F8E030 		ldr	r3, [r7, #224]
 5255 0106 03F02003 		and	r3, r3, #32
 5256              		.loc 1 2398 46 discriminator 1
 5257 010a 002B     		cmp	r3, #0
 5258 010c 05D1     		bne	.L277
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                  || ((cr3its & USART_CR3_EIE) != RESET)))
 5259              		.loc 1 2399 62
 5260 010e D7F8DC30 		ldr	r3, [r7, #220]
 5261 0112 03F00103 		and	r3, r3, #1
 5262              		.loc 1 2399 50
 5263 0116 002B     		cmp	r3, #0
 5264 0118 05D0     		beq	.L276
 5265              	.L277:
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 5266              		.loc 1 2401 12
 5267 011a 7B68     		ldr	r3, [r7, #4]
 5268 011c 5B6C     		ldr	r3, [r3, #68]
 5269              		.loc 1 2401 24
 5270 011e 43F00802 		orr	r2, r3, #8
 5271 0122 7B68     		ldr	r3, [r7, #4]
 5272 0124 5A64     		str	r2, [r3, #68]
 5273              	.L276:
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 146


 5274              		.loc 1 2405 14
 5275 0126 7B68     		ldr	r3, [r7, #4]
 5276 0128 5B6C     		ldr	r3, [r3, #68]
 5277              		.loc 1 2405 8
 5278 012a 002B     		cmp	r3, #0
 5279 012c 00F00A82 		beq	.L316
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 5280              		.loc 1 2408 22
 5281 0130 D7F8E430 		ldr	r3, [r7, #228]
 5282 0134 03F02003 		and	r3, r3, #32
 5283              		.loc 1 2408 10
 5284 0138 002B     		cmp	r3, #0
 5285 013a 08D0     		beq	.L279
 5286              		.loc 1 2408 61 discriminator 1
 5287 013c D7F8E030 		ldr	r3, [r7, #224]
 5288 0140 03F02003 		and	r3, r3, #32
 5289              		.loc 1 2408 49 discriminator 1
 5290 0144 002B     		cmp	r3, #0
 5291 0146 02D0     		beq	.L279
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
 5292              		.loc 1 2410 9
 5293 0148 7868     		ldr	r0, [r7, #4]
 5294 014a FFF7FEFF 		bl	UART_Receive_IT
 5295              	.L279:
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 5296              		.loc 1 2415 20
 5297 014e 7B68     		ldr	r3, [r7, #4]
 5298 0150 1B68     		ldr	r3, [r3]
 5299 0152 5B69     		ldr	r3, [r3, #20]
 5300 0154 03F04003 		and	r3, r3, #64
 5301 0158 402B     		cmp	r3, #64
 5302 015a 0CBF     		ite	eq
 5303 015c 0123     		moveq	r3, #1
 5304 015e 0023     		movne	r3, #0
 5305 0160 DBB2     		uxtb	r3, r3
 5306              		.loc 1 2415 18
 5307 0162 C7F8D430 		str	r3, [r7, #212]
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 5308              		.loc 1 2416 18
 5309 0166 7B68     		ldr	r3, [r7, #4]
 5310 0168 5B6C     		ldr	r3, [r3, #68]
 5311              		.loc 1 2416 30
 5312 016a 03F00803 		and	r3, r3, #8
 5313              		.loc 1 2416 10
 5314 016e 002B     		cmp	r3, #0
 5315 0170 03D1     		bne	.L280
 5316              		.loc 1 2416 62 discriminator 1
 5317 0172 D7F8D430 		ldr	r3, [r7, #212]
 5318 0176 002B     		cmp	r3, #0
 5319 0178 4FD0     		beq	.L281
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 147


 5320              	.L280:
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 5321              		.loc 1 2421 9
 5322 017a 7868     		ldr	r0, [r7, #4]
 5323 017c FFF7FEFF 		bl	UART_EndRxTransfer
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5324              		.loc 1 2424 13
 5325 0180 7B68     		ldr	r3, [r7, #4]
 5326 0182 1B68     		ldr	r3, [r3]
 5327 0184 5B69     		ldr	r3, [r3, #20]
 5328 0186 03F04003 		and	r3, r3, #64
 5329              		.loc 1 2424 12
 5330 018a 402B     		cmp	r3, #64
 5331 018c 41D1     		bne	.L282
 5332              	.L285:
 5333              	.LBB489:
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5334              		.loc 1 2426 11 discriminator 1
 5335 018e 7B68     		ldr	r3, [r7, #4]
 5336 0190 1B68     		ldr	r3, [r3]
 5337 0192 1433     		adds	r3, r3, #20
 5338 0194 C7F89C30 		str	r3, [r7, #156]
 5339              	.LBB490:
 5340              	.LBB491:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5341              		.loc 2 480 4
 5342 0198 D7F89C30 		ldr	r3, [r7, #156]
 5343              		.syntax unified
 5344              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5345 019c 53E8003F 		ldrex r3, [r3]
 5346              	@ 0 "" 2
 5347              		.thumb
 5348              		.syntax unified
 5349 01a0 C7F89830 		str	r3, [r7, #152]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5350              		.loc 2 481 10
 5351 01a4 D7F89830 		ldr	r3, [r7, #152]
 5352              	.LBE491:
 5353              	.LBE490:
 5354              		.loc 1 2426 11 discriminator 1
 5355 01a8 23F04003 		bic	r3, r3, #64
 5356 01ac C7F8D030 		str	r3, [r7, #208]
 5357 01b0 7B68     		ldr	r3, [r7, #4]
 5358 01b2 1B68     		ldr	r3, [r3]
 5359 01b4 1433     		adds	r3, r3, #20
 5360 01b6 D7F8D020 		ldr	r2, [r7, #208]
 5361 01ba C7F8A820 		str	r2, [r7, #168]
 5362 01be C7F8A430 		str	r3, [r7, #164]
 5363              	.LBB492:
 5364              	.LBB493:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 148


 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5365              		.loc 2 531 4
 5366 01c2 D7F8A410 		ldr	r1, [r7, #164]
 5367 01c6 D7F8A820 		ldr	r2, [r7, #168]
 5368              		.syntax unified
 5369              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5370 01ca 41E80023 		strex r3, r2, [r1]
 5371              	@ 0 "" 2
 5372              		.thumb
 5373              		.syntax unified
 5374 01ce C7F8A030 		str	r3, [r7, #160]
 5375              		.loc 2 532 10
 5376 01d2 D7F8A030 		ldr	r3, [r7, #160]
 5377              	.LBE493:
 5378              	.LBE492:
 5379              		.loc 1 2426 11 discriminator 1
 5380 01d6 002B     		cmp	r3, #0
 5381 01d8 D9D1     		bne	.L285
 5382              	.LBE489:
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx stream */
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 5383              		.loc 1 2429 20
 5384 01da 7B68     		ldr	r3, [r7, #4]
 5385 01dc DB6B     		ldr	r3, [r3, #60]
 5386              		.loc 1 2429 14
 5387 01de 002B     		cmp	r3, #0
 5388 01e0 13D0     		beq	.L286
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 5389              		.loc 1 2433 18
 5390 01e2 7B68     		ldr	r3, [r7, #4]
 5391 01e4 DB6B     		ldr	r3, [r3, #60]
 5392              		.loc 1 2433 46
 5393 01e6 8A4A     		ldr	r2, .L320
 5394 01e8 1A65     		str	r2, [r3, #80]
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 5395              		.loc 1 2434 17
 5396 01ea 7B68     		ldr	r3, [r7, #4]
 5397 01ec DB6B     		ldr	r3, [r3, #60]
 5398 01ee 1846     		mov	r0, r3
 5399 01f0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5400 01f4 0346     		mov	r3, r0
 5401              		.loc 1 2434 16 discriminator 1
 5402 01f6 002B     		cmp	r3, #0
 5403 01f8 16D0     		beq	.L317
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 5404              		.loc 1 2437 20
 5405 01fa 7B68     		ldr	r3, [r7, #4]
 5406 01fc DB6B     		ldr	r3, [r3, #60]
 5407              		.loc 1 2437 28
 5408 01fe 1B6D     		ldr	r3, [r3, #80]
 5409              		.loc 1 2437 53
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 149


 5410 0200 7A68     		ldr	r2, [r7, #4]
 5411 0202 D26B     		ldr	r2, [r2, #60]
 5412              		.loc 1 2437 15
 5413 0204 1046     		mov	r0, r2
 5414 0206 9847     		blx	r3
 5415              	.LVL2:
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5416              		.loc 1 2424 12
 5417 0208 0EE0     		b	.L317
 5418              	.L286:
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call registered error callback*/
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 5419              		.loc 1 2448 13
 5420 020a 7868     		ldr	r0, [r7, #4]
 5421 020c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5422              		.loc 1 2424 12
 5423 0210 0AE0     		b	.L317
 5424              	.L282:
2449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
2455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call registered error callback*/
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 5425              		.loc 1 2460 11
 5426 0212 7868     		ldr	r0, [r7, #4]
 5427 0214 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5428              		.loc 1 2424 12
 5429 0218 06E0     		b	.L317
 5430              	.L281:
2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered error callback*/
2470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback(huart);
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 150


2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 5431              		.loc 1 2473 9
 5432 021a 7868     		ldr	r0, [r7, #4]
 5433 021c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 5434              		.loc 1 2476 26
 5435 0220 7B68     		ldr	r3, [r7, #4]
 5436 0222 0022     		movs	r2, #0
 5437 0224 5A64     		str	r2, [r3, #68]
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 5438              		.loc 1 2479 5
 5439 0226 8DE1     		b	.L316
 5440              	.L317:
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5441              		.loc 1 2424 12
 5442 0228 00BF     		nop
 5443              		.loc 1 2479 5
 5444 022a 8BE1     		b	.L316
 5445              	.L271:
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check current reception Mode :
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5446              		.loc 1 2484 13
 5447 022c 7B68     		ldr	r3, [r7, #4]
 5448 022e 1B6B     		ldr	r3, [r3, #48]
 5449              		.loc 1 2484 6
 5450 0230 012B     		cmp	r3, #1
 5451 0232 40F06781 		bne	.L288
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       && ((isrflags & USART_SR_IDLE) != 0U)
 5452              		.loc 1 2485 21
 5453 0236 D7F8E430 		ldr	r3, [r7, #228]
 5454 023a 03F01003 		and	r3, r3, #16
 5455              		.loc 1 2485 7
 5456 023e 002B     		cmp	r3, #0
 5457 0240 00F06081 		beq	.L288
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       && ((cr1its & USART_CR1_IDLEIE) != 0U))
 5458              		.loc 1 2486 19
 5459 0244 D7F8E030 		ldr	r3, [r7, #224]
 5460 0248 03F01003 		and	r3, r3, #16
 5461              		.loc 1 2486 7
 5462 024c 002B     		cmp	r3, #0
 5463 024e 00F05981 		beq	.L288
 5464              	.LBB494:
2487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_IDLEFLAG(huart);
 5465              		.loc 1 2488 5
 5466 0252 0023     		movs	r3, #0
 5467 0254 BB60     		str	r3, [r7, #8]
 5468 0256 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 151


 5469 0258 1B68     		ldr	r3, [r3]
 5470 025a 1B68     		ldr	r3, [r3]
 5471 025c BB60     		str	r3, [r7, #8]
 5472 025e 7B68     		ldr	r3, [r7, #4]
 5473 0260 1B68     		ldr	r3, [r3]
 5474 0262 5B68     		ldr	r3, [r3, #4]
 5475 0264 BB60     		str	r3, [r7, #8]
 5476 0266 BB68     		ldr	r3, [r7, #8]
 5477              	.LBE494:
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5478              		.loc 1 2491 9
 5479 0268 7B68     		ldr	r3, [r7, #4]
 5480 026a 1B68     		ldr	r3, [r3]
 5481 026c 5B69     		ldr	r3, [r3, #20]
 5482 026e 03F04003 		and	r3, r3, #64
 5483              		.loc 1 2491 8
 5484 0272 402B     		cmp	r3, #64
 5485 0274 40F0CE80 		bne	.L289
 5486              	.LBB495:
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* DMA mode enabled */
2494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          (DMA cplt callback will be called).
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 5487              		.loc 1 2497 50
 5488 0278 7B68     		ldr	r3, [r7, #4]
 5489 027a DB6B     		ldr	r3, [r3, #60]
 5490 027c 1B68     		ldr	r3, [r3]
 5491 027e 5B68     		ldr	r3, [r3, #4]
 5492              		.loc 1 2497 16
 5493 0280 A7F8BE30 		strh	r3, [r7, #190]	@ movhi
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
 5494              		.loc 1 2498 10
 5495 0284 B7F8BE30 		ldrh	r3, [r7, #190]
 5496 0288 002B     		cmp	r3, #0
 5497 028a 00F0A980 		beq	.L290
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
 5498              		.loc 1 2499 43
 5499 028e 7B68     		ldr	r3, [r7, #4]
 5500 0290 9B8D     		ldrh	r3, [r3, #44]
 5501              		.loc 1 2499 11
 5502 0292 B7F8BE20 		ldrh	r2, [r7, #190]
 5503 0296 9A42     		cmp	r2, r3
 5504 0298 80F0A280 		bcs	.L290
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Reception is not complete */
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
 5505              		.loc 1 2502 28
 5506 029c 7B68     		ldr	r3, [r7, #4]
 5507 029e B7F8BE20 		ldrh	r2, [r7, #190]	@ movhi
 5508 02a2 DA85     		strh	r2, [r3, #46]	@ movhi
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 152


 5509              		.loc 1 2505 18
 5510 02a4 7B68     		ldr	r3, [r7, #4]
 5511 02a6 DB6B     		ldr	r3, [r3, #60]
 5512              		.loc 1 2505 32
 5513 02a8 DB69     		ldr	r3, [r3, #28]
 5514              		.loc 1 2505 12
 5515 02aa B3F5807F 		cmp	r3, #256
 5516 02ae 00F08880 		beq	.L291
 5517              	.L294:
 5518              	.LBB496:
2506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 5519              		.loc 1 2508 11 discriminator 1
 5520 02b2 7B68     		ldr	r3, [r7, #4]
 5521 02b4 1B68     		ldr	r3, [r3]
 5522 02b6 0C33     		adds	r3, r3, #12
 5523 02b8 C7F88830 		str	r3, [r7, #136]
 5524              	.LBB497:
 5525              	.LBB498:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5526              		.loc 2 480 4
 5527 02bc D7F88830 		ldr	r3, [r7, #136]
 5528              		.syntax unified
 5529              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5530 02c0 53E8003F 		ldrex r3, [r3]
 5531              	@ 0 "" 2
 5532              		.thumb
 5533              		.syntax unified
 5534 02c4 C7F88430 		str	r3, [r7, #132]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5535              		.loc 2 481 10
 5536 02c8 D7F88430 		ldr	r3, [r7, #132]
 5537              	.LBE498:
 5538              	.LBE497:
 5539              		.loc 1 2508 11 discriminator 1
 5540 02cc 23F48073 		bic	r3, r3, #256
 5541 02d0 C7F8B830 		str	r3, [r7, #184]
 5542 02d4 7B68     		ldr	r3, [r7, #4]
 5543 02d6 1B68     		ldr	r3, [r3]
 5544 02d8 0C33     		adds	r3, r3, #12
 5545 02da D7F8B820 		ldr	r2, [r7, #184]
 5546 02de C7F89420 		str	r2, [r7, #148]
 5547 02e2 C7F89030 		str	r3, [r7, #144]
 5548              	.LBB499:
 5549              	.LBB500:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5550              		.loc 2 531 4
 5551 02e6 D7F89010 		ldr	r1, [r7, #144]
 5552 02ea D7F89420 		ldr	r2, [r7, #148]
 5553              		.syntax unified
 5554              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5555 02ee 41E80023 		strex r3, r2, [r1]
 5556              	@ 0 "" 2
 5557              		.thumb
 5558              		.syntax unified
 5559 02f2 C7F88C30 		str	r3, [r7, #140]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 153


 5560              		.loc 2 532 10
 5561 02f6 D7F88C30 		ldr	r3, [r7, #140]
 5562              	.LBE500:
 5563              	.LBE499:
 5564              		.loc 1 2508 11 discriminator 1
 5565 02fa 002B     		cmp	r3, #0
 5566 02fc D9D1     		bne	.L294
 5567              	.L297:
 5568              	.LBE496:
 5569              	.LBB501:
2509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5570              		.loc 1 2509 11 discriminator 1
 5571 02fe 7B68     		ldr	r3, [r7, #4]
 5572 0300 1B68     		ldr	r3, [r3]
 5573 0302 1433     		adds	r3, r3, #20
 5574 0304 7B67     		str	r3, [r7, #116]
 5575              	.LBB502:
 5576              	.LBB503:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5577              		.loc 2 480 4
 5578 0306 7B6F     		ldr	r3, [r7, #116]
 5579              		.syntax unified
 5580              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5581 0308 53E8003F 		ldrex r3, [r3]
 5582              	@ 0 "" 2
 5583              		.thumb
 5584              		.syntax unified
 5585 030c 3B67     		str	r3, [r7, #112]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5586              		.loc 2 481 10
 5587 030e 3B6F     		ldr	r3, [r7, #112]
 5588              	.LBE503:
 5589              	.LBE502:
 5590              		.loc 1 2509 11 discriminator 1
 5591 0310 23F00103 		bic	r3, r3, #1
 5592 0314 C7F8B430 		str	r3, [r7, #180]
 5593 0318 7B68     		ldr	r3, [r7, #4]
 5594 031a 1B68     		ldr	r3, [r3]
 5595 031c 1433     		adds	r3, r3, #20
 5596 031e D7F8B420 		ldr	r2, [r7, #180]
 5597 0322 C7F88020 		str	r2, [r7, #128]
 5598 0326 FB67     		str	r3, [r7, #124]
 5599              	.LBB504:
 5600              	.LBB505:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5601              		.loc 2 531 4
 5602 0328 F96F     		ldr	r1, [r7, #124]
 5603 032a D7F88020 		ldr	r2, [r7, #128]
 5604              		.syntax unified
 5605              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5606 032e 41E80023 		strex r3, r2, [r1]
 5607              	@ 0 "" 2
 5608              		.thumb
 5609              		.syntax unified
 5610 0332 BB67     		str	r3, [r7, #120]
 5611              		.loc 2 532 10
 5612 0334 BB6F     		ldr	r3, [r7, #120]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 154


 5613              	.LBE505:
 5614              	.LBE504:
 5615              		.loc 1 2509 11 discriminator 1
 5616 0336 002B     		cmp	r3, #0
 5617 0338 E1D1     		bne	.L297
 5618              	.L300:
 5619              	.LBE501:
 5620              	.LBB506:
2510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the UART CR3 register */
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5621              		.loc 1 2513 11 discriminator 1
 5622 033a 7B68     		ldr	r3, [r7, #4]
 5623 033c 1B68     		ldr	r3, [r3]
 5624 033e 1433     		adds	r3, r3, #20
 5625 0340 3B66     		str	r3, [r7, #96]
 5626              	.LBB507:
 5627              	.LBB508:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5628              		.loc 2 480 4
 5629 0342 3B6E     		ldr	r3, [r7, #96]
 5630              		.syntax unified
 5631              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5632 0344 53E8003F 		ldrex r3, [r3]
 5633              	@ 0 "" 2
 5634              		.thumb
 5635              		.syntax unified
 5636 0348 FB65     		str	r3, [r7, #92]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5637              		.loc 2 481 10
 5638 034a FB6D     		ldr	r3, [r7, #92]
 5639              	.LBE508:
 5640              	.LBE507:
 5641              		.loc 1 2513 11 discriminator 1
 5642 034c 23F04003 		bic	r3, r3, #64
 5643 0350 C7F8B030 		str	r3, [r7, #176]
 5644 0354 7B68     		ldr	r3, [r7, #4]
 5645 0356 1B68     		ldr	r3, [r3]
 5646 0358 1433     		adds	r3, r3, #20
 5647 035a D7F8B020 		ldr	r2, [r7, #176]
 5648 035e FA66     		str	r2, [r7, #108]
 5649 0360 BB66     		str	r3, [r7, #104]
 5650              	.LBB509:
 5651              	.LBB510:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5652              		.loc 2 531 4
 5653 0362 B96E     		ldr	r1, [r7, #104]
 5654 0364 FA6E     		ldr	r2, [r7, #108]
 5655              		.syntax unified
 5656              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5657 0366 41E80023 		strex r3, r2, [r1]
 5658              	@ 0 "" 2
 5659              		.thumb
 5660              		.syntax unified
 5661 036a 7B66     		str	r3, [r7, #100]
 5662              		.loc 2 532 10
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 155


 5663 036c 7B6E     		ldr	r3, [r7, #100]
 5664              	.LBE510:
 5665              	.LBE509:
 5666              		.loc 1 2513 11 discriminator 1
 5667 036e 002B     		cmp	r3, #0
 5668 0370 E3D1     		bne	.L300
 5669              	.LBE506:
2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 5670              		.loc 1 2516 26
 5671 0372 7B68     		ldr	r3, [r7, #4]
 5672 0374 2022     		movs	r2, #32
 5673 0376 83F84220 		strb	r2, [r3, #66]
2517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5674              		.loc 1 2517 32
 5675 037a 7B68     		ldr	r3, [r7, #4]
 5676 037c 0022     		movs	r2, #0
 5677 037e 1A63     		str	r2, [r3, #48]
 5678              	.L303:
 5679              	.LBB511:
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5680              		.loc 1 2519 11 discriminator 1
 5681 0380 7B68     		ldr	r3, [r7, #4]
 5682 0382 1B68     		ldr	r3, [r3]
 5683 0384 0C33     		adds	r3, r3, #12
 5684 0386 FB64     		str	r3, [r7, #76]
 5685              	.LBB512:
 5686              	.LBB513:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5687              		.loc 2 480 4
 5688 0388 FB6C     		ldr	r3, [r7, #76]
 5689              		.syntax unified
 5690              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5691 038a 53E8003F 		ldrex r3, [r3]
 5692              	@ 0 "" 2
 5693              		.thumb
 5694              		.syntax unified
 5695 038e BB64     		str	r3, [r7, #72]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5696              		.loc 2 481 10
 5697 0390 BB6C     		ldr	r3, [r7, #72]
 5698              	.LBE513:
 5699              	.LBE512:
 5700              		.loc 1 2519 11 discriminator 1
 5701 0392 23F01003 		bic	r3, r3, #16
 5702 0396 C7F8AC30 		str	r3, [r7, #172]
 5703 039a 7B68     		ldr	r3, [r7, #4]
 5704 039c 1B68     		ldr	r3, [r3]
 5705 039e 0C33     		adds	r3, r3, #12
 5706 03a0 D7F8AC20 		ldr	r2, [r7, #172]
 5707 03a4 BA65     		str	r2, [r7, #88]
 5708 03a6 7B65     		str	r3, [r7, #84]
 5709              	.LBB514:
 5710              	.LBB515:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 156


 5711              		.loc 2 531 4
 5712 03a8 796D     		ldr	r1, [r7, #84]
 5713 03aa BA6D     		ldr	r2, [r7, #88]
 5714              		.syntax unified
 5715              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5716 03ac 41E80023 		strex r3, r2, [r1]
 5717              	@ 0 "" 2
 5718              		.thumb
 5719              		.syntax unified
 5720 03b0 3B65     		str	r3, [r7, #80]
 5721              		.loc 2 532 10
 5722 03b2 3B6D     		ldr	r3, [r7, #80]
 5723              	.LBE515:
 5724              	.LBE514:
 5725              		.loc 1 2519 11 discriminator 1
 5726 03b4 002B     		cmp	r3, #0
 5727 03b6 E3D1     		bne	.L303
 5728              	.LBE511:
2520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
 5729              		.loc 1 2522 17
 5730 03b8 7B68     		ldr	r3, [r7, #4]
 5731 03ba DB6B     		ldr	r3, [r3, #60]
 5732 03bc 1846     		mov	r0, r3
 5733 03be FFF7FEFF 		bl	HAL_DMA_Abort
 5734              	.L291:
2523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         In this case, Rx Event type is Idle Event */
2527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 5735              		.loc 1 2527 28
 5736 03c2 7B68     		ldr	r3, [r7, #4]
 5737 03c4 0222     		movs	r2, #2
 5738 03c6 5A63     		str	r2, [r3, #52]
2528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 5739              		.loc 1 2534 49
 5740 03c8 7B68     		ldr	r3, [r7, #4]
 5741 03ca 9A8D     		ldrh	r2, [r3, #44]
 5742              		.loc 1 2534 69
 5743 03cc 7B68     		ldr	r3, [r7, #4]
 5744 03ce DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5745 03d0 9BB2     		uxth	r3, r3
 5746              		.loc 1 2534 9
 5747 03d2 D31A     		subs	r3, r2, r3
 5748 03d4 9BB2     		uxth	r3, r3
 5749 03d6 1946     		mov	r1, r3
 5750 03d8 7868     		ldr	r0, [r7, #4]
 5751 03da FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 157


2536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* If DMA is in Circular mode, Idle event is to be reported to user
2540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            even if occurring after a Transfer Complete event from DMA */
2541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (nb_remaining_rx_data == huart->RxXferSize)
2542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if (huart->hdmarx->Init.Mode == DMA_CIRCULAR)
2544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                In this case, Rx Event type is Idle Event */
2547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->RxEventType = HAL_UART_RXEVENT_IDLE;
2548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call registered Rx Event callback*/
2551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->RxEventCallback(huart, huart->RxXferSize);
2552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call legacy weak Rx Event callback*/
2554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
2555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
2556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 5752              		.loc 1 2559 7
 5753 03de B3E0     		b	.L318
 5754              	.L290:
2541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5755              		.loc 1 2541 42
 5756 03e0 7B68     		ldr	r3, [r7, #4]
 5757 03e2 9B8D     		ldrh	r3, [r3, #44]
2541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5758              		.loc 1 2541 12
 5759 03e4 B7F8BE20 		ldrh	r2, [r7, #190]
 5760 03e8 9A42     		cmp	r2, r3
 5761 03ea 40F0AD80 		bne	.L318
2543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
 5762              		.loc 1 2543 20
 5763 03ee 7B68     		ldr	r3, [r7, #4]
 5764 03f0 DB6B     		ldr	r3, [r3, #60]
2543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
 5765              		.loc 1 2543 34
 5766 03f2 DB69     		ldr	r3, [r3, #28]
2543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
 5767              		.loc 1 2543 14
 5768 03f4 B3F5807F 		cmp	r3, #256
 5769 03f8 40F0A680 		bne	.L318
2547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 5770              		.loc 1 2547 32
 5771 03fc 7B68     		ldr	r3, [r7, #4]
 5772 03fe 0222     		movs	r2, #2
 5773 0400 5A63     		str	r2, [r3, #52]
2554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5774              		.loc 1 2554 13
 5775 0402 7B68     		ldr	r3, [r7, #4]
 5776 0404 9B8D     		ldrh	r3, [r3, #44]
 5777 0406 1946     		mov	r1, r3
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 158


 5778 0408 7868     		ldr	r0, [r7, #4]
 5779 040a FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 5780              		.loc 1 2559 7
 5781 040e 9BE0     		b	.L318
 5782              	.L321:
 5783              		.align	2
 5784              	.L320:
 5785 0410 00000000 		.word	UART_DMAAbortOnError
 5786              	.L289:
 5787              	.LBE495:
 5788              	.LBB516:
2560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* DMA mode not enabled */
2564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 5789              		.loc 1 2566 34
 5790 0414 7B68     		ldr	r3, [r7, #4]
 5791 0416 9A8D     		ldrh	r2, [r3, #44]
 5792              		.loc 1 2566 54
 5793 0418 7B68     		ldr	r3, [r7, #4]
 5794 041a DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5795 041c 9BB2     		uxth	r3, r3
 5796              		.loc 1 2566 16
 5797 041e D31A     		subs	r3, r2, r3
 5798 0420 A7F8CE30 		strh	r3, [r7, #206]	@ movhi
2567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
 5799              		.loc 1 2567 17
 5800 0424 7B68     		ldr	r3, [r7, #4]
 5801 0426 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5802 0428 9BB2     		uxth	r3, r3
 5803              		.loc 1 2567 10
 5804 042a 002B     		cmp	r3, #0
 5805 042c 00F08E80 		beq	.L319
2568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           && (nb_rx_data > 0U))
 5806              		.loc 1 2568 11
 5807 0430 B7F8CE30 		ldrh	r3, [r7, #206]
 5808 0434 002B     		cmp	r3, #0
 5809 0436 00F08980 		beq	.L319
 5810              	.L308:
 5811              	.LBB517:
2569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 5812              		.loc 1 2571 9 discriminator 1
 5813 043a 7B68     		ldr	r3, [r7, #4]
 5814 043c 1B68     		ldr	r3, [r3]
 5815 043e 0C33     		adds	r3, r3, #12
 5816 0440 BB63     		str	r3, [r7, #56]
 5817              	.LBB518:
 5818              	.LBB519:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5819              		.loc 2 480 4
 5820 0442 BB6B     		ldr	r3, [r7, #56]
 5821              		.syntax unified
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 159


 5822              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5823 0444 53E8003F 		ldrex r3, [r3]
 5824              	@ 0 "" 2
 5825              		.thumb
 5826              		.syntax unified
 5827 0448 7B63     		str	r3, [r7, #52]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5828              		.loc 2 481 10
 5829 044a 7B6B     		ldr	r3, [r7, #52]
 5830              	.LBE519:
 5831              	.LBE518:
 5832              		.loc 1 2571 9 discriminator 1
 5833 044c 23F49073 		bic	r3, r3, #288
 5834 0450 C7F8C830 		str	r3, [r7, #200]
 5835 0454 7B68     		ldr	r3, [r7, #4]
 5836 0456 1B68     		ldr	r3, [r3]
 5837 0458 0C33     		adds	r3, r3, #12
 5838 045a D7F8C820 		ldr	r2, [r7, #200]
 5839 045e 7A64     		str	r2, [r7, #68]
 5840 0460 3B64     		str	r3, [r7, #64]
 5841              	.LBB520:
 5842              	.LBB521:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5843              		.loc 2 531 4
 5844 0462 396C     		ldr	r1, [r7, #64]
 5845 0464 7A6C     		ldr	r2, [r7, #68]
 5846              		.syntax unified
 5847              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5848 0466 41E80023 		strex r3, r2, [r1]
 5849              	@ 0 "" 2
 5850              		.thumb
 5851              		.syntax unified
 5852 046a FB63     		str	r3, [r7, #60]
 5853              		.loc 2 532 10
 5854 046c FB6B     		ldr	r3, [r7, #60]
 5855              	.LBE521:
 5856              	.LBE520:
 5857              		.loc 1 2571 9 discriminator 1
 5858 046e 002B     		cmp	r3, #0
 5859 0470 E3D1     		bne	.L308
 5860              	.L311:
 5861              	.LBE517:
 5862              	.LBB522:
2572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5863              		.loc 1 2574 9 discriminator 1
 5864 0472 7B68     		ldr	r3, [r7, #4]
 5865 0474 1B68     		ldr	r3, [r3]
 5866 0476 1433     		adds	r3, r3, #20
 5867 0478 7B62     		str	r3, [r7, #36]
 5868              	.LBB523:
 5869              	.LBB524:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5870              		.loc 2 480 4
 5871 047a 7B6A     		ldr	r3, [r7, #36]
 5872              		.syntax unified
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 160


 5873              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5874 047c 53E8003F 		ldrex r3, [r3]
 5875              	@ 0 "" 2
 5876              		.thumb
 5877              		.syntax unified
 5878 0480 3B62     		str	r3, [r7, #32]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5879              		.loc 2 481 10
 5880 0482 3B6A     		ldr	r3, [r7, #32]
 5881              	.LBE524:
 5882              	.LBE523:
 5883              		.loc 1 2574 9 discriminator 1
 5884 0484 23F00103 		bic	r3, r3, #1
 5885 0488 C7F8C430 		str	r3, [r7, #196]
 5886 048c 7B68     		ldr	r3, [r7, #4]
 5887 048e 1B68     		ldr	r3, [r3]
 5888 0490 1433     		adds	r3, r3, #20
 5889 0492 D7F8C420 		ldr	r2, [r7, #196]
 5890 0496 3A63     		str	r2, [r7, #48]
 5891 0498 FB62     		str	r3, [r7, #44]
 5892              	.LBB525:
 5893              	.LBB526:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5894              		.loc 2 531 4
 5895 049a F96A     		ldr	r1, [r7, #44]
 5896 049c 3A6B     		ldr	r2, [r7, #48]
 5897              		.syntax unified
 5898              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5899 049e 41E80023 		strex r3, r2, [r1]
 5900              	@ 0 "" 2
 5901              		.thumb
 5902              		.syntax unified
 5903 04a2 BB62     		str	r3, [r7, #40]
 5904              		.loc 2 532 10
 5905 04a4 BB6A     		ldr	r3, [r7, #40]
 5906              	.LBE526:
 5907              	.LBE525:
 5908              		.loc 1 2574 9 discriminator 1
 5909 04a6 002B     		cmp	r3, #0
 5910 04a8 E3D1     		bne	.L311
 5911              	.LBE522:
2575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 5912              		.loc 1 2577 24
 5913 04aa 7B68     		ldr	r3, [r7, #4]
 5914 04ac 2022     		movs	r2, #32
 5915 04ae 83F84220 		strb	r2, [r3, #66]
2578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5916              		.loc 1 2578 30
 5917 04b2 7B68     		ldr	r3, [r7, #4]
 5918 04b4 0022     		movs	r2, #0
 5919 04b6 1A63     		str	r2, [r3, #48]
 5920              	.L314:
 5921              	.LBB527:
2579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 161


 5922              		.loc 1 2580 9 discriminator 1
 5923 04b8 7B68     		ldr	r3, [r7, #4]
 5924 04ba 1B68     		ldr	r3, [r3]
 5925 04bc 0C33     		adds	r3, r3, #12
 5926 04be 3B61     		str	r3, [r7, #16]
 5927              	.LBB528:
 5928              	.LBB529:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5929              		.loc 2 480 4
 5930 04c0 3B69     		ldr	r3, [r7, #16]
 5931              		.syntax unified
 5932              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5933 04c2 53E8003F 		ldrex r3, [r3]
 5934              	@ 0 "" 2
 5935              		.thumb
 5936              		.syntax unified
 5937 04c6 FB60     		str	r3, [r7, #12]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5938              		.loc 2 481 10
 5939 04c8 FB68     		ldr	r3, [r7, #12]
 5940              	.LBE529:
 5941              	.LBE528:
 5942              		.loc 1 2580 9 discriminator 1
 5943 04ca 23F01003 		bic	r3, r3, #16
 5944 04ce C7F8C030 		str	r3, [r7, #192]
 5945 04d2 7B68     		ldr	r3, [r7, #4]
 5946 04d4 1B68     		ldr	r3, [r3]
 5947 04d6 0C33     		adds	r3, r3, #12
 5948 04d8 D7F8C020 		ldr	r2, [r7, #192]
 5949 04dc FA61     		str	r2, [r7, #28]
 5950 04de BB61     		str	r3, [r7, #24]
 5951              	.LBB530:
 5952              	.LBB531:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5953              		.loc 2 531 4
 5954 04e0 B969     		ldr	r1, [r7, #24]
 5955 04e2 FA69     		ldr	r2, [r7, #28]
 5956              		.syntax unified
 5957              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5958 04e4 41E80023 		strex r3, r2, [r1]
 5959              	@ 0 "" 2
 5960              		.thumb
 5961              		.syntax unified
 5962 04e8 7B61     		str	r3, [r7, #20]
 5963              		.loc 2 532 10
 5964 04ea 7B69     		ldr	r3, [r7, #20]
 5965              	.LBE531:
 5966              	.LBE530:
 5967              		.loc 1 2580 9 discriminator 1
 5968 04ec 002B     		cmp	r3, #0
 5969 04ee E3D1     		bne	.L314
 5970              	.LBE527:
2581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Initialize type of RxEvent that correspond to RxEvent callback execution;
2583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            In this case, Rx Event type is Idle Event */
2584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 5971              		.loc 1 2584 28
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 162


 5972 04f0 7B68     		ldr	r3, [r7, #4]
 5973 04f2 0222     		movs	r2, #2
 5974 04f4 5A63     		str	r2, [r3, #52]
2585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 5975              		.loc 1 2591 9
 5976 04f6 B7F8CE30 		ldrh	r3, [r7, #206]
 5977 04fa 1946     		mov	r1, r3
 5978 04fc 7868     		ldr	r0, [r7, #4]
 5979 04fe FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 5980              		.loc 1 2594 7
 5981 0502 23E0     		b	.L319
 5982              	.L288:
 5983              	.LBE516:
2595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 5984              		.loc 1 2599 18
 5985 0504 D7F8E430 		ldr	r3, [r7, #228]
 5986 0508 03F08003 		and	r3, r3, #128
 5987              		.loc 1 2599 6
 5988 050c 002B     		cmp	r3, #0
 5989 050e 09D0     		beq	.L315
 5990              		.loc 1 2599 56 discriminator 1
 5991 0510 D7F8E030 		ldr	r3, [r7, #224]
 5992 0514 03F08003 		and	r3, r3, #128
 5993              		.loc 1 2599 44 discriminator 1
 5994 0518 002B     		cmp	r3, #0
 5995 051a 03D0     		beq	.L315
2600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
 5996              		.loc 1 2601 5
 5997 051c 7868     		ldr	r0, [r7, #4]
 5998 051e FFF7FEFF 		bl	UART_Transmit_IT
2602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 5999              		.loc 1 2602 5
 6000 0522 14E0     		b	.L268
 6001              	.L315:
2603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
2606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 6002              		.loc 1 2606 18
 6003 0524 D7F8E430 		ldr	r3, [r7, #228]
 6004 0528 03F04003 		and	r3, r3, #64
 6005              		.loc 1 2606 6
 6006 052c 002B     		cmp	r3, #0
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 163


 6007 052e 0ED0     		beq	.L268
 6008              		.loc 1 2606 55 discriminator 1
 6009 0530 D7F8E030 		ldr	r3, [r7, #224]
 6010 0534 03F04003 		and	r3, r3, #64
 6011              		.loc 1 2606 43 discriminator 1
 6012 0538 002B     		cmp	r3, #0
 6013 053a 08D0     		beq	.L268
2607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 6014              		.loc 1 2608 5
 6015 053c 7868     		ldr	r0, [r7, #4]
 6016 053e FFF7FEFF 		bl	UART_EndTransmit_IT
2609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 6017              		.loc 1 2609 5
 6018 0542 04E0     		b	.L268
 6019              	.L316:
2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
 6020              		.loc 1 2479 5
 6021 0544 00BF     		nop
 6022 0546 02E0     		b	.L268
 6023              	.L318:
 6024              	.LBB532:
2559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6025              		.loc 1 2559 7
 6026 0548 00BF     		nop
 6027 054a 00E0     		b	.L268
 6028              	.L319:
 6029              	.LBE532:
 6030              	.LBB533:
2594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 6031              		.loc 1 2594 7
 6032 054c 00BF     		nop
 6033              	.L268:
 6034              	.LBE533:
2610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6035              		.loc 1 2611 1
 6036 054e E837     		adds	r7, r7, #232
 6037              	.LCFI139:
 6038              		.cfi_def_cfa_offset 8
 6039 0550 BD46     		mov	sp, r7
 6040              	.LCFI140:
 6041              		.cfi_def_cfa_register 13
 6042              		@ sp needed
 6043 0552 80BD     		pop	{r7, pc}
 6044              		.cfi_endproc
 6045              	.LFE160:
 6047              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 6048              		.align	1
 6049              		.weak	HAL_UART_TxCpltCallback
 6050              		.syntax unified
 6051              		.thumb
 6052              		.thumb_func
 6054              	HAL_UART_TxCpltCallback:
 6055              	.LFB161:
2612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 164


2614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
2615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6056              		.loc 1 2620 1
 6057              		.cfi_startproc
 6058              		@ args = 0, pretend = 0, frame = 8
 6059              		@ frame_needed = 1, uses_anonymous_args = 0
 6060              		@ link register save eliminated.
 6061 0000 80B4     		push	{r7}
 6062              	.LCFI141:
 6063              		.cfi_def_cfa_offset 4
 6064              		.cfi_offset 7, -4
 6065 0002 83B0     		sub	sp, sp, #12
 6066              	.LCFI142:
 6067              		.cfi_def_cfa_offset 16
 6068 0004 00AF     		add	r7, sp, #0
 6069              	.LCFI143:
 6070              		.cfi_def_cfa_register 7
 6071 0006 7860     		str	r0, [r7, #4]
2621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
2625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6072              		.loc 1 2626 1
 6073 0008 00BF     		nop
 6074 000a 0C37     		adds	r7, r7, #12
 6075              	.LCFI144:
 6076              		.cfi_def_cfa_offset 4
 6077 000c BD46     		mov	sp, r7
 6078              	.LCFI145:
 6079              		.cfi_def_cfa_register 13
 6080              		@ sp needed
 6081 000e 5DF8047B 		ldr	r7, [sp], #4
 6082              	.LCFI146:
 6083              		.cfi_restore 7
 6084              		.cfi_def_cfa_offset 0
 6085 0012 7047     		bx	lr
 6086              		.cfi_endproc
 6087              	.LFE161:
 6089              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 6090              		.align	1
 6091              		.weak	HAL_UART_TxHalfCpltCallback
 6092              		.syntax unified
 6093              		.thumb
 6094              		.thumb_func
 6096              	HAL_UART_TxHalfCpltCallback:
 6097              	.LFB162:
2627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
2630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 165


2631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6098              		.loc 1 2635 1
 6099              		.cfi_startproc
 6100              		@ args = 0, pretend = 0, frame = 8
 6101              		@ frame_needed = 1, uses_anonymous_args = 0
 6102              		@ link register save eliminated.
 6103 0000 80B4     		push	{r7}
 6104              	.LCFI147:
 6105              		.cfi_def_cfa_offset 4
 6106              		.cfi_offset 7, -4
 6107 0002 83B0     		sub	sp, sp, #12
 6108              	.LCFI148:
 6109              		.cfi_def_cfa_offset 16
 6110 0004 00AF     		add	r7, sp, #0
 6111              	.LCFI149:
 6112              		.cfi_def_cfa_register 7
 6113 0006 7860     		str	r0, [r7, #4]
2636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
2640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6114              		.loc 1 2641 1
 6115 0008 00BF     		nop
 6116 000a 0C37     		adds	r7, r7, #12
 6117              	.LCFI150:
 6118              		.cfi_def_cfa_offset 4
 6119 000c BD46     		mov	sp, r7
 6120              	.LCFI151:
 6121              		.cfi_def_cfa_register 13
 6122              		@ sp needed
 6123 000e 5DF8047B 		ldr	r7, [sp], #4
 6124              	.LCFI152:
 6125              		.cfi_restore 7
 6126              		.cfi_def_cfa_offset 0
 6127 0012 7047     		bx	lr
 6128              		.cfi_endproc
 6129              	.LFE162:
 6131              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 6132              		.align	1
 6133              		.weak	HAL_UART_RxCpltCallback
 6134              		.syntax unified
 6135              		.thumb
 6136              		.thumb_func
 6138              	HAL_UART_RxCpltCallback:
 6139              	.LFB163:
2642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
2645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 166


2648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6140              		.loc 1 2650 1
 6141              		.cfi_startproc
 6142              		@ args = 0, pretend = 0, frame = 8
 6143              		@ frame_needed = 1, uses_anonymous_args = 0
 6144              		@ link register save eliminated.
 6145 0000 80B4     		push	{r7}
 6146              	.LCFI153:
 6147              		.cfi_def_cfa_offset 4
 6148              		.cfi_offset 7, -4
 6149 0002 83B0     		sub	sp, sp, #12
 6150              	.LCFI154:
 6151              		.cfi_def_cfa_offset 16
 6152 0004 00AF     		add	r7, sp, #0
 6153              	.LCFI155:
 6154              		.cfi_def_cfa_register 7
 6155 0006 7860     		str	r0, [r7, #4]
2651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
2655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6156              		.loc 1 2656 1
 6157 0008 00BF     		nop
 6158 000a 0C37     		adds	r7, r7, #12
 6159              	.LCFI156:
 6160              		.cfi_def_cfa_offset 4
 6161 000c BD46     		mov	sp, r7
 6162              	.LCFI157:
 6163              		.cfi_def_cfa_register 13
 6164              		@ sp needed
 6165 000e 5DF8047B 		ldr	r7, [sp], #4
 6166              	.LCFI158:
 6167              		.cfi_restore 7
 6168              		.cfi_def_cfa_offset 0
 6169 0012 7047     		bx	lr
 6170              		.cfi_endproc
 6171              	.LFE163:
 6173              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 6174              		.align	1
 6175              		.weak	HAL_UART_RxHalfCpltCallback
 6176              		.syntax unified
 6177              		.thumb
 6178              		.thumb_func
 6180              	HAL_UART_RxHalfCpltCallback:
 6181              	.LFB164:
2657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
2660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 167


2665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6182              		.loc 1 2665 1
 6183              		.cfi_startproc
 6184              		@ args = 0, pretend = 0, frame = 8
 6185              		@ frame_needed = 1, uses_anonymous_args = 0
 6186              		@ link register save eliminated.
 6187 0000 80B4     		push	{r7}
 6188              	.LCFI159:
 6189              		.cfi_def_cfa_offset 4
 6190              		.cfi_offset 7, -4
 6191 0002 83B0     		sub	sp, sp, #12
 6192              	.LCFI160:
 6193              		.cfi_def_cfa_offset 16
 6194 0004 00AF     		add	r7, sp, #0
 6195              	.LCFI161:
 6196              		.cfi_def_cfa_register 7
 6197 0006 7860     		str	r0, [r7, #4]
2666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6198              		.loc 1 2671 1
 6199 0008 00BF     		nop
 6200 000a 0C37     		adds	r7, r7, #12
 6201              	.LCFI162:
 6202              		.cfi_def_cfa_offset 4
 6203 000c BD46     		mov	sp, r7
 6204              	.LCFI163:
 6205              		.cfi_def_cfa_register 13
 6206              		@ sp needed
 6207 000e 5DF8047B 		ldr	r7, [sp], #4
 6208              	.LCFI164:
 6209              		.cfi_restore 7
 6210              		.cfi_def_cfa_offset 0
 6211 0012 7047     		bx	lr
 6212              		.cfi_endproc
 6213              	.LFE164:
 6215              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 6216              		.align	1
 6217              		.weak	HAL_UART_ErrorCallback
 6218              		.syntax unified
 6219              		.thumb
 6220              		.thumb_func
 6222              	HAL_UART_ErrorCallback:
 6223              	.LFB165:
2672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
2675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6224              		.loc 1 2680 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 168


 6225              		.cfi_startproc
 6226              		@ args = 0, pretend = 0, frame = 8
 6227              		@ frame_needed = 1, uses_anonymous_args = 0
 6228              		@ link register save eliminated.
 6229 0000 80B4     		push	{r7}
 6230              	.LCFI165:
 6231              		.cfi_def_cfa_offset 4
 6232              		.cfi_offset 7, -4
 6233 0002 83B0     		sub	sp, sp, #12
 6234              	.LCFI166:
 6235              		.cfi_def_cfa_offset 16
 6236 0004 00AF     		add	r7, sp, #0
 6237              	.LCFI167:
 6238              		.cfi_def_cfa_register 7
 6239 0006 7860     		str	r0, [r7, #4]
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6240              		.loc 1 2686 1
 6241 0008 00BF     		nop
 6242 000a 0C37     		adds	r7, r7, #12
 6243              	.LCFI168:
 6244              		.cfi_def_cfa_offset 4
 6245 000c BD46     		mov	sp, r7
 6246              	.LCFI169:
 6247              		.cfi_def_cfa_register 13
 6248              		@ sp needed
 6249 000e 5DF8047B 		ldr	r7, [sp], #4
 6250              	.LCFI170:
 6251              		.cfi_restore 7
 6252              		.cfi_def_cfa_offset 0
 6253 0012 7047     		bx	lr
 6254              		.cfi_endproc
 6255              	.LFE165:
 6257              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 6258              		.align	1
 6259              		.weak	HAL_UART_AbortCpltCallback
 6260              		.syntax unified
 6261              		.thumb
 6262              		.thumb_func
 6264              	HAL_UART_AbortCpltCallback:
 6265              	.LFB166:
2687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6266              		.loc 1 2694 1
 6267              		.cfi_startproc
 6268              		@ args = 0, pretend = 0, frame = 8
 6269              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 169


 6270              		@ link register save eliminated.
 6271 0000 80B4     		push	{r7}
 6272              	.LCFI171:
 6273              		.cfi_def_cfa_offset 4
 6274              		.cfi_offset 7, -4
 6275 0002 83B0     		sub	sp, sp, #12
 6276              	.LCFI172:
 6277              		.cfi_def_cfa_offset 16
 6278 0004 00AF     		add	r7, sp, #0
 6279              	.LCFI173:
 6280              		.cfi_def_cfa_register 7
 6281 0006 7860     		str	r0, [r7, #4]
2695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6282              		.loc 1 2701 1
 6283 0008 00BF     		nop
 6284 000a 0C37     		adds	r7, r7, #12
 6285              	.LCFI174:
 6286              		.cfi_def_cfa_offset 4
 6287 000c BD46     		mov	sp, r7
 6288              	.LCFI175:
 6289              		.cfi_def_cfa_register 13
 6290              		@ sp needed
 6291 000e 5DF8047B 		ldr	r7, [sp], #4
 6292              	.LCFI176:
 6293              		.cfi_restore 7
 6294              		.cfi_def_cfa_offset 0
 6295 0012 7047     		bx	lr
 6296              		.cfi_endproc
 6297              	.LFE166:
 6299              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 6300              		.align	1
 6301              		.weak	HAL_UART_AbortTransmitCpltCallback
 6302              		.syntax unified
 6303              		.thumb
 6304              		.thumb_func
 6306              	HAL_UART_AbortTransmitCpltCallback:
 6307              	.LFB167:
2702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6308              		.loc 1 2709 1
 6309              		.cfi_startproc
 6310              		@ args = 0, pretend = 0, frame = 8
 6311              		@ frame_needed = 1, uses_anonymous_args = 0
 6312              		@ link register save eliminated.
 6313 0000 80B4     		push	{r7}
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 170


 6314              	.LCFI177:
 6315              		.cfi_def_cfa_offset 4
 6316              		.cfi_offset 7, -4
 6317 0002 83B0     		sub	sp, sp, #12
 6318              	.LCFI178:
 6319              		.cfi_def_cfa_offset 16
 6320 0004 00AF     		add	r7, sp, #0
 6321              	.LCFI179:
 6322              		.cfi_def_cfa_register 7
 6323 0006 7860     		str	r0, [r7, #4]
2710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6324              		.loc 1 2716 1
 6325 0008 00BF     		nop
 6326 000a 0C37     		adds	r7, r7, #12
 6327              	.LCFI180:
 6328              		.cfi_def_cfa_offset 4
 6329 000c BD46     		mov	sp, r7
 6330              	.LCFI181:
 6331              		.cfi_def_cfa_register 13
 6332              		@ sp needed
 6333 000e 5DF8047B 		ldr	r7, [sp], #4
 6334              	.LCFI182:
 6335              		.cfi_restore 7
 6336              		.cfi_def_cfa_offset 0
 6337 0012 7047     		bx	lr
 6338              		.cfi_endproc
 6339              	.LFE167:
 6341              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 6342              		.align	1
 6343              		.weak	HAL_UART_AbortReceiveCpltCallback
 6344              		.syntax unified
 6345              		.thumb
 6346              		.thumb_func
 6348              	HAL_UART_AbortReceiveCpltCallback:
 6349              	.LFB168:
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6350              		.loc 1 2724 1
 6351              		.cfi_startproc
 6352              		@ args = 0, pretend = 0, frame = 8
 6353              		@ frame_needed = 1, uses_anonymous_args = 0
 6354              		@ link register save eliminated.
 6355 0000 80B4     		push	{r7}
 6356              	.LCFI183:
 6357              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 171


 6358              		.cfi_offset 7, -4
 6359 0002 83B0     		sub	sp, sp, #12
 6360              	.LCFI184:
 6361              		.cfi_def_cfa_offset 16
 6362 0004 00AF     		add	r7, sp, #0
 6363              	.LCFI185:
 6364              		.cfi_def_cfa_register 7
 6365 0006 7860     		str	r0, [r7, #4]
2725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6366              		.loc 1 2731 1
 6367 0008 00BF     		nop
 6368 000a 0C37     		adds	r7, r7, #12
 6369              	.LCFI186:
 6370              		.cfi_def_cfa_offset 4
 6371 000c BD46     		mov	sp, r7
 6372              	.LCFI187:
 6373              		.cfi_def_cfa_register 13
 6374              		@ sp needed
 6375 000e 5DF8047B 		ldr	r7, [sp], #4
 6376              	.LCFI188:
 6377              		.cfi_restore 7
 6378              		.cfi_def_cfa_offset 0
 6379 0012 7047     		bx	lr
 6380              		.cfi_endproc
 6381              	.LFE168:
 6383              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 6384              		.align	1
 6385              		.weak	HAL_UARTEx_RxEventCallback
 6386              		.syntax unified
 6387              		.thumb
 6388              		.thumb_func
 6390              	HAL_UARTEx_RxEventCallback:
 6391              	.LFB169:
2732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle
2736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               reception buffer until which, data are available)
2738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6392              		.loc 1 2741 1
 6393              		.cfi_startproc
 6394              		@ args = 0, pretend = 0, frame = 8
 6395              		@ frame_needed = 1, uses_anonymous_args = 0
 6396              		@ link register save eliminated.
 6397 0000 80B4     		push	{r7}
 6398              	.LCFI189:
 6399              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 172


 6400              		.cfi_offset 7, -4
 6401 0002 83B0     		sub	sp, sp, #12
 6402              	.LCFI190:
 6403              		.cfi_def_cfa_offset 16
 6404 0004 00AF     		add	r7, sp, #0
 6405              	.LCFI191:
 6406              		.cfi_def_cfa_register 7
 6407 0006 7860     		str	r0, [r7, #4]
 6408 0008 0B46     		mov	r3, r1
 6409 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(Size);
2745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6410              		.loc 1 2749 1
 6411 000c 00BF     		nop
 6412 000e 0C37     		adds	r7, r7, #12
 6413              	.LCFI192:
 6414              		.cfi_def_cfa_offset 4
 6415 0010 BD46     		mov	sp, r7
 6416              	.LCFI193:
 6417              		.cfi_def_cfa_register 13
 6418              		@ sp needed
 6419 0012 5DF8047B 		ldr	r7, [sp], #4
 6420              	.LCFI194:
 6421              		.cfi_restore 7
 6422              		.cfi_def_cfa_offset 0
 6423 0016 7047     		bx	lr
 6424              		.cfi_endproc
 6425              	.LFE169:
 6427              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 6428              		.align	1
 6429              		.global	HAL_LIN_SendBreak
 6430              		.syntax unified
 6431              		.thumb
 6432              		.thumb_func
 6434              	HAL_LIN_SendBreak:
 6435              	.LFB170:
2750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions
2757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
2763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
2764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 173


2765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode.
2766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
2767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
2768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
2769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
2776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6436              		.loc 1 2781 1
 6437              		.cfi_startproc
 6438              		@ args = 0, pretend = 0, frame = 32
 6439              		@ frame_needed = 1, uses_anonymous_args = 0
 6440              		@ link register save eliminated.
 6441 0000 80B4     		push	{r7}
 6442              	.LCFI195:
 6443              		.cfi_def_cfa_offset 4
 6444              		.cfi_offset 7, -4
 6445 0002 89B0     		sub	sp, sp, #36
 6446              	.LCFI196:
 6447              		.cfi_def_cfa_offset 40
 6448 0004 00AF     		add	r7, sp, #0
 6449              	.LCFI197:
 6450              		.cfi_def_cfa_register 7
 6451 0006 7860     		str	r0, [r7, #4]
2782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6452              		.loc 1 2786 3
 6453 0008 7B68     		ldr	r3, [r7, #4]
 6454 000a 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 6455 000e 012B     		cmp	r3, #1
 6456 0010 01D1     		bne	.L332
 6457              		.loc 1 2786 3 is_stmt 0 discriminator 1
 6458 0012 0223     		movs	r3, #2
 6459              		.loc 1 2786 3
 6460 0014 2AE0     		b	.L333
 6461              	.L332:
 6462              		.loc 1 2786 3 discriminator 2
 6463 0016 7B68     		ldr	r3, [r7, #4]
 6464 0018 0122     		movs	r2, #1
 6465 001a 83F84020 		strb	r2, [r3, #64]
2787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6466              		.loc 1 2788 17 is_stmt 1
 6467 001e 7B68     		ldr	r3, [r7, #4]
 6468 0020 2422     		movs	r2, #36
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 174


 6469 0022 83F84120 		strb	r2, [r3, #65]
 6470              	.L336:
 6471              	.LBB534:
2789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
2791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
 6472              		.loc 1 2791 3 discriminator 1
 6473 0026 7B68     		ldr	r3, [r7, #4]
 6474 0028 1B68     		ldr	r3, [r3]
 6475 002a 0C33     		adds	r3, r3, #12
 6476 002c FB60     		str	r3, [r7, #12]
 6477              	.LBB535:
 6478              	.LBB536:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6479              		.loc 2 480 4
 6480 002e FB68     		ldr	r3, [r7, #12]
 6481              		.syntax unified
 6482              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6483 0030 53E8003F 		ldrex r3, [r3]
 6484              	@ 0 "" 2
 6485              		.thumb
 6486              		.syntax unified
 6487 0034 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6488              		.loc 2 481 10
 6489 0036 BB68     		ldr	r3, [r7, #8]
 6490              	.LBE536:
 6491              	.LBE535:
 6492              		.loc 1 2791 3 discriminator 1
 6493 0038 43F00103 		orr	r3, r3, #1
 6494 003c FB61     		str	r3, [r7, #28]
 6495 003e 7B68     		ldr	r3, [r7, #4]
 6496 0040 1B68     		ldr	r3, [r3]
 6497 0042 0C33     		adds	r3, r3, #12
 6498 0044 FA69     		ldr	r2, [r7, #28]
 6499 0046 BA61     		str	r2, [r7, #24]
 6500 0048 7B61     		str	r3, [r7, #20]
 6501              	.LBB537:
 6502              	.LBB538:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6503              		.loc 2 531 4
 6504 004a 7969     		ldr	r1, [r7, #20]
 6505 004c BA69     		ldr	r2, [r7, #24]
 6506              		.syntax unified
 6507              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6508 004e 41E80023 		strex r3, r2, [r1]
 6509              	@ 0 "" 2
 6510              		.thumb
 6511              		.syntax unified
 6512 0052 3B61     		str	r3, [r7, #16]
 6513              		.loc 2 532 10
 6514 0054 3B69     		ldr	r3, [r7, #16]
 6515              	.LBE538:
 6516              	.LBE537:
 6517              		.loc 1 2791 3 discriminator 1
 6518 0056 002B     		cmp	r3, #0
 6519 0058 E5D1     		bne	.L336
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 175


 6520              	.LBE534:
2792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6521              		.loc 1 2793 17
 6522 005a 7B68     		ldr	r3, [r7, #4]
 6523 005c 2022     		movs	r2, #32
 6524 005e 83F84120 		strb	r2, [r3, #65]
2794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6525              		.loc 1 2796 3
 6526 0062 7B68     		ldr	r3, [r7, #4]
 6527 0064 0022     		movs	r2, #0
 6528 0066 83F84020 		strb	r2, [r3, #64]
2797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6529              		.loc 1 2798 10
 6530 006a 0023     		movs	r3, #0
 6531              	.L333:
2799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6532              		.loc 1 2799 1
 6533 006c 1846     		mov	r0, r3
 6534 006e 2437     		adds	r7, r7, #36
 6535              	.LCFI198:
 6536              		.cfi_def_cfa_offset 4
 6537 0070 BD46     		mov	sp, r7
 6538              	.LCFI199:
 6539              		.cfi_def_cfa_register 13
 6540              		@ sp needed
 6541 0072 5DF8047B 		ldr	r7, [sp], #4
 6542              	.LCFI200:
 6543              		.cfi_restore 7
 6544              		.cfi_def_cfa_offset 0
 6545 0076 7047     		bx	lr
 6546              		.cfi_endproc
 6547              	.LFE170:
 6549              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 6550              		.align	1
 6551              		.global	HAL_MultiProcessor_EnterMuteMode
 6552              		.syntax unified
 6553              		.thumb
 6554              		.thumb_func
 6556              	HAL_MultiProcessor_EnterMuteMode:
 6557              	.LFB171:
2800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode.
2803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6558              		.loc 1 2808 1
 6559              		.cfi_startproc
 6560              		@ args = 0, pretend = 0, frame = 32
 6561              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 176


 6562              		@ link register save eliminated.
 6563 0000 80B4     		push	{r7}
 6564              	.LCFI201:
 6565              		.cfi_def_cfa_offset 4
 6566              		.cfi_offset 7, -4
 6567 0002 89B0     		sub	sp, sp, #36
 6568              	.LCFI202:
 6569              		.cfi_def_cfa_offset 40
 6570 0004 00AF     		add	r7, sp, #0
 6571              	.LCFI203:
 6572              		.cfi_def_cfa_register 7
 6573 0006 7860     		str	r0, [r7, #4]
2809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6574              		.loc 1 2813 3
 6575 0008 7B68     		ldr	r3, [r7, #4]
 6576 000a 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 6577 000e 012B     		cmp	r3, #1
 6578 0010 01D1     		bne	.L338
 6579              		.loc 1 2813 3 is_stmt 0 discriminator 1
 6580 0012 0223     		movs	r3, #2
 6581              		.loc 1 2813 3
 6582 0014 2DE0     		b	.L339
 6583              	.L338:
 6584              		.loc 1 2813 3 discriminator 2
 6585 0016 7B68     		ldr	r3, [r7, #4]
 6586 0018 0122     		movs	r2, #1
 6587 001a 83F84020 		strb	r2, [r3, #64]
2814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6588              		.loc 1 2815 17 is_stmt 1
 6589 001e 7B68     		ldr	r3, [r7, #4]
 6590 0020 2422     		movs	r2, #36
 6591 0022 83F84120 		strb	r2, [r3, #65]
 6592              	.L342:
 6593              	.LBB539:
2816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
2818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
 6594              		.loc 1 2818 3 discriminator 1
 6595 0026 7B68     		ldr	r3, [r7, #4]
 6596 0028 1B68     		ldr	r3, [r3]
 6597 002a 0C33     		adds	r3, r3, #12
 6598 002c FB60     		str	r3, [r7, #12]
 6599              	.LBB540:
 6600              	.LBB541:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6601              		.loc 2 480 4
 6602 002e FB68     		ldr	r3, [r7, #12]
 6603              		.syntax unified
 6604              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6605 0030 53E8003F 		ldrex r3, [r3]
 6606              	@ 0 "" 2
 6607              		.thumb
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 177


 6608              		.syntax unified
 6609 0034 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6610              		.loc 2 481 10
 6611 0036 BB68     		ldr	r3, [r7, #8]
 6612              	.LBE541:
 6613              	.LBE540:
 6614              		.loc 1 2818 3 discriminator 1
 6615 0038 43F00203 		orr	r3, r3, #2
 6616 003c FB61     		str	r3, [r7, #28]
 6617 003e 7B68     		ldr	r3, [r7, #4]
 6618 0040 1B68     		ldr	r3, [r3]
 6619 0042 0C33     		adds	r3, r3, #12
 6620 0044 FA69     		ldr	r2, [r7, #28]
 6621 0046 BA61     		str	r2, [r7, #24]
 6622 0048 7B61     		str	r3, [r7, #20]
 6623              	.LBB542:
 6624              	.LBB543:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6625              		.loc 2 531 4
 6626 004a 7969     		ldr	r1, [r7, #20]
 6627 004c BA69     		ldr	r2, [r7, #24]
 6628              		.syntax unified
 6629              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6630 004e 41E80023 		strex r3, r2, [r1]
 6631              	@ 0 "" 2
 6632              		.thumb
 6633              		.syntax unified
 6634 0052 3B61     		str	r3, [r7, #16]
 6635              		.loc 2 532 10
 6636 0054 3B69     		ldr	r3, [r7, #16]
 6637              	.LBE543:
 6638              	.LBE542:
 6639              		.loc 1 2818 3 discriminator 1
 6640 0056 002B     		cmp	r3, #0
 6641 0058 E5D1     		bne	.L342
 6642              	.LBE539:
2819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6643              		.loc 1 2820 17
 6644 005a 7B68     		ldr	r3, [r7, #4]
 6645 005c 2022     		movs	r2, #32
 6646 005e 83F84120 		strb	r2, [r3, #65]
2821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 6647              		.loc 1 2821 22
 6648 0062 7B68     		ldr	r3, [r7, #4]
 6649 0064 0022     		movs	r2, #0
 6650 0066 5A63     		str	r2, [r3, #52]
2822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6651              		.loc 1 2824 3
 6652 0068 7B68     		ldr	r3, [r7, #4]
 6653 006a 0022     		movs	r2, #0
 6654 006c 83F84020 		strb	r2, [r3, #64]
2825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 178


 6655              		.loc 1 2826 10
 6656 0070 0023     		movs	r3, #0
 6657              	.L339:
2827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6658              		.loc 1 2827 1
 6659 0072 1846     		mov	r0, r3
 6660 0074 2437     		adds	r7, r7, #36
 6661              	.LCFI204:
 6662              		.cfi_def_cfa_offset 4
 6663 0076 BD46     		mov	sp, r7
 6664              	.LCFI205:
 6665              		.cfi_def_cfa_register 13
 6666              		@ sp needed
 6667 0078 5DF8047B 		ldr	r7, [sp], #4
 6668              	.LCFI206:
 6669              		.cfi_restore 7
 6670              		.cfi_def_cfa_offset 0
 6671 007c 7047     		bx	lr
 6672              		.cfi_endproc
 6673              	.LFE171:
 6675              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 6676              		.align	1
 6677              		.global	HAL_MultiProcessor_ExitMuteMode
 6678              		.syntax unified
 6679              		.thumb
 6680              		.thumb_func
 6682              	HAL_MultiProcessor_ExitMuteMode:
 6683              	.LFB172:
2828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software.
2831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
2836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6684              		.loc 1 2836 1
 6685              		.cfi_startproc
 6686              		@ args = 0, pretend = 0, frame = 32
 6687              		@ frame_needed = 1, uses_anonymous_args = 0
 6688              		@ link register save eliminated.
 6689 0000 80B4     		push	{r7}
 6690              	.LCFI207:
 6691              		.cfi_def_cfa_offset 4
 6692              		.cfi_offset 7, -4
 6693 0002 89B0     		sub	sp, sp, #36
 6694              	.LCFI208:
 6695              		.cfi_def_cfa_offset 40
 6696 0004 00AF     		add	r7, sp, #0
 6697              	.LCFI209:
 6698              		.cfi_def_cfa_register 7
 6699 0006 7860     		str	r0, [r7, #4]
2837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 179


2841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6700              		.loc 1 2841 3
 6701 0008 7B68     		ldr	r3, [r7, #4]
 6702 000a 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 6703 000e 012B     		cmp	r3, #1
 6704 0010 01D1     		bne	.L344
 6705              		.loc 1 2841 3 is_stmt 0 discriminator 1
 6706 0012 0223     		movs	r3, #2
 6707              		.loc 1 2841 3
 6708 0014 2DE0     		b	.L345
 6709              	.L344:
 6710              		.loc 1 2841 3 discriminator 2
 6711 0016 7B68     		ldr	r3, [r7, #4]
 6712 0018 0122     		movs	r2, #1
 6713 001a 83F84020 		strb	r2, [r3, #64]
2842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6714              		.loc 1 2843 17 is_stmt 1
 6715 001e 7B68     		ldr	r3, [r7, #4]
 6716 0020 2422     		movs	r2, #36
 6717 0022 83F84120 		strb	r2, [r3, #65]
 6718              	.L348:
 6719              	.LBB544:
2844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
2846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
 6720              		.loc 1 2846 3 discriminator 1
 6721 0026 7B68     		ldr	r3, [r7, #4]
 6722 0028 1B68     		ldr	r3, [r3]
 6723 002a 0C33     		adds	r3, r3, #12
 6724 002c FB60     		str	r3, [r7, #12]
 6725              	.LBB545:
 6726              	.LBB546:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6727              		.loc 2 480 4
 6728 002e FB68     		ldr	r3, [r7, #12]
 6729              		.syntax unified
 6730              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6731 0030 53E8003F 		ldrex r3, [r3]
 6732              	@ 0 "" 2
 6733              		.thumb
 6734              		.syntax unified
 6735 0034 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6736              		.loc 2 481 10
 6737 0036 BB68     		ldr	r3, [r7, #8]
 6738              	.LBE546:
 6739              	.LBE545:
 6740              		.loc 1 2846 3 discriminator 1
 6741 0038 23F00203 		bic	r3, r3, #2
 6742 003c FB61     		str	r3, [r7, #28]
 6743 003e 7B68     		ldr	r3, [r7, #4]
 6744 0040 1B68     		ldr	r3, [r3]
 6745 0042 0C33     		adds	r3, r3, #12
 6746 0044 FA69     		ldr	r2, [r7, #28]
 6747 0046 BA61     		str	r2, [r7, #24]
 6748 0048 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 180


 6749              	.LBB547:
 6750              	.LBB548:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6751              		.loc 2 531 4
 6752 004a 7969     		ldr	r1, [r7, #20]
 6753 004c BA69     		ldr	r2, [r7, #24]
 6754              		.syntax unified
 6755              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6756 004e 41E80023 		strex r3, r2, [r1]
 6757              	@ 0 "" 2
 6758              		.thumb
 6759              		.syntax unified
 6760 0052 3B61     		str	r3, [r7, #16]
 6761              		.loc 2 532 10
 6762 0054 3B69     		ldr	r3, [r7, #16]
 6763              	.LBE548:
 6764              	.LBE547:
 6765              		.loc 1 2846 3 discriminator 1
 6766 0056 002B     		cmp	r3, #0
 6767 0058 E5D1     		bne	.L348
 6768              	.LBE544:
2847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6769              		.loc 1 2848 17
 6770 005a 7B68     		ldr	r3, [r7, #4]
 6771 005c 2022     		movs	r2, #32
 6772 005e 83F84120 		strb	r2, [r3, #65]
2849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 6773              		.loc 1 2849 22
 6774 0062 7B68     		ldr	r3, [r7, #4]
 6775 0064 0022     		movs	r2, #0
 6776 0066 5A63     		str	r2, [r3, #52]
2850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6777              		.loc 1 2852 3
 6778 0068 7B68     		ldr	r3, [r7, #4]
 6779 006a 0022     		movs	r2, #0
 6780 006c 83F84020 		strb	r2, [r3, #64]
2853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6781              		.loc 1 2854 10
 6782 0070 0023     		movs	r3, #0
 6783              	.L345:
2855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6784              		.loc 1 2855 1
 6785 0072 1846     		mov	r0, r3
 6786 0074 2437     		adds	r7, r7, #36
 6787              	.LCFI210:
 6788              		.cfi_def_cfa_offset 4
 6789 0076 BD46     		mov	sp, r7
 6790              	.LCFI211:
 6791              		.cfi_def_cfa_register 13
 6792              		@ sp needed
 6793 0078 5DF8047B 		ldr	r7, [sp], #4
 6794              	.LCFI212:
 6795              		.cfi_restore 7
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 181


 6796              		.cfi_def_cfa_offset 0
 6797 007c 7047     		bx	lr
 6798              		.cfi_endproc
 6799              	.LFE172:
 6801              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 6802              		.align	1
 6803              		.global	HAL_HalfDuplex_EnableTransmitter
 6804              		.syntax unified
 6805              		.thumb
 6806              		.thumb_func
 6808              	HAL_HalfDuplex_EnableTransmitter:
 6809              	.LFB173:
2856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6810              		.loc 1 2864 1
 6811              		.cfi_startproc
 6812              		@ args = 0, pretend = 0, frame = 16
 6813              		@ frame_needed = 1, uses_anonymous_args = 0
 6814              		@ link register save eliminated.
 6815 0000 80B4     		push	{r7}
 6816              	.LCFI213:
 6817              		.cfi_def_cfa_offset 4
 6818              		.cfi_offset 7, -4
 6819 0002 85B0     		sub	sp, sp, #20
 6820              	.LCFI214:
 6821              		.cfi_def_cfa_offset 24
 6822 0004 00AF     		add	r7, sp, #0
 6823              	.LCFI215:
 6824              		.cfi_def_cfa_register 7
 6825 0006 7860     		str	r0, [r7, #4]
2865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 6826              		.loc 1 2865 12
 6827 0008 0023     		movs	r3, #0
 6828 000a FB60     		str	r3, [r7, #12]
2866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6829              		.loc 1 2868 3
 6830 000c 7B68     		ldr	r3, [r7, #4]
 6831 000e 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 6832 0012 012B     		cmp	r3, #1
 6833 0014 01D1     		bne	.L350
 6834              		.loc 1 2868 3 is_stmt 0 discriminator 1
 6835 0016 0223     		movs	r3, #2
 6836              		.loc 1 2868 3
 6837 0018 20E0     		b	.L351
 6838              	.L350:
 6839              		.loc 1 2868 3 discriminator 2
 6840 001a 7B68     		ldr	r3, [r7, #4]
 6841 001c 0122     		movs	r2, #1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 182


 6842 001e 83F84020 		strb	r2, [r3, #64]
2869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6843              		.loc 1 2870 17 is_stmt 1
 6844 0022 7B68     		ldr	r3, [r7, #4]
 6845 0024 2422     		movs	r2, #36
 6846 0026 83F84120 		strb	r2, [r3, #65]
2871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 6847              		.loc 1 2873 17
 6848 002a 7B68     		ldr	r3, [r7, #4]
 6849 002c 1B68     		ldr	r3, [r3]
 6850              		.loc 1 2873 10
 6851 002e DB68     		ldr	r3, [r3, #12]
 6852 0030 FB60     		str	r3, [r7, #12]
2874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 6853              		.loc 1 2876 10
 6854 0032 FB68     		ldr	r3, [r7, #12]
 6855 0034 23F00C03 		bic	r3, r3, #12
 6856 0038 FB60     		str	r3, [r7, #12]
2877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
 6857              		.loc 1 2879 10
 6858 003a FB68     		ldr	r3, [r7, #12]
 6859 003c 43F00803 		orr	r3, r3, #8
 6860 0040 FB60     		str	r3, [r7, #12]
2880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 6861              		.loc 1 2882 3
 6862 0042 7B68     		ldr	r3, [r7, #4]
 6863 0044 1B68     		ldr	r3, [r3]
 6864 0046 FA68     		ldr	r2, [r7, #12]
 6865 0048 DA60     		str	r2, [r3, #12]
2883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6866              		.loc 1 2884 17
 6867 004a 7B68     		ldr	r3, [r7, #4]
 6868 004c 2022     		movs	r2, #32
 6869 004e 83F84120 		strb	r2, [r3, #65]
2885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6870              		.loc 1 2887 3
 6871 0052 7B68     		ldr	r3, [r7, #4]
 6872 0054 0022     		movs	r2, #0
 6873 0056 83F84020 		strb	r2, [r3, #64]
2888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6874              		.loc 1 2889 10
 6875 005a 0023     		movs	r3, #0
 6876              	.L351:
2890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 183


 6877              		.loc 1 2890 1
 6878 005c 1846     		mov	r0, r3
 6879 005e 1437     		adds	r7, r7, #20
 6880              	.LCFI216:
 6881              		.cfi_def_cfa_offset 4
 6882 0060 BD46     		mov	sp, r7
 6883              	.LCFI217:
 6884              		.cfi_def_cfa_register 13
 6885              		@ sp needed
 6886 0062 5DF8047B 		ldr	r7, [sp], #4
 6887              	.LCFI218:
 6888              		.cfi_restore 7
 6889              		.cfi_def_cfa_offset 0
 6890 0066 7047     		bx	lr
 6891              		.cfi_endproc
 6892              	.LFE173:
 6894              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 6895              		.align	1
 6896              		.global	HAL_HalfDuplex_EnableReceiver
 6897              		.syntax unified
 6898              		.thumb
 6899              		.thumb_func
 6901              	HAL_HalfDuplex_EnableReceiver:
 6902              	.LFB174:
2891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6903              		.loc 1 2899 1
 6904              		.cfi_startproc
 6905              		@ args = 0, pretend = 0, frame = 16
 6906              		@ frame_needed = 1, uses_anonymous_args = 0
 6907              		@ link register save eliminated.
 6908 0000 80B4     		push	{r7}
 6909              	.LCFI219:
 6910              		.cfi_def_cfa_offset 4
 6911              		.cfi_offset 7, -4
 6912 0002 85B0     		sub	sp, sp, #20
 6913              	.LCFI220:
 6914              		.cfi_def_cfa_offset 24
 6915 0004 00AF     		add	r7, sp, #0
 6916              	.LCFI221:
 6917              		.cfi_def_cfa_register 7
 6918 0006 7860     		str	r0, [r7, #4]
2900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 6919              		.loc 1 2900 12
 6920 0008 0023     		movs	r3, #0
 6921 000a FB60     		str	r3, [r7, #12]
2901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6922              		.loc 1 2903 3
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 184


 6923 000c 7B68     		ldr	r3, [r7, #4]
 6924 000e 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 6925 0012 012B     		cmp	r3, #1
 6926 0014 01D1     		bne	.L353
 6927              		.loc 1 2903 3 is_stmt 0 discriminator 1
 6928 0016 0223     		movs	r3, #2
 6929              		.loc 1 2903 3
 6930 0018 20E0     		b	.L354
 6931              	.L353:
 6932              		.loc 1 2903 3 discriminator 2
 6933 001a 7B68     		ldr	r3, [r7, #4]
 6934 001c 0122     		movs	r2, #1
 6935 001e 83F84020 		strb	r2, [r3, #64]
2904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6936              		.loc 1 2905 17 is_stmt 1
 6937 0022 7B68     		ldr	r3, [r7, #4]
 6938 0024 2422     		movs	r2, #36
 6939 0026 83F84120 		strb	r2, [r3, #65]
2906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 6940              		.loc 1 2908 17
 6941 002a 7B68     		ldr	r3, [r7, #4]
 6942 002c 1B68     		ldr	r3, [r3]
 6943              		.loc 1 2908 10
 6944 002e DB68     		ldr	r3, [r3, #12]
 6945 0030 FB60     		str	r3, [r7, #12]
2909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 6946              		.loc 1 2911 10
 6947 0032 FB68     		ldr	r3, [r7, #12]
 6948 0034 23F00C03 		bic	r3, r3, #12
 6949 0038 FB60     		str	r3, [r7, #12]
2912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
 6950              		.loc 1 2914 10
 6951 003a FB68     		ldr	r3, [r7, #12]
 6952 003c 43F00403 		orr	r3, r3, #4
 6953 0040 FB60     		str	r3, [r7, #12]
2915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 6954              		.loc 1 2917 3
 6955 0042 7B68     		ldr	r3, [r7, #4]
 6956 0044 1B68     		ldr	r3, [r3]
 6957 0046 FA68     		ldr	r2, [r7, #12]
 6958 0048 DA60     		str	r2, [r3, #12]
2918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6959              		.loc 1 2919 17
 6960 004a 7B68     		ldr	r3, [r7, #4]
 6961 004c 2022     		movs	r2, #32
 6962 004e 83F84120 		strb	r2, [r3, #65]
2920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 185


2921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6963              		.loc 1 2922 3
 6964 0052 7B68     		ldr	r3, [r7, #4]
 6965 0054 0022     		movs	r2, #0
 6966 0056 83F84020 		strb	r2, [r3, #64]
2923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6967              		.loc 1 2924 10
 6968 005a 0023     		movs	r3, #0
 6969              	.L354:
2925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6970              		.loc 1 2925 1
 6971 005c 1846     		mov	r0, r3
 6972 005e 1437     		adds	r7, r7, #20
 6973              	.LCFI222:
 6974              		.cfi_def_cfa_offset 4
 6975 0060 BD46     		mov	sp, r7
 6976              	.LCFI223:
 6977              		.cfi_def_cfa_register 13
 6978              		@ sp needed
 6979 0062 5DF8047B 		ldr	r7, [sp], #4
 6980              	.LCFI224:
 6981              		.cfi_restore 7
 6982              		.cfi_def_cfa_offset 0
 6983 0066 7047     		bx	lr
 6984              		.cfi_endproc
 6985              	.LFE174:
 6987              		.section	.text.HAL_UART_GetState,"ax",%progbits
 6988              		.align	1
 6989              		.global	HAL_UART_GetState
 6990              		.syntax unified
 6991              		.thumb
 6992              		.thumb_func
 6994              	HAL_UART_GetState:
 6995              	.LFB175:
2926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions
2932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions
2933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
2937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
2939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of
2940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication
2941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
2942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
2943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication.
2944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 186


2947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
2951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
2954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(const UART_HandleTypeDef *huart)
2956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6996              		.loc 1 2956 1
 6997              		.cfi_startproc
 6998              		@ args = 0, pretend = 0, frame = 16
 6999              		@ frame_needed = 1, uses_anonymous_args = 0
 7000              		@ link register save eliminated.
 7001 0000 80B4     		push	{r7}
 7002              	.LCFI225:
 7003              		.cfi_def_cfa_offset 4
 7004              		.cfi_offset 7, -4
 7005 0002 85B0     		sub	sp, sp, #20
 7006              	.LCFI226:
 7007              		.cfi_def_cfa_offset 24
 7008 0004 00AF     		add	r7, sp, #0
 7009              	.LCFI227:
 7010              		.cfi_def_cfa_register 7
 7011 0006 7860     		str	r0, [r7, #4]
2957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 7012              		.loc 1 2957 12
 7013 0008 0023     		movs	r3, #0
 7014 000a FB60     		str	r3, [r7, #12]
 7015              		.loc 1 2957 27
 7016 000c 0023     		movs	r3, #0
 7017 000e BB60     		str	r3, [r7, #8]
2958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
 7018              		.loc 1 2958 16
 7019 0010 7B68     		ldr	r3, [r7, #4]
 7020 0012 93F84130 		ldrb	r3, [r3, #65]
 7021 0016 DBB2     		uxtb	r3, r3
 7022              		.loc 1 2958 9
 7023 0018 FB60     		str	r3, [r7, #12]
2959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 7024              		.loc 1 2959 16
 7025 001a 7B68     		ldr	r3, [r7, #4]
 7026 001c 93F84230 		ldrb	r3, [r3, #66]
 7027 0020 DBB2     		uxtb	r3, r3
 7028              		.loc 1 2959 9
 7029 0022 BB60     		str	r3, [r7, #8]
2960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 7030              		.loc 1 2961 10
 7031 0024 FB68     		ldr	r3, [r7, #12]
 7032 0026 DAB2     		uxtb	r2, r3
 7033 0028 BB68     		ldr	r3, [r7, #8]
 7034 002a DBB2     		uxtb	r3, r3
 7035 002c 1343     		orrs	r3, r3, r2
 7036 002e DBB2     		uxtb	r3, r3
2962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 187


 7037              		.loc 1 2962 1
 7038 0030 1846     		mov	r0, r3
 7039 0032 1437     		adds	r7, r7, #20
 7040              	.LCFI228:
 7041              		.cfi_def_cfa_offset 4
 7042 0034 BD46     		mov	sp, r7
 7043              	.LCFI229:
 7044              		.cfi_def_cfa_register 13
 7045              		@ sp needed
 7046 0036 5DF8047B 		ldr	r7, [sp], #4
 7047              	.LCFI230:
 7048              		.cfi_restore 7
 7049              		.cfi_def_cfa_offset 0
 7050 003a 7047     		bx	lr
 7051              		.cfi_endproc
 7052              	.LFE175:
 7054              		.section	.text.HAL_UART_GetError,"ax",%progbits
 7055              		.align	1
 7056              		.global	HAL_UART_GetError
 7057              		.syntax unified
 7058              		.thumb
 7059              		.thumb_func
 7061              	HAL_UART_GetError:
 7062              	.LFB176:
2963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
2966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
2969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(const UART_HandleTypeDef *huart)
2971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7063              		.loc 1 2971 1
 7064              		.cfi_startproc
 7065              		@ args = 0, pretend = 0, frame = 8
 7066              		@ frame_needed = 1, uses_anonymous_args = 0
 7067              		@ link register save eliminated.
 7068 0000 80B4     		push	{r7}
 7069              	.LCFI231:
 7070              		.cfi_def_cfa_offset 4
 7071              		.cfi_offset 7, -4
 7072 0002 83B0     		sub	sp, sp, #12
 7073              	.LCFI232:
 7074              		.cfi_def_cfa_offset 16
 7075 0004 00AF     		add	r7, sp, #0
 7076              	.LCFI233:
 7077              		.cfi_def_cfa_register 7
 7078 0006 7860     		str	r0, [r7, #4]
2972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 7079              		.loc 1 2972 15
 7080 0008 7B68     		ldr	r3, [r7, #4]
 7081 000a 5B6C     		ldr	r3, [r3, #68]
2973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7082              		.loc 1 2973 1
 7083 000c 1846     		mov	r0, r3
 7084 000e 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 188


 7085              	.LCFI234:
 7086              		.cfi_def_cfa_offset 4
 7087 0010 BD46     		mov	sp, r7
 7088              	.LCFI235:
 7089              		.cfi_def_cfa_register 13
 7090              		@ sp needed
 7091 0012 5DF8047B 		ldr	r7, [sp], #4
 7092              	.LCFI236:
 7093              		.cfi_restore 7
 7094              		.cfi_def_cfa_offset 0
 7095 0016 7047     		bx	lr
 7096              		.cfi_endproc
 7097              	.LFE176:
 7099              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 7100              		.align	1
 7101              		.syntax unified
 7102              		.thumb
 7103              		.thumb_func
 7105              	UART_DMATransmitCplt:
 7106              	.LFB177:
2974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval none
2991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Init the UART Callback settings */
2996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
3000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
3001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
3002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
3003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
3004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
3005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
3007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback.
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 189


3011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7107              		.loc 1 3016 1
 7108              		.cfi_startproc
 7109              		@ args = 0, pretend = 0, frame = 64
 7110              		@ frame_needed = 1, uses_anonymous_args = 0
 7111 0000 80B5     		push	{r7, lr}
 7112              	.LCFI237:
 7113              		.cfi_def_cfa_offset 8
 7114              		.cfi_offset 7, -8
 7115              		.cfi_offset 14, -4
 7116 0002 90B0     		sub	sp, sp, #64
 7117              	.LCFI238:
 7118              		.cfi_def_cfa_offset 72
 7119 0004 00AF     		add	r7, sp, #0
 7120              	.LCFI239:
 7121              		.cfi_def_cfa_register 7
 7122 0006 7860     		str	r0, [r7, #4]
3017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7123              		.loc 1 3017 23
 7124 0008 7B68     		ldr	r3, [r7, #4]
 7125 000a 9B6B     		ldr	r3, [r3, #56]
 7126 000c FB63     		str	r3, [r7, #60]
3018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
3019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 7127              		.loc 1 3019 12
 7128 000e 7B68     		ldr	r3, [r7, #4]
 7129 0010 1B68     		ldr	r3, [r3]
 7130              		.loc 1 3019 22
 7131 0012 1B68     		ldr	r3, [r3]
 7132              		.loc 1 3019 27
 7133 0014 03F48073 		and	r3, r3, #256
 7134              		.loc 1 3019 6
 7135 0018 002B     		cmp	r3, #0
 7136 001a 37D1     		bne	.L360
3020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 7137              		.loc 1 3021 24
 7138 001c FB6B     		ldr	r3, [r7, #60]
 7139 001e 0022     		movs	r2, #0
 7140 0020 DA84     		strh	r2, [r3, #38]	@ movhi
 7141              	.L363:
 7142              	.LBB549:
3022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
3024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
3025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 7143              		.loc 1 3025 5 discriminator 1
 7144 0022 FB6B     		ldr	r3, [r7, #60]
 7145 0024 1B68     		ldr	r3, [r3]
 7146 0026 1433     		adds	r3, r3, #20
 7147 0028 7B62     		str	r3, [r7, #36]
 7148              	.LBB550:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 190


 7149              	.LBB551:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7150              		.loc 2 480 4
 7151 002a 7B6A     		ldr	r3, [r7, #36]
 7152              		.syntax unified
 7153              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7154 002c 53E8003F 		ldrex r3, [r3]
 7155              	@ 0 "" 2
 7156              		.thumb
 7157              		.syntax unified
 7158 0030 3B62     		str	r3, [r7, #32]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7159              		.loc 2 481 10
 7160 0032 3B6A     		ldr	r3, [r7, #32]
 7161              	.LBE551:
 7162              	.LBE550:
 7163              		.loc 1 3025 5 discriminator 1
 7164 0034 23F08003 		bic	r3, r3, #128
 7165 0038 BB63     		str	r3, [r7, #56]
 7166 003a FB6B     		ldr	r3, [r7, #60]
 7167 003c 1B68     		ldr	r3, [r3]
 7168 003e 1433     		adds	r3, r3, #20
 7169 0040 BA6B     		ldr	r2, [r7, #56]
 7170 0042 3A63     		str	r2, [r7, #48]
 7171 0044 FB62     		str	r3, [r7, #44]
 7172              	.LBB552:
 7173              	.LBB553:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7174              		.loc 2 531 4
 7175 0046 F96A     		ldr	r1, [r7, #44]
 7176 0048 3A6B     		ldr	r2, [r7, #48]
 7177              		.syntax unified
 7178              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7179 004a 41E80023 		strex r3, r2, [r1]
 7180              	@ 0 "" 2
 7181              		.thumb
 7182              		.syntax unified
 7183 004e BB62     		str	r3, [r7, #40]
 7184              		.loc 2 532 10
 7185 0050 BB6A     		ldr	r3, [r7, #40]
 7186              	.LBE553:
 7187              	.LBE552:
 7188              		.loc 1 3025 5 discriminator 1
 7189 0052 002B     		cmp	r3, #0
 7190 0054 E5D1     		bne	.L363
 7191              	.L366:
 7192              	.LBE549:
 7193              	.LBB554:
3026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 7194              		.loc 1 3028 5 discriminator 1
 7195 0056 FB6B     		ldr	r3, [r7, #60]
 7196 0058 1B68     		ldr	r3, [r3]
 7197 005a 0C33     		adds	r3, r3, #12
 7198 005c 3B61     		str	r3, [r7, #16]
 7199              	.LBB555:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 191


 7200              	.LBB556:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7201              		.loc 2 480 4
 7202 005e 3B69     		ldr	r3, [r7, #16]
 7203              		.syntax unified
 7204              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7205 0060 53E8003F 		ldrex r3, [r3]
 7206              	@ 0 "" 2
 7207              		.thumb
 7208              		.syntax unified
 7209 0064 FB60     		str	r3, [r7, #12]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7210              		.loc 2 481 10
 7211 0066 FB68     		ldr	r3, [r7, #12]
 7212              	.LBE556:
 7213              	.LBE555:
 7214              		.loc 1 3028 5 discriminator 1
 7215 0068 43F04003 		orr	r3, r3, #64
 7216 006c 7B63     		str	r3, [r7, #52]
 7217 006e FB6B     		ldr	r3, [r7, #60]
 7218 0070 1B68     		ldr	r3, [r3]
 7219 0072 0C33     		adds	r3, r3, #12
 7220 0074 7A6B     		ldr	r2, [r7, #52]
 7221 0076 FA61     		str	r2, [r7, #28]
 7222 0078 BB61     		str	r3, [r7, #24]
 7223              	.LBB557:
 7224              	.LBB558:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7225              		.loc 2 531 4
 7226 007a B969     		ldr	r1, [r7, #24]
 7227 007c FA69     		ldr	r2, [r7, #28]
 7228              		.syntax unified
 7229              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7230 007e 41E80023 		strex r3, r2, [r1]
 7231              	@ 0 "" 2
 7232              		.thumb
 7233              		.syntax unified
 7234 0082 7B61     		str	r3, [r7, #20]
 7235              		.loc 2 532 10
 7236 0084 7B69     		ldr	r3, [r7, #20]
 7237              	.LBE558:
 7238              	.LBE557:
 7239              		.loc 1 3028 5 discriminator 1
 7240 0086 002B     		cmp	r3, #0
 7241 0088 E5D1     		bne	.L366
 7242              	.LBE554:
3029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
3032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 192


3040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7243              		.loc 1 3042 1
 7244 008a 02E0     		b	.L368
 7245              	.L360:
3039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7246              		.loc 1 3039 5
 7247 008c F86B     		ldr	r0, [r7, #60]
 7248 008e FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 7249              	.L368:
 7250              		.loc 1 3042 1
 7251 0092 00BF     		nop
 7252 0094 4037     		adds	r7, r7, #64
 7253              	.LCFI240:
 7254              		.cfi_def_cfa_offset 8
 7255 0096 BD46     		mov	sp, r7
 7256              	.LCFI241:
 7257              		.cfi_def_cfa_register 13
 7258              		@ sp needed
 7259 0098 80BD     		pop	{r7, pc}
 7260              		.cfi_endproc
 7261              	.LFE177:
 7263              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 7264              		.align	1
 7265              		.syntax unified
 7266              		.thumb
 7267              		.thumb_func
 7269              	UART_DMATxHalfCplt:
 7270              	.LFB178:
3043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
3046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7271              		.loc 1 3051 1
 7272              		.cfi_startproc
 7273              		@ args = 0, pretend = 0, frame = 16
 7274              		@ frame_needed = 1, uses_anonymous_args = 0
 7275 0000 80B5     		push	{r7, lr}
 7276              	.LCFI242:
 7277              		.cfi_def_cfa_offset 8
 7278              		.cfi_offset 7, -8
 7279              		.cfi_offset 14, -4
 7280 0002 84B0     		sub	sp, sp, #16
 7281              	.LCFI243:
 7282              		.cfi_def_cfa_offset 24
 7283 0004 00AF     		add	r7, sp, #0
 7284              	.LCFI244:
 7285              		.cfi_def_cfa_register 7
 7286 0006 7860     		str	r0, [r7, #4]
3052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7287              		.loc 1 3052 23
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 193


 7288 0008 7B68     		ldr	r3, [r7, #4]
 7289 000a 9B6B     		ldr	r3, [r3, #56]
 7290 000c FB60     		str	r3, [r7, #12]
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 7291              		.loc 1 3059 3
 7292 000e F868     		ldr	r0, [r7, #12]
 7293 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
3060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7294              		.loc 1 3061 1
 7295 0014 00BF     		nop
 7296 0016 1037     		adds	r7, r7, #16
 7297              	.LCFI245:
 7298              		.cfi_def_cfa_offset 8
 7299 0018 BD46     		mov	sp, r7
 7300              	.LCFI246:
 7301              		.cfi_def_cfa_register 13
 7302              		@ sp needed
 7303 001a 80BD     		pop	{r7, pc}
 7304              		.cfi_endproc
 7305              	.LFE178:
 7307              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 7308              		.align	1
 7309              		.syntax unified
 7310              		.thumb
 7311              		.thumb_func
 7313              	UART_DMAReceiveCplt:
 7314              	.LFB179:
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback.
3065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7315              		.loc 1 3070 1
 7316              		.cfi_startproc
 7317              		@ args = 0, pretend = 0, frame = 112
 7318              		@ frame_needed = 1, uses_anonymous_args = 0
 7319 0000 80B5     		push	{r7, lr}
 7320              	.LCFI247:
 7321              		.cfi_def_cfa_offset 8
 7322              		.cfi_offset 7, -8
 7323              		.cfi_offset 14, -4
 7324 0002 9CB0     		sub	sp, sp, #112
 7325              	.LCFI248:
 7326              		.cfi_def_cfa_offset 120
 7327 0004 00AF     		add	r7, sp, #0
 7328              	.LCFI249:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 194


 7329              		.cfi_def_cfa_register 7
 7330 0006 7860     		str	r0, [r7, #4]
3071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7331              		.loc 1 3071 23
 7332 0008 7B68     		ldr	r3, [r7, #4]
 7333 000a 9B6B     		ldr	r3, [r3, #56]
 7334 000c FB66     		str	r3, [r7, #108]
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
3074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 7335              		.loc 1 3074 12
 7336 000e 7B68     		ldr	r3, [r7, #4]
 7337 0010 1B68     		ldr	r3, [r3]
 7338              		.loc 1 3074 22
 7339 0012 1B68     		ldr	r3, [r3]
 7340              		.loc 1 3074 27
 7341 0014 03F48073 		and	r3, r3, #256
 7342              		.loc 1 3074 6
 7343 0018 002B     		cmp	r3, #0
 7344 001a 72D1     		bne	.L371
3075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 7345              		.loc 1 3076 24
 7346 001c FB6E     		ldr	r3, [r7, #108]
 7347 001e 0022     		movs	r2, #0
 7348 0020 DA85     		strh	r2, [r3, #46]	@ movhi
 7349              	.L374:
 7350              	.LBB559:
3077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 7351              		.loc 1 3079 5 discriminator 1
 7352 0022 FB6E     		ldr	r3, [r7, #108]
 7353 0024 1B68     		ldr	r3, [r3]
 7354 0026 0C33     		adds	r3, r3, #12
 7355 0028 FB64     		str	r3, [r7, #76]
 7356              	.LBB560:
 7357              	.LBB561:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7358              		.loc 2 480 4
 7359 002a FB6C     		ldr	r3, [r7, #76]
 7360              		.syntax unified
 7361              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7362 002c 53E8003F 		ldrex r3, [r3]
 7363              	@ 0 "" 2
 7364              		.thumb
 7365              		.syntax unified
 7366 0030 BB64     		str	r3, [r7, #72]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7367              		.loc 2 481 10
 7368 0032 BB6C     		ldr	r3, [r7, #72]
 7369              	.LBE561:
 7370              	.LBE560:
 7371              		.loc 1 3079 5 discriminator 1
 7372 0034 23F48073 		bic	r3, r3, #256
 7373 0038 BB66     		str	r3, [r7, #104]
 7374 003a FB6E     		ldr	r3, [r7, #108]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 195


 7375 003c 1B68     		ldr	r3, [r3]
 7376 003e 0C33     		adds	r3, r3, #12
 7377 0040 BA6E     		ldr	r2, [r7, #104]
 7378 0042 BA65     		str	r2, [r7, #88]
 7379 0044 7B65     		str	r3, [r7, #84]
 7380              	.LBB562:
 7381              	.LBB563:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7382              		.loc 2 531 4
 7383 0046 796D     		ldr	r1, [r7, #84]
 7384 0048 BA6D     		ldr	r2, [r7, #88]
 7385              		.syntax unified
 7386              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7387 004a 41E80023 		strex r3, r2, [r1]
 7388              	@ 0 "" 2
 7389              		.thumb
 7390              		.syntax unified
 7391 004e 3B65     		str	r3, [r7, #80]
 7392              		.loc 2 532 10
 7393 0050 3B6D     		ldr	r3, [r7, #80]
 7394              	.LBE563:
 7395              	.LBE562:
 7396              		.loc 1 3079 5 discriminator 1
 7397 0052 002B     		cmp	r3, #0
 7398 0054 E5D1     		bne	.L374
 7399              	.L377:
 7400              	.LBE559:
 7401              	.LBB564:
3080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7402              		.loc 1 3080 5 discriminator 1
 7403 0056 FB6E     		ldr	r3, [r7, #108]
 7404 0058 1B68     		ldr	r3, [r3]
 7405 005a 1433     		adds	r3, r3, #20
 7406 005c BB63     		str	r3, [r7, #56]
 7407              	.LBB565:
 7408              	.LBB566:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7409              		.loc 2 480 4
 7410 005e BB6B     		ldr	r3, [r7, #56]
 7411              		.syntax unified
 7412              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7413 0060 53E8003F 		ldrex r3, [r3]
 7414              	@ 0 "" 2
 7415              		.thumb
 7416              		.syntax unified
 7417 0064 7B63     		str	r3, [r7, #52]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7418              		.loc 2 481 10
 7419 0066 7B6B     		ldr	r3, [r7, #52]
 7420              	.LBE566:
 7421              	.LBE565:
 7422              		.loc 1 3080 5 discriminator 1
 7423 0068 23F00103 		bic	r3, r3, #1
 7424 006c 7B66     		str	r3, [r7, #100]
 7425 006e FB6E     		ldr	r3, [r7, #108]
 7426 0070 1B68     		ldr	r3, [r3]
 7427 0072 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 196


 7428 0074 7A6E     		ldr	r2, [r7, #100]
 7429 0076 7A64     		str	r2, [r7, #68]
 7430 0078 3B64     		str	r3, [r7, #64]
 7431              	.LBB567:
 7432              	.LBB568:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7433              		.loc 2 531 4
 7434 007a 396C     		ldr	r1, [r7, #64]
 7435 007c 7A6C     		ldr	r2, [r7, #68]
 7436              		.syntax unified
 7437              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7438 007e 41E80023 		strex r3, r2, [r1]
 7439              	@ 0 "" 2
 7440              		.thumb
 7441              		.syntax unified
 7442 0082 FB63     		str	r3, [r7, #60]
 7443              		.loc 2 532 10
 7444 0084 FB6B     		ldr	r3, [r7, #60]
 7445              	.LBE568:
 7446              	.LBE567:
 7447              		.loc 1 3080 5 discriminator 1
 7448 0086 002B     		cmp	r3, #0
 7449 0088 E5D1     		bne	.L377
 7450              	.L380:
 7451              	.LBE564:
 7452              	.LBB569:
3081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
3083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
3084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 7453              		.loc 1 3084 5 discriminator 1
 7454 008a FB6E     		ldr	r3, [r7, #108]
 7455 008c 1B68     		ldr	r3, [r3]
 7456 008e 1433     		adds	r3, r3, #20
 7457 0090 7B62     		str	r3, [r7, #36]
 7458              	.LBB570:
 7459              	.LBB571:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7460              		.loc 2 480 4
 7461 0092 7B6A     		ldr	r3, [r7, #36]
 7462              		.syntax unified
 7463              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7464 0094 53E8003F 		ldrex r3, [r3]
 7465              	@ 0 "" 2
 7466              		.thumb
 7467              		.syntax unified
 7468 0098 3B62     		str	r3, [r7, #32]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7469              		.loc 2 481 10
 7470 009a 3B6A     		ldr	r3, [r7, #32]
 7471              	.LBE571:
 7472              	.LBE570:
 7473              		.loc 1 3084 5 discriminator 1
 7474 009c 23F04003 		bic	r3, r3, #64
 7475 00a0 3B66     		str	r3, [r7, #96]
 7476 00a2 FB6E     		ldr	r3, [r7, #108]
 7477 00a4 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 197


 7478 00a6 1433     		adds	r3, r3, #20
 7479 00a8 3A6E     		ldr	r2, [r7, #96]
 7480 00aa 3A63     		str	r2, [r7, #48]
 7481 00ac FB62     		str	r3, [r7, #44]
 7482              	.LBB572:
 7483              	.LBB573:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7484              		.loc 2 531 4
 7485 00ae F96A     		ldr	r1, [r7, #44]
 7486 00b0 3A6B     		ldr	r2, [r7, #48]
 7487              		.syntax unified
 7488              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7489 00b2 41E80023 		strex r3, r2, [r1]
 7490              	@ 0 "" 2
 7491              		.thumb
 7492              		.syntax unified
 7493 00b6 BB62     		str	r3, [r7, #40]
 7494              		.loc 2 532 10
 7495 00b8 BB6A     		ldr	r3, [r7, #40]
 7496              	.LBE573:
 7497              	.LBE572:
 7498              		.loc 1 3084 5 discriminator 1
 7499 00ba 002B     		cmp	r3, #0
 7500 00bc E5D1     		bne	.L380
 7501              	.LBE569:
3085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 7502              		.loc 1 3087 20
 7503 00be FB6E     		ldr	r3, [r7, #108]
 7504 00c0 2022     		movs	r2, #32
 7505 00c2 83F84220 		strb	r2, [r3, #66]
3088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 7506              		.loc 1 3090 14
 7507 00c6 FB6E     		ldr	r3, [r7, #108]
 7508 00c8 1B6B     		ldr	r3, [r3, #48]
 7509              		.loc 1 3090 8
 7510 00ca 012B     		cmp	r3, #1
 7511 00cc 19D1     		bne	.L371
 7512              	.L383:
 7513              	.LBB574:
3091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 7514              		.loc 1 3092 7 discriminator 1
 7515 00ce FB6E     		ldr	r3, [r7, #108]
 7516 00d0 1B68     		ldr	r3, [r3]
 7517 00d2 0C33     		adds	r3, r3, #12
 7518 00d4 3B61     		str	r3, [r7, #16]
 7519              	.LBB575:
 7520              	.LBB576:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7521              		.loc 2 480 4
 7522 00d6 3B69     		ldr	r3, [r7, #16]
 7523              		.syntax unified
 7524              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 198


 7525 00d8 53E8003F 		ldrex r3, [r3]
 7526              	@ 0 "" 2
 7527              		.thumb
 7528              		.syntax unified
 7529 00dc FB60     		str	r3, [r7, #12]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7530              		.loc 2 481 10
 7531 00de FB68     		ldr	r3, [r7, #12]
 7532              	.LBE576:
 7533              	.LBE575:
 7534              		.loc 1 3092 7 discriminator 1
 7535 00e0 23F01003 		bic	r3, r3, #16
 7536 00e4 FB65     		str	r3, [r7, #92]
 7537 00e6 FB6E     		ldr	r3, [r7, #108]
 7538 00e8 1B68     		ldr	r3, [r3]
 7539 00ea 0C33     		adds	r3, r3, #12
 7540 00ec FA6D     		ldr	r2, [r7, #92]
 7541 00ee FA61     		str	r2, [r7, #28]
 7542 00f0 BB61     		str	r3, [r7, #24]
 7543              	.LBB577:
 7544              	.LBB578:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7545              		.loc 2 531 4
 7546 00f2 B969     		ldr	r1, [r7, #24]
 7547 00f4 FA69     		ldr	r2, [r7, #28]
 7548              		.syntax unified
 7549              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7550 00f6 41E80023 		strex r3, r2, [r1]
 7551              	@ 0 "" 2
 7552              		.thumb
 7553              		.syntax unified
 7554 00fa 7B61     		str	r3, [r7, #20]
 7555              		.loc 2 532 10
 7556 00fc 7B69     		ldr	r3, [r7, #20]
 7557              	.LBE578:
 7558              	.LBE577:
 7559              		.loc 1 3092 7 discriminator 1
 7560 00fe 002B     		cmp	r3, #0
 7561 0100 E5D1     		bne	.L383
 7562              	.L371:
 7563              	.LBE574:
3093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize type of RxEvent that correspond to RxEvent callback execution;
3097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    In this case, Rx Event type is Transfer Complete */
3098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_TC;
 7564              		.loc 1 3098 22
 7565 0102 FB6E     		ldr	r3, [r7, #108]
 7566 0104 0022     		movs	r2, #0
 7567 0106 5A63     		str	r2, [r3, #52]
3099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check current reception Mode :
3101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 7568              		.loc 1 3102 12
 7569 0108 FB6E     		ldr	r3, [r7, #108]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 199


 7570 010a 1B6B     		ldr	r3, [r3, #48]
 7571              		.loc 1 3102 6
 7572 010c 012B     		cmp	r3, #1
 7573 010e 06D1     		bne	.L384
3103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
3107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 7574              		.loc 1 3109 5
 7575 0110 FB6E     		ldr	r3, [r7, #108]
 7576 0112 9B8D     		ldrh	r3, [r3, #44]
 7577 0114 1946     		mov	r1, r3
 7578 0116 F86E     		ldr	r0, [r7, #108]
 7579 0118 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7580              		.loc 1 3123 1
 7581 011c 02E0     		b	.L386
 7582              	.L384:
3120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7583              		.loc 1 3120 5
 7584 011e F86E     		ldr	r0, [r7, #108]
 7585 0120 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 7586              	.L386:
 7587              		.loc 1 3123 1
 7588 0124 00BF     		nop
 7589 0126 7037     		adds	r7, r7, #112
 7590              	.LCFI250:
 7591              		.cfi_def_cfa_offset 8
 7592 0128 BD46     		mov	sp, r7
 7593              	.LCFI251:
 7594              		.cfi_def_cfa_register 13
 7595              		@ sp needed
 7596 012a 80BD     		pop	{r7, pc}
 7597              		.cfi_endproc
 7598              	.LFE179:
 7600              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 7601              		.align	1
 7602              		.syntax unified
 7603              		.thumb
 7604              		.thumb_func
 7606              	UART_DMARxHalfCplt:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 200


 7607              	.LFB180:
3124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
3127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7608              		.loc 1 3132 1
 7609              		.cfi_startproc
 7610              		@ args = 0, pretend = 0, frame = 16
 7611              		@ frame_needed = 1, uses_anonymous_args = 0
 7612 0000 80B5     		push	{r7, lr}
 7613              	.LCFI252:
 7614              		.cfi_def_cfa_offset 8
 7615              		.cfi_offset 7, -8
 7616              		.cfi_offset 14, -4
 7617 0002 84B0     		sub	sp, sp, #16
 7618              	.LCFI253:
 7619              		.cfi_def_cfa_offset 24
 7620 0004 00AF     		add	r7, sp, #0
 7621              	.LCFI254:
 7622              		.cfi_def_cfa_register 7
 7623 0006 7860     		str	r0, [r7, #4]
3133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7624              		.loc 1 3133 23
 7625 0008 7B68     		ldr	r3, [r7, #4]
 7626 000a 9B6B     		ldr	r3, [r3, #56]
 7627 000c FB60     		str	r3, [r7, #12]
3134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize type of RxEvent that correspond to RxEvent callback execution;
3136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      In this case, Rx Event type is Half Transfer */
3137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventType = HAL_UART_RXEVENT_HT;
 7628              		.loc 1 3137 22
 7629 000e FB68     		ldr	r3, [r7, #12]
 7630 0010 0122     		movs	r2, #1
 7631 0012 5A63     		str	r2, [r3, #52]
3138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check current reception Mode :
3140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 7632              		.loc 1 3141 12
 7633 0014 FB68     		ldr	r3, [r7, #12]
 7634 0016 1B6B     		ldr	r3, [r3, #48]
 7635              		.loc 1 3141 6
 7636 0018 012B     		cmp	r3, #1
 7637 001a 08D1     		bne	.L388
3142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize / 2U);
3146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize / 2U);
 7638              		.loc 1 3148 44
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 201


 7639 001c FB68     		ldr	r3, [r7, #12]
 7640 001e 9B8D     		ldrh	r3, [r3, #44]
 7641              		.loc 1 3148 5
 7642 0020 5B08     		lsrs	r3, r3, #1
 7643 0022 9BB2     		uxth	r3, r3
 7644 0024 1946     		mov	r1, r3
 7645 0026 F868     		ldr	r0, [r7, #12]
 7646 0028 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7647              		.loc 1 3162 1
 7648 002c 02E0     		b	.L390
 7649              	.L388:
3159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7650              		.loc 1 3159 5
 7651 002e F868     		ldr	r0, [r7, #12]
 7652 0030 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 7653              	.L390:
 7654              		.loc 1 3162 1
 7655 0034 00BF     		nop
 7656 0036 1037     		adds	r7, r7, #16
 7657              	.LCFI255:
 7658              		.cfi_def_cfa_offset 8
 7659 0038 BD46     		mov	sp, r7
 7660              	.LCFI256:
 7661              		.cfi_def_cfa_register 13
 7662              		@ sp needed
 7663 003a 80BD     		pop	{r7, pc}
 7664              		.cfi_endproc
 7665              	.LFE180:
 7667              		.section	.text.UART_DMAError,"ax",%progbits
 7668              		.align	1
 7669              		.syntax unified
 7670              		.thumb
 7671              		.thumb_func
 7673              	UART_DMAError:
 7674              	.LFB181:
3163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
3166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 202


3171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7675              		.loc 1 3171 1
 7676              		.cfi_startproc
 7677              		@ args = 0, pretend = 0, frame = 16
 7678              		@ frame_needed = 1, uses_anonymous_args = 0
 7679 0000 80B5     		push	{r7, lr}
 7680              	.LCFI257:
 7681              		.cfi_def_cfa_offset 8
 7682              		.cfi_offset 7, -8
 7683              		.cfi_offset 14, -4
 7684 0002 84B0     		sub	sp, sp, #16
 7685              	.LCFI258:
 7686              		.cfi_def_cfa_offset 24
 7687 0004 00AF     		add	r7, sp, #0
 7688              	.LCFI259:
 7689              		.cfi_def_cfa_register 7
 7690 0006 7860     		str	r0, [r7, #4]
3172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 7691              		.loc 1 3172 12
 7692 0008 0023     		movs	r3, #0
 7693 000a FB60     		str	r3, [r7, #12]
3173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7694              		.loc 1 3173 23
 7695 000c 7B68     		ldr	r3, [r7, #4]
 7696 000e 9B6B     		ldr	r3, [r3, #56]
 7697 0010 BB60     		str	r3, [r7, #8]
3174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 7698              		.loc 1 3176 16
 7699 0012 BB68     		ldr	r3, [r7, #8]
 7700 0014 1B68     		ldr	r3, [r3]
 7701 0016 5B69     		ldr	r3, [r3, #20]
 7702 0018 03F08003 		and	r3, r3, #128
 7703 001c 802B     		cmp	r3, #128
 7704 001e 0CBF     		ite	eq
 7705 0020 0123     		moveq	r3, #1
 7706 0022 0023     		movne	r3, #0
 7707 0024 DBB2     		uxtb	r3, r3
 7708              		.loc 1 3176 14
 7709 0026 FB60     		str	r3, [r7, #12]
3177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 7710              		.loc 1 3177 13
 7711 0028 BB68     		ldr	r3, [r7, #8]
 7712 002a 93F84130 		ldrb	r3, [r3, #65]
 7713 002e DBB2     		uxtb	r3, r3
 7714              		.loc 1 3177 6
 7715 0030 212B     		cmp	r3, #33
 7716 0032 08D1     		bne	.L392
 7717              		.loc 1 3177 49 discriminator 1
 7718 0034 FB68     		ldr	r3, [r7, #12]
 7719 0036 002B     		cmp	r3, #0
 7720 0038 05D0     		beq	.L392
3178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 7721              		.loc 1 3179 24
 7722 003a BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 203


 7723 003c 0022     		movs	r2, #0
 7724 003e DA84     		strh	r2, [r3, #38]	@ movhi
3180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 7725              		.loc 1 3180 5
 7726 0040 B868     		ldr	r0, [r7, #8]
 7727 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 7728              	.L392:
3181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 7729              		.loc 1 3184 16
 7730 0046 BB68     		ldr	r3, [r7, #8]
 7731 0048 1B68     		ldr	r3, [r3]
 7732 004a 5B69     		ldr	r3, [r3, #20]
 7733 004c 03F04003 		and	r3, r3, #64
 7734 0050 402B     		cmp	r3, #64
 7735 0052 0CBF     		ite	eq
 7736 0054 0123     		moveq	r3, #1
 7737 0056 0023     		movne	r3, #0
 7738 0058 DBB2     		uxtb	r3, r3
 7739              		.loc 1 3184 14
 7740 005a FB60     		str	r3, [r7, #12]
3185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 7741              		.loc 1 3185 13
 7742 005c BB68     		ldr	r3, [r7, #8]
 7743 005e 93F84230 		ldrb	r3, [r3, #66]
 7744 0062 DBB2     		uxtb	r3, r3
 7745              		.loc 1 3185 6
 7746 0064 222B     		cmp	r3, #34
 7747 0066 08D1     		bne	.L393
 7748              		.loc 1 3185 50 discriminator 1
 7749 0068 FB68     		ldr	r3, [r7, #12]
 7750 006a 002B     		cmp	r3, #0
 7751 006c 05D0     		beq	.L393
3186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 7752              		.loc 1 3187 24
 7753 006e BB68     		ldr	r3, [r7, #8]
 7754 0070 0022     		movs	r2, #0
 7755 0072 DA85     		strh	r2, [r3, #46]	@ movhi
3188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 7756              		.loc 1 3188 5
 7757 0074 B868     		ldr	r0, [r7, #8]
 7758 0076 FFF7FEFF 		bl	UART_EndRxTransfer
 7759              	.L393:
3189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 7760              		.loc 1 3191 8
 7761 007a BB68     		ldr	r3, [r7, #8]
 7762 007c 5B6C     		ldr	r3, [r3, #68]
 7763              		.loc 1 3191 20
 7764 007e 43F01002 		orr	r2, r3, #16
 7765 0082 BB68     		ldr	r3, [r7, #8]
 7766 0084 5A64     		str	r2, [r3, #68]
3192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 204


3193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
3194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 7767              		.loc 1 3197 3
 7768 0086 B868     		ldr	r0, [r7, #8]
 7769 0088 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7770              		.loc 1 3199 1
 7771 008c 00BF     		nop
 7772 008e 1037     		adds	r7, r7, #16
 7773              	.LCFI260:
 7774              		.cfi_def_cfa_offset 8
 7775 0090 BD46     		mov	sp, r7
 7776              	.LCFI261:
 7777              		.cfi_def_cfa_register 13
 7778              		@ sp needed
 7779 0092 80BD     		pop	{r7, pc}
 7780              		.cfi_endproc
 7781              	.LFE181:
 7783              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 7784              		.align	1
 7785              		.syntax unified
 7786              		.thumb
 7787              		.thumb_func
 7789              	UART_WaitOnFlagUntilTimeout:
 7790              	.LFB182:
3200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout. It waits
3203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         until a flag is no longer in the specified status.
3204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
3207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status The actual Flag status (SET or RESET).
3208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
3209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
3210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
3213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                      uint32_t Tickstart, uint32_t Timeout)
3214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7791              		.loc 1 3214 1
 7792              		.cfi_startproc
 7793              		@ args = 4, pretend = 0, frame = 24
 7794              		@ frame_needed = 1, uses_anonymous_args = 0
 7795 0000 80B5     		push	{r7, lr}
 7796              	.LCFI262:
 7797              		.cfi_def_cfa_offset 8
 7798              		.cfi_offset 7, -8
 7799              		.cfi_offset 14, -4
 7800 0002 86B0     		sub	sp, sp, #24
 7801              	.LCFI263:
 7802              		.cfi_def_cfa_offset 32
 7803 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 205


 7804              	.LCFI264:
 7805              		.cfi_def_cfa_register 7
 7806 0006 F860     		str	r0, [r7, #12]
 7807 0008 B960     		str	r1, [r7, #8]
 7808 000a 3B60     		str	r3, [r7]
 7809 000c 1346     		mov	r3, r2
 7810 000e FB71     		strb	r3, [r7, #7]
3215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
3216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 7811              		.loc 1 3216 9
 7812 0010 3BE0     		b	.L396
 7813              	.L401:
3217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
3219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 7814              		.loc 1 3219 8
 7815 0012 3B6A     		ldr	r3, [r7, #32]
 7816 0014 B3F1FF3F 		cmp	r3, #-1
 7817 0018 37D0     		beq	.L396
3220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 7818              		.loc 1 3221 13
 7819 001a FFF7FEFF 		bl	HAL_GetTick
 7820 001e 0246     		mov	r2, r0
 7821              		.loc 1 3221 27 discriminator 1
 7822 0020 3B68     		ldr	r3, [r7]
 7823 0022 D31A     		subs	r3, r2, r3
 7824              		.loc 1 3221 10 discriminator 1
 7825 0024 3A6A     		ldr	r2, [r7, #32]
 7826 0026 9A42     		cmp	r2, r3
 7827 0028 02D3     		bcc	.L397
 7828              		.loc 1 3221 51 discriminator 1
 7829 002a 3B6A     		ldr	r3, [r7, #32]
 7830 002c 002B     		cmp	r3, #0
 7831 002e 01D1     		bne	.L398
 7832              	.L397:
3222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 7833              		.loc 1 3224 16
 7834 0030 0323     		movs	r3, #3
 7835 0032 3AE0     		b	.L399
 7836              	.L398:
3225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag 
 7837              		.loc 1 3227 12
 7838 0034 FB68     		ldr	r3, [r7, #12]
 7839 0036 1B68     		ldr	r3, [r3]
 7840 0038 DB68     		ldr	r3, [r3, #12]
 7841 003a 03F00403 		and	r3, r3, #4
 7842              		.loc 1 3227 10
 7843 003e 002B     		cmp	r3, #0
 7844 0040 23D0     		beq	.L396
 7845              		.loc 1 3227 64 discriminator 1
 7846 0042 BB68     		ldr	r3, [r7, #8]
 7847 0044 802B     		cmp	r3, #128
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 206


 7848 0046 20D0     		beq	.L396
 7849              		.loc 1 3227 91 discriminator 2
 7850 0048 BB68     		ldr	r3, [r7, #8]
 7851 004a 402B     		cmp	r3, #64
 7852 004c 1DD0     		beq	.L396
3228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 7853              		.loc 1 3229 13
 7854 004e FB68     		ldr	r3, [r7, #12]
 7855 0050 1B68     		ldr	r3, [r3]
 7856 0052 1B68     		ldr	r3, [r3]
 7857 0054 03F00803 		and	r3, r3, #8
 7858              		.loc 1 3229 12
 7859 0058 082B     		cmp	r3, #8
 7860 005a 16D1     		bne	.L396
 7861              	.LBB579:
3230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
3231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Clear Overrun Error flag*/
3232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UART_CLEAR_OREFLAG(huart);
 7862              		.loc 1 3232 11
 7863 005c 0023     		movs	r3, #0
 7864 005e 7B61     		str	r3, [r7, #20]
 7865 0060 FB68     		ldr	r3, [r7, #12]
 7866 0062 1B68     		ldr	r3, [r3]
 7867 0064 1B68     		ldr	r3, [r3]
 7868 0066 7B61     		str	r3, [r7, #20]
 7869 0068 FB68     		ldr	r3, [r7, #12]
 7870 006a 1B68     		ldr	r3, [r3]
 7871 006c 5B68     		ldr	r3, [r3, #4]
 7872 006e 7B61     		str	r3, [r7, #20]
 7873 0070 7B69     		ldr	r3, [r7, #20]
 7874              	.LBE579:
3233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Blocking error : transfer is aborted
3235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           Set the UART state ready to be able to start again the process,
3236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           Disable Rx Interrupts if ongoing */
3237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           UART_EndRxTransfer(huart);
 7875              		.loc 1 3237 11
 7876 0072 F868     		ldr	r0, [r7, #12]
 7877 0074 FFF7FEFF 		bl	UART_EndRxTransfer
3238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_ORE;
 7878              		.loc 1 3239 28
 7879 0078 FB68     		ldr	r3, [r7, #12]
 7880 007a 0822     		movs	r2, #8
 7881 007c 5A64     		str	r2, [r3, #68]
3240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Process Unlocked */
3242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UNLOCK(huart);
 7882              		.loc 1 3242 11
 7883 007e FB68     		ldr	r3, [r7, #12]
 7884 0080 0022     		movs	r2, #0
 7885 0082 83F84020 		strb	r2, [r3, #64]
3243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_ERROR;
 7886              		.loc 1 3244 18
 7887 0086 0123     		movs	r3, #1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 207


 7888 0088 0FE0     		b	.L399
 7889              	.L396:
3216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 7890              		.loc 1 3216 11
 7891 008a FB68     		ldr	r3, [r7, #12]
 7892 008c 1B68     		ldr	r3, [r3]
 7893 008e 1A68     		ldr	r2, [r3]
 7894 0090 BB68     		ldr	r3, [r7, #8]
 7895 0092 1340     		ands	r3, r3, r2
3216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 7896              		.loc 1 3216 50
 7897 0094 BA68     		ldr	r2, [r7, #8]
 7898 0096 9A42     		cmp	r2, r3
 7899 0098 0CBF     		ite	eq
 7900 009a 0123     		moveq	r3, #1
 7901 009c 0023     		movne	r3, #0
 7902 009e DBB2     		uxtb	r3, r3
 7903 00a0 1A46     		mov	r2, r3
3216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 7904              		.loc 1 3216 59
 7905 00a2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7906 00a4 9A42     		cmp	r2, r3
 7907 00a6 B4D0     		beq	.L401
3245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
3246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 7908              		.loc 1 3249 10
 7909 00a8 0023     		movs	r3, #0
 7910              	.L399:
3250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7911              		.loc 1 3250 1
 7912 00aa 1846     		mov	r0, r3
 7913 00ac 1837     		adds	r7, r7, #24
 7914              	.LCFI265:
 7915              		.cfi_def_cfa_offset 8
 7916 00ae BD46     		mov	sp, r7
 7917              	.LCFI266:
 7918              		.cfi_def_cfa_register 13
 7919              		@ sp needed
 7920 00b0 80BD     		pop	{r7, pc}
 7921              		.cfi_endproc
 7922              	.LFE182:
 7924              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 7925              		.align	1
 7926              		.global	UART_Start_Receive_IT
 7927              		.syntax unified
 7928              		.thumb
 7929              		.thumb_func
 7931              	UART_Start_Receive_IT:
 7932              	.LFB183:
3251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 208


3256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7933              		.loc 1 3264 1
 7934              		.cfi_startproc
 7935              		@ args = 0, pretend = 0, frame = 16
 7936              		@ frame_needed = 1, uses_anonymous_args = 0
 7937              		@ link register save eliminated.
 7938 0000 80B4     		push	{r7}
 7939              	.LCFI267:
 7940              		.cfi_def_cfa_offset 4
 7941              		.cfi_offset 7, -4
 7942 0002 85B0     		sub	sp, sp, #20
 7943              	.LCFI268:
 7944              		.cfi_def_cfa_offset 24
 7945 0004 00AF     		add	r7, sp, #0
 7946              	.LCFI269:
 7947              		.cfi_def_cfa_register 7
 7948 0006 F860     		str	r0, [r7, #12]
 7949 0008 B960     		str	r1, [r7, #8]
 7950 000a 1346     		mov	r3, r2
 7951 000c FB80     		strh	r3, [r7, #6]	@ movhi
3265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 7952              		.loc 1 3265 21
 7953 000e FB68     		ldr	r3, [r7, #12]
 7954 0010 BA68     		ldr	r2, [r7, #8]
 7955 0012 9A62     		str	r2, [r3, #40]
3266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferSize = Size;
 7956              		.loc 1 3266 21
 7957 0014 FB68     		ldr	r3, [r7, #12]
 7958 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 7959 0018 9A85     		strh	r2, [r3, #44]	@ movhi
3267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = Size;
 7960              		.loc 1 3267 22
 7961 001a FB68     		ldr	r3, [r7, #12]
 7962 001c FA88     		ldrh	r2, [r7, #6]	@ movhi
 7963 001e DA85     		strh	r2, [r3, #46]	@ movhi
3268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 7964              		.loc 1 3269 20
 7965 0020 FB68     		ldr	r3, [r7, #12]
 7966 0022 0022     		movs	r2, #0
 7967 0024 5A64     		str	r2, [r3, #68]
3270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 7968              		.loc 1 3270 18
 7969 0026 FB68     		ldr	r3, [r7, #12]
 7970 0028 2222     		movs	r2, #34
 7971 002a 83F84220 		strb	r2, [r3, #66]
3271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
 7972              		.loc 1 3272 18
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 209


 7973 002e FB68     		ldr	r3, [r7, #12]
 7974 0030 1B69     		ldr	r3, [r3, #16]
 7975              		.loc 1 3272 6
 7976 0032 002B     		cmp	r3, #0
 7977 0034 07D0     		beq	.L403
3273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
3275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
 7978              		.loc 1 3275 5
 7979 0036 FB68     		ldr	r3, [r7, #12]
 7980 0038 1B68     		ldr	r3, [r3]
 7981 003a DA68     		ldr	r2, [r3, #12]
 7982 003c FB68     		ldr	r3, [r7, #12]
 7983 003e 1B68     		ldr	r3, [r3]
 7984 0040 42F48072 		orr	r2, r2, #256
 7985 0044 DA60     		str	r2, [r3, #12]
 7986              	.L403:
3276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 7987              		.loc 1 3279 3
 7988 0046 FB68     		ldr	r3, [r7, #12]
 7989 0048 1B68     		ldr	r3, [r3]
 7990 004a 5A69     		ldr	r2, [r3, #20]
 7991 004c FB68     		ldr	r3, [r7, #12]
 7992 004e 1B68     		ldr	r3, [r3]
 7993 0050 42F00102 		orr	r2, r2, #1
 7994 0054 5A61     		str	r2, [r3, #20]
3280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Data Register not empty Interrupt */
3282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 7995              		.loc 1 3282 3
 7996 0056 FB68     		ldr	r3, [r7, #12]
 7997 0058 1B68     		ldr	r3, [r3]
 7998 005a DA68     		ldr	r2, [r3, #12]
 7999 005c FB68     		ldr	r3, [r7, #12]
 8000 005e 1B68     		ldr	r3, [r3]
 8001 0060 42F02002 		orr	r2, r2, #32
 8002 0064 DA60     		str	r2, [r3, #12]
3283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 8003              		.loc 1 3284 10
 8004 0066 0023     		movs	r3, #0
3285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8005              		.loc 1 3285 1
 8006 0068 1846     		mov	r0, r3
 8007 006a 1437     		adds	r7, r7, #20
 8008              	.LCFI270:
 8009              		.cfi_def_cfa_offset 4
 8010 006c BD46     		mov	sp, r7
 8011              	.LCFI271:
 8012              		.cfi_def_cfa_register 13
 8013              		@ sp needed
 8014 006e 5DF8047B 		ldr	r7, [sp], #4
 8015              	.LCFI272:
 8016              		.cfi_restore 7
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 210


 8017              		.cfi_def_cfa_offset 0
 8018 0072 7047     		bx	lr
 8019              		.cfi_endproc
 8020              	.LFE183:
 8022              		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 8023              		.align	1
 8024              		.global	UART_Start_Receive_DMA
 8025              		.syntax unified
 8026              		.thumb
 8027              		.thumb_func
 8029              	UART_Start_Receive_DMA:
 8030              	.LFB184:
3286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8031              		.loc 1 3299 1
 8032              		.cfi_startproc
 8033              		@ args = 0, pretend = 0, frame = 96
 8034              		@ frame_needed = 1, uses_anonymous_args = 0
 8035 0000 80B5     		push	{r7, lr}
 8036              	.LCFI273:
 8037              		.cfi_def_cfa_offset 8
 8038              		.cfi_offset 7, -8
 8039              		.cfi_offset 14, -4
 8040 0002 98B0     		sub	sp, sp, #96
 8041              	.LCFI274:
 8042              		.cfi_def_cfa_offset 104
 8043 0004 00AF     		add	r7, sp, #0
 8044              	.LCFI275:
 8045              		.cfi_def_cfa_register 7
 8046 0006 F860     		str	r0, [r7, #12]
 8047 0008 B960     		str	r1, [r7, #8]
 8048 000a 1346     		mov	r3, r2
 8049 000c FB80     		strh	r3, [r7, #6]	@ movhi
3300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
3301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 8050              		.loc 1 3302 21
 8051 000e BA68     		ldr	r2, [r7, #8]
 8052 0010 FB68     		ldr	r3, [r7, #12]
 8053 0012 9A62     		str	r2, [r3, #40]
3303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferSize = Size;
 8054              		.loc 1 3303 21
 8055 0014 FB68     		ldr	r3, [r7, #12]
 8056 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 8057 0018 9A85     		strh	r2, [r3, #44]	@ movhi
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 211


3304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8058              		.loc 1 3305 20
 8059 001a FB68     		ldr	r3, [r7, #12]
 8060 001c 0022     		movs	r2, #0
 8061 001e 5A64     		str	r2, [r3, #68]
3306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 8062              		.loc 1 3306 18
 8063 0020 FB68     		ldr	r3, [r7, #12]
 8064 0022 2222     		movs	r2, #34
 8065 0024 83F84220 		strb	r2, [r3, #66]
3307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART DMA transfer complete callback */
3309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 8066              		.loc 1 3309 8
 8067 0028 FB68     		ldr	r3, [r7, #12]
 8068 002a DB6B     		ldr	r3, [r3, #60]
 8069              		.loc 1 3309 35
 8070 002c 444A     		ldr	r2, .L418
 8071 002e DA63     		str	r2, [r3, #60]
3310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART DMA Half transfer complete callback */
3312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 8072              		.loc 1 3312 8
 8073 0030 FB68     		ldr	r3, [r7, #12]
 8074 0032 DB6B     		ldr	r3, [r3, #60]
 8075              		.loc 1 3312 39
 8076 0034 434A     		ldr	r2, .L418+4
 8077 0036 1A64     		str	r2, [r3, #64]
3313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the DMA error callback */
3315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferErrorCallback = UART_DMAError;
 8078              		.loc 1 3315 8
 8079 0038 FB68     		ldr	r3, [r7, #12]
 8080 003a DB6B     		ldr	r3, [r3, #60]
 8081              		.loc 1 3315 36
 8082 003c 424A     		ldr	r2, .L418+8
 8083 003e DA64     		str	r2, [r3, #76]
3316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the DMA abort callback */
3318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 8084              		.loc 1 3318 8
 8085 0040 FB68     		ldr	r3, [r7, #12]
 8086 0042 DB6B     		ldr	r3, [r3, #60]
 8087              		.loc 1 3318 36
 8088 0044 0022     		movs	r2, #0
 8089 0046 1A65     		str	r2, [r3, #80]
3319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the DMA stream */
3321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp = (uint32_t *)&pData;
 8090              		.loc 1 3321 7
 8091 0048 07F10803 		add	r3, r7, #8
 8092 004c FB65     		str	r3, [r7, #92]
3322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size) != HA
 8093              		.loc 1 3322 7
 8094 004e FB68     		ldr	r3, [r7, #12]
 8095 0050 D86B     		ldr	r0, [r3, #60]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 212


 8096              		.loc 1 3322 55
 8097 0052 FB68     		ldr	r3, [r7, #12]
 8098 0054 1B68     		ldr	r3, [r3]
 8099              		.loc 1 3322 49
 8100 0056 0433     		adds	r3, r3, #4
 8101              		.loc 1 3322 7
 8102 0058 1946     		mov	r1, r3
 8103 005a FB6D     		ldr	r3, [r7, #92]
 8104 005c 1A68     		ldr	r2, [r3]
 8105 005e FB88     		ldrh	r3, [r7, #6]
 8106 0060 FFF7FEFF 		bl	HAL_DMA_Start_IT
 8107 0064 0346     		mov	r3, r0
 8108              		.loc 1 3322 6 discriminator 1
 8109 0066 002B     		cmp	r3, #0
 8110 0068 08D0     		beq	.L406
3323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set error code to DMA */
3325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_DMA;
 8111              		.loc 1 3325 22
 8112 006a FB68     		ldr	r3, [r7, #12]
 8113 006c 1022     		movs	r2, #16
 8114 006e 5A64     		str	r2, [r3, #68]
3326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to ready */
3328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 8115              		.loc 1 3328 20
 8116 0070 FB68     		ldr	r3, [r7, #12]
 8117 0072 2022     		movs	r2, #32
 8118 0074 83F84220 		strb	r2, [r3, #66]
3329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 8119              		.loc 1 3330 12
 8120 0078 0123     		movs	r3, #1
 8121 007a 5DE0     		b	.L407
 8122              	.L406:
 8123              	.LBB580:
3331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the secon
3333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_CLEAR_OREFLAG(huart);
 8124              		.loc 1 3333 3
 8125 007c 0023     		movs	r3, #0
 8126 007e 3B61     		str	r3, [r7, #16]
 8127 0080 FB68     		ldr	r3, [r7, #12]
 8128 0082 1B68     		ldr	r3, [r3]
 8129 0084 1B68     		ldr	r3, [r3]
 8130 0086 3B61     		str	r3, [r7, #16]
 8131 0088 FB68     		ldr	r3, [r7, #12]
 8132 008a 1B68     		ldr	r3, [r3]
 8133 008c 5B68     		ldr	r3, [r3, #4]
 8134 008e 3B61     		str	r3, [r7, #16]
 8135 0090 3B69     		ldr	r3, [r7, #16]
 8136              	.LBE580:
3334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.Parity != UART_PARITY_NONE)
 8137              		.loc 1 3335 18
 8138 0092 FB68     		ldr	r3, [r7, #12]
 8139 0094 1B69     		ldr	r3, [r3, #16]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 213


 8140              		.loc 1 3335 6
 8141 0096 002B     		cmp	r3, #0
 8142 0098 19D0     		beq	.L414
 8143              	.L411:
 8144              	.LBB581:
3336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
3338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8145              		.loc 1 3338 5 discriminator 1
 8146 009a FB68     		ldr	r3, [r7, #12]
 8147 009c 1B68     		ldr	r3, [r3]
 8148 009e 0C33     		adds	r3, r3, #12
 8149 00a0 3B64     		str	r3, [r7, #64]
 8150              	.LBB582:
 8151              	.LBB583:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8152              		.loc 2 480 4
 8153 00a2 3B6C     		ldr	r3, [r7, #64]
 8154              		.syntax unified
 8155              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8156 00a4 53E8003F 		ldrex r3, [r3]
 8157              	@ 0 "" 2
 8158              		.thumb
 8159              		.syntax unified
 8160 00a8 FB63     		str	r3, [r7, #60]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8161              		.loc 2 481 10
 8162 00aa FB6B     		ldr	r3, [r7, #60]
 8163              	.LBE583:
 8164              	.LBE582:
 8165              		.loc 1 3338 5 discriminator 1
 8166 00ac 43F48073 		orr	r3, r3, #256
 8167 00b0 BB65     		str	r3, [r7, #88]
 8168 00b2 FB68     		ldr	r3, [r7, #12]
 8169 00b4 1B68     		ldr	r3, [r3]
 8170 00b6 0C33     		adds	r3, r3, #12
 8171 00b8 BA6D     		ldr	r2, [r7, #88]
 8172 00ba FA64     		str	r2, [r7, #76]
 8173 00bc BB64     		str	r3, [r7, #72]
 8174              	.LBB584:
 8175              	.LBB585:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8176              		.loc 2 531 4
 8177 00be B96C     		ldr	r1, [r7, #72]
 8178 00c0 FA6C     		ldr	r2, [r7, #76]
 8179              		.syntax unified
 8180              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8181 00c2 41E80023 		strex r3, r2, [r1]
 8182              	@ 0 "" 2
 8183              		.thumb
 8184              		.syntax unified
 8185 00c6 7B64     		str	r3, [r7, #68]
 8186              		.loc 2 532 10
 8187 00c8 7B6C     		ldr	r3, [r7, #68]
 8188              	.LBE585:
 8189              	.LBE584:
 8190              		.loc 1 3338 5 discriminator 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 214


 8191 00ca 002B     		cmp	r3, #0
 8192 00cc E5D1     		bne	.L411
 8193              	.L414:
 8194              	.LBE581:
 8195              	.LBB586:
3339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8196              		.loc 1 3342 3 discriminator 1
 8197 00ce FB68     		ldr	r3, [r7, #12]
 8198 00d0 1B68     		ldr	r3, [r3]
 8199 00d2 1433     		adds	r3, r3, #20
 8200 00d4 FB62     		str	r3, [r7, #44]
 8201              	.LBB587:
 8202              	.LBB588:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8203              		.loc 2 480 4
 8204 00d6 FB6A     		ldr	r3, [r7, #44]
 8205              		.syntax unified
 8206              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8207 00d8 53E8003F 		ldrex r3, [r3]
 8208              	@ 0 "" 2
 8209              		.thumb
 8210              		.syntax unified
 8211 00dc BB62     		str	r3, [r7, #40]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8212              		.loc 2 481 10
 8213 00de BB6A     		ldr	r3, [r7, #40]
 8214              	.LBE588:
 8215              	.LBE587:
 8216              		.loc 1 3342 3 discriminator 1
 8217 00e0 43F00103 		orr	r3, r3, #1
 8218 00e4 7B65     		str	r3, [r7, #84]
 8219 00e6 FB68     		ldr	r3, [r7, #12]
 8220 00e8 1B68     		ldr	r3, [r3]
 8221 00ea 1433     		adds	r3, r3, #20
 8222 00ec 7A6D     		ldr	r2, [r7, #84]
 8223 00ee BA63     		str	r2, [r7, #56]
 8224 00f0 7B63     		str	r3, [r7, #52]
 8225              	.LBB589:
 8226              	.LBB590:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8227              		.loc 2 531 4
 8228 00f2 796B     		ldr	r1, [r7, #52]
 8229 00f4 BA6B     		ldr	r2, [r7, #56]
 8230              		.syntax unified
 8231              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8232 00f6 41E80023 		strex r3, r2, [r1]
 8233              	@ 0 "" 2
 8234              		.thumb
 8235              		.syntax unified
 8236 00fa 3B63     		str	r3, [r7, #48]
 8237              		.loc 2 532 10
 8238 00fc 3B6B     		ldr	r3, [r7, #48]
 8239              	.LBE590:
 8240              	.LBE589:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 215


 8241              		.loc 1 3342 3 discriminator 1
 8242 00fe 002B     		cmp	r3, #0
 8243 0100 E5D1     		bne	.L414
 8244              	.L417:
 8245              	.LBE586:
 8246              	.LBB591:
3343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   in the UART CR3 register */
3346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8247              		.loc 1 3346 3 discriminator 1
 8248 0102 FB68     		ldr	r3, [r7, #12]
 8249 0104 1B68     		ldr	r3, [r3]
 8250 0106 1433     		adds	r3, r3, #20
 8251 0108 BB61     		str	r3, [r7, #24]
 8252              	.LBB592:
 8253              	.LBB593:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8254              		.loc 2 480 4
 8255 010a BB69     		ldr	r3, [r7, #24]
 8256              		.syntax unified
 8257              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8258 010c 53E8003F 		ldrex r3, [r3]
 8259              	@ 0 "" 2
 8260              		.thumb
 8261              		.syntax unified
 8262 0110 7B61     		str	r3, [r7, #20]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8263              		.loc 2 481 10
 8264 0112 7B69     		ldr	r3, [r7, #20]
 8265              	.LBE593:
 8266              	.LBE592:
 8267              		.loc 1 3346 3 discriminator 1
 8268 0114 43F04003 		orr	r3, r3, #64
 8269 0118 3B65     		str	r3, [r7, #80]
 8270 011a FB68     		ldr	r3, [r7, #12]
 8271 011c 1B68     		ldr	r3, [r3]
 8272 011e 1433     		adds	r3, r3, #20
 8273 0120 3A6D     		ldr	r2, [r7, #80]
 8274 0122 7A62     		str	r2, [r7, #36]
 8275 0124 3B62     		str	r3, [r7, #32]
 8276              	.LBB594:
 8277              	.LBB595:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8278              		.loc 2 531 4
 8279 0126 396A     		ldr	r1, [r7, #32]
 8280 0128 7A6A     		ldr	r2, [r7, #36]
 8281              		.syntax unified
 8282              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8283 012a 41E80023 		strex r3, r2, [r1]
 8284              	@ 0 "" 2
 8285              		.thumb
 8286              		.syntax unified
 8287 012e FB61     		str	r3, [r7, #28]
 8288              		.loc 2 532 10
 8289 0130 FB69     		ldr	r3, [r7, #28]
 8290              	.LBE595:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 216


 8291              	.LBE594:
 8292              		.loc 1 3346 3 discriminator 1
 8293 0132 002B     		cmp	r3, #0
 8294 0134 E5D1     		bne	.L417
 8295              	.LBE591:
3347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 8296              		.loc 1 3348 10
 8297 0136 0023     		movs	r3, #0
 8298              	.L407:
3349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8299              		.loc 1 3349 1
 8300 0138 1846     		mov	r0, r3
 8301 013a 6037     		adds	r7, r7, #96
 8302              	.LCFI276:
 8303              		.cfi_def_cfa_offset 8
 8304 013c BD46     		mov	sp, r7
 8305              	.LCFI277:
 8306              		.cfi_def_cfa_register 13
 8307              		@ sp needed
 8308 013e 80BD     		pop	{r7, pc}
 8309              	.L419:
 8310              		.align	2
 8311              	.L418:
 8312 0140 00000000 		.word	UART_DMAReceiveCplt
 8313 0144 00000000 		.word	UART_DMARxHalfCplt
 8314 0148 00000000 		.word	UART_DMAError
 8315              		.cfi_endproc
 8316              	.LFE184:
 8318              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 8319              		.align	1
 8320              		.syntax unified
 8321              		.thumb
 8322              		.thumb_func
 8324              	UART_EndTxTransfer:
 8325              	.LFB185:
3350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8326              		.loc 1 3357 1
 8327              		.cfi_startproc
 8328              		@ args = 0, pretend = 0, frame = 32
 8329              		@ frame_needed = 1, uses_anonymous_args = 0
 8330              		@ link register save eliminated.
 8331 0000 80B4     		push	{r7}
 8332              	.LCFI278:
 8333              		.cfi_def_cfa_offset 4
 8334              		.cfi_offset 7, -4
 8335 0002 89B0     		sub	sp, sp, #36
 8336              	.LCFI279:
 8337              		.cfi_def_cfa_offset 40
 8338 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 217


 8339              	.LCFI280:
 8340              		.cfi_def_cfa_register 7
 8341 0006 7860     		str	r0, [r7, #4]
 8342              	.L423:
 8343              	.LBB596:
3358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 8344              		.loc 1 3359 3 discriminator 1
 8345 0008 7B68     		ldr	r3, [r7, #4]
 8346 000a 1B68     		ldr	r3, [r3]
 8347 000c 0C33     		adds	r3, r3, #12
 8348 000e FB60     		str	r3, [r7, #12]
 8349              	.LBB597:
 8350              	.LBB598:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8351              		.loc 2 480 4
 8352 0010 FB68     		ldr	r3, [r7, #12]
 8353              		.syntax unified
 8354              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8355 0012 53E8003F 		ldrex r3, [r3]
 8356              	@ 0 "" 2
 8357              		.thumb
 8358              		.syntax unified
 8359 0016 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8360              		.loc 2 481 10
 8361 0018 BB68     		ldr	r3, [r7, #8]
 8362              	.LBE598:
 8363              	.LBE597:
 8364              		.loc 1 3359 3 discriminator 1
 8365 001a 23F0C003 		bic	r3, r3, #192
 8366 001e FB61     		str	r3, [r7, #28]
 8367 0020 7B68     		ldr	r3, [r7, #4]
 8368 0022 1B68     		ldr	r3, [r3]
 8369 0024 0C33     		adds	r3, r3, #12
 8370 0026 FA69     		ldr	r2, [r7, #28]
 8371 0028 BA61     		str	r2, [r7, #24]
 8372 002a 7B61     		str	r3, [r7, #20]
 8373              	.LBB599:
 8374              	.LBB600:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8375              		.loc 2 531 4
 8376 002c 7969     		ldr	r1, [r7, #20]
 8377 002e BA69     		ldr	r2, [r7, #24]
 8378              		.syntax unified
 8379              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8380 0030 41E80023 		strex r3, r2, [r1]
 8381              	@ 0 "" 2
 8382              		.thumb
 8383              		.syntax unified
 8384 0034 3B61     		str	r3, [r7, #16]
 8385              		.loc 2 532 10
 8386 0036 3B69     		ldr	r3, [r7, #16]
 8387              	.LBE600:
 8388              	.LBE599:
 8389              		.loc 1 3359 3 discriminator 1
 8390 0038 002B     		cmp	r3, #0
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 218


 8391 003a E5D1     		bne	.L423
 8392              	.LBE596:
3360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 8393              		.loc 1 3362 17
 8394 003c 7B68     		ldr	r3, [r7, #4]
 8395 003e 2022     		movs	r2, #32
 8396 0040 83F84120 		strb	r2, [r3, #65]
3363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8397              		.loc 1 3363 1
 8398 0044 00BF     		nop
 8399 0046 2437     		adds	r7, r7, #36
 8400              	.LCFI281:
 8401              		.cfi_def_cfa_offset 4
 8402 0048 BD46     		mov	sp, r7
 8403              	.LCFI282:
 8404              		.cfi_def_cfa_register 13
 8405              		@ sp needed
 8406 004a 5DF8047B 		ldr	r7, [sp], #4
 8407              	.LCFI283:
 8408              		.cfi_restore 7
 8409              		.cfi_def_cfa_offset 0
 8410 004e 7047     		bx	lr
 8411              		.cfi_endproc
 8412              	.LFE185:
 8414              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 8415              		.align	1
 8416              		.syntax unified
 8417              		.thumb
 8418              		.thumb_func
 8420              	UART_EndRxTransfer:
 8421              	.LFB186:
3364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8422              		.loc 1 3371 1
 8423              		.cfi_startproc
 8424              		@ args = 0, pretend = 0, frame = 80
 8425              		@ frame_needed = 1, uses_anonymous_args = 0
 8426              		@ link register save eliminated.
 8427 0000 80B4     		push	{r7}
 8428              	.LCFI284:
 8429              		.cfi_def_cfa_offset 4
 8430              		.cfi_offset 7, -4
 8431 0002 95B0     		sub	sp, sp, #84
 8432              	.LCFI285:
 8433              		.cfi_def_cfa_offset 88
 8434 0004 00AF     		add	r7, sp, #0
 8435              	.LCFI286:
 8436              		.cfi_def_cfa_register 7
 8437 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 219


 8438              	.L427:
 8439              	.LBB601:
3372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8440              		.loc 1 3373 3 discriminator 1
 8441 0008 7B68     		ldr	r3, [r7, #4]
 8442 000a 1B68     		ldr	r3, [r3]
 8443 000c 0C33     		adds	r3, r3, #12
 8444 000e 7B63     		str	r3, [r7, #52]
 8445              	.LBB602:
 8446              	.LBB603:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8447              		.loc 2 480 4
 8448 0010 7B6B     		ldr	r3, [r7, #52]
 8449              		.syntax unified
 8450              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8451 0012 53E8003F 		ldrex r3, [r3]
 8452              	@ 0 "" 2
 8453              		.thumb
 8454              		.syntax unified
 8455 0016 3B63     		str	r3, [r7, #48]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8456              		.loc 2 481 10
 8457 0018 3B6B     		ldr	r3, [r7, #48]
 8458              	.LBE603:
 8459              	.LBE602:
 8460              		.loc 1 3373 3 discriminator 1
 8461 001a 23F49073 		bic	r3, r3, #288
 8462 001e FB64     		str	r3, [r7, #76]
 8463 0020 7B68     		ldr	r3, [r7, #4]
 8464 0022 1B68     		ldr	r3, [r3]
 8465 0024 0C33     		adds	r3, r3, #12
 8466 0026 FA6C     		ldr	r2, [r7, #76]
 8467 0028 3A64     		str	r2, [r7, #64]
 8468 002a FB63     		str	r3, [r7, #60]
 8469              	.LBB604:
 8470              	.LBB605:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8471              		.loc 2 531 4
 8472 002c F96B     		ldr	r1, [r7, #60]
 8473 002e 3A6C     		ldr	r2, [r7, #64]
 8474              		.syntax unified
 8475              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8476 0030 41E80023 		strex r3, r2, [r1]
 8477              	@ 0 "" 2
 8478              		.thumb
 8479              		.syntax unified
 8480 0034 BB63     		str	r3, [r7, #56]
 8481              		.loc 2 532 10
 8482 0036 BB6B     		ldr	r3, [r7, #56]
 8483              	.LBE605:
 8484              	.LBE604:
 8485              		.loc 1 3373 3 discriminator 1
 8486 0038 002B     		cmp	r3, #0
 8487 003a E5D1     		bne	.L427
 8488              	.L430:
 8489              	.LBE601:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 220


 8490              	.LBB606:
3374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8491              		.loc 1 3374 3 discriminator 1
 8492 003c 7B68     		ldr	r3, [r7, #4]
 8493 003e 1B68     		ldr	r3, [r3]
 8494 0040 1433     		adds	r3, r3, #20
 8495 0042 3B62     		str	r3, [r7, #32]
 8496              	.LBB607:
 8497              	.LBB608:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8498              		.loc 2 480 4
 8499 0044 3B6A     		ldr	r3, [r7, #32]
 8500              		.syntax unified
 8501              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8502 0046 53E8003F 		ldrex r3, [r3]
 8503              	@ 0 "" 2
 8504              		.thumb
 8505              		.syntax unified
 8506 004a FB61     		str	r3, [r7, #28]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8507              		.loc 2 481 10
 8508 004c FB69     		ldr	r3, [r7, #28]
 8509              	.LBE608:
 8510              	.LBE607:
 8511              		.loc 1 3374 3 discriminator 1
 8512 004e 23F00103 		bic	r3, r3, #1
 8513 0052 BB64     		str	r3, [r7, #72]
 8514 0054 7B68     		ldr	r3, [r7, #4]
 8515 0056 1B68     		ldr	r3, [r3]
 8516 0058 1433     		adds	r3, r3, #20
 8517 005a BA6C     		ldr	r2, [r7, #72]
 8518 005c FA62     		str	r2, [r7, #44]
 8519 005e BB62     		str	r3, [r7, #40]
 8520              	.LBB609:
 8521              	.LBB610:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8522              		.loc 2 531 4
 8523 0060 B96A     		ldr	r1, [r7, #40]
 8524 0062 FA6A     		ldr	r2, [r7, #44]
 8525              		.syntax unified
 8526              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8527 0064 41E80023 		strex r3, r2, [r1]
 8528              	@ 0 "" 2
 8529              		.thumb
 8530              		.syntax unified
 8531 0068 7B62     		str	r3, [r7, #36]
 8532              		.loc 2 532 10
 8533 006a 7B6A     		ldr	r3, [r7, #36]
 8534              	.LBE610:
 8535              	.LBE609:
 8536              		.loc 1 3374 3 discriminator 1
 8537 006c 002B     		cmp	r3, #0
 8538 006e E5D1     		bne	.L430
 8539              	.LBE606:
3375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 221


 8540              		.loc 1 3377 12
 8541 0070 7B68     		ldr	r3, [r7, #4]
 8542 0072 1B6B     		ldr	r3, [r3, #48]
 8543              		.loc 1 3377 6
 8544 0074 012B     		cmp	r3, #1
 8545 0076 19D1     		bne	.L431
 8546              	.L434:
 8547              	.LBB611:
3378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8548              		.loc 1 3379 5 discriminator 1
 8549 0078 7B68     		ldr	r3, [r7, #4]
 8550 007a 1B68     		ldr	r3, [r3]
 8551 007c 0C33     		adds	r3, r3, #12
 8552 007e FB60     		str	r3, [r7, #12]
 8553              	.LBB612:
 8554              	.LBB613:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8555              		.loc 2 480 4
 8556 0080 FB68     		ldr	r3, [r7, #12]
 8557              		.syntax unified
 8558              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8559 0082 53E8003F 		ldrex r3, [r3]
 8560              	@ 0 "" 2
 8561              		.thumb
 8562              		.syntax unified
 8563 0086 BB60     		str	r3, [r7, #8]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8564              		.loc 2 481 10
 8565 0088 BB68     		ldr	r3, [r7, #8]
 8566              	.LBE613:
 8567              	.LBE612:
 8568              		.loc 1 3379 5 discriminator 1
 8569 008a 23F01003 		bic	r3, r3, #16
 8570 008e 7B64     		str	r3, [r7, #68]
 8571 0090 7B68     		ldr	r3, [r7, #4]
 8572 0092 1B68     		ldr	r3, [r3]
 8573 0094 0C33     		adds	r3, r3, #12
 8574 0096 7A6C     		ldr	r2, [r7, #68]
 8575 0098 BA61     		str	r2, [r7, #24]
 8576 009a 7B61     		str	r3, [r7, #20]
 8577              	.LBB614:
 8578              	.LBB615:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8579              		.loc 2 531 4
 8580 009c 7969     		ldr	r1, [r7, #20]
 8581 009e BA69     		ldr	r2, [r7, #24]
 8582              		.syntax unified
 8583              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8584 00a0 41E80023 		strex r3, r2, [r1]
 8585              	@ 0 "" 2
 8586              		.thumb
 8587              		.syntax unified
 8588 00a4 3B61     		str	r3, [r7, #16]
 8589              		.loc 2 532 10
 8590 00a6 3B69     		ldr	r3, [r7, #16]
 8591              	.LBE615:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 222


 8592              	.LBE614:
 8593              		.loc 1 3379 5 discriminator 1
 8594 00a8 002B     		cmp	r3, #0
 8595 00aa E5D1     		bne	.L434
 8596              	.L431:
 8597              	.LBE611:
3380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8598              		.loc 1 3383 18
 8599 00ac 7B68     		ldr	r3, [r7, #4]
 8600 00ae 2022     		movs	r2, #32
 8601 00b0 83F84220 		strb	r2, [r3, #66]
3384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8602              		.loc 1 3384 24
 8603 00b4 7B68     		ldr	r3, [r7, #4]
 8604 00b6 0022     		movs	r2, #0
 8605 00b8 1A63     		str	r2, [r3, #48]
3385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8606              		.loc 1 3385 1
 8607 00ba 00BF     		nop
 8608 00bc 5437     		adds	r7, r7, #84
 8609              	.LCFI287:
 8610              		.cfi_def_cfa_offset 4
 8611 00be BD46     		mov	sp, r7
 8612              	.LCFI288:
 8613              		.cfi_def_cfa_register 13
 8614              		@ sp needed
 8615 00c0 5DF8047B 		ldr	r7, [sp], #4
 8616              	.LCFI289:
 8617              		.cfi_restore 7
 8618              		.cfi_def_cfa_offset 0
 8619 00c4 7047     		bx	lr
 8620              		.cfi_endproc
 8621              	.LFE186:
 8623              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 8624              		.align	1
 8625              		.syntax unified
 8626              		.thumb
 8627              		.thumb_func
 8629              	UART_DMAAbortOnError:
 8630              	.LFB187:
3386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8631              		.loc 1 3395 1
 8632              		.cfi_startproc
 8633              		@ args = 0, pretend = 0, frame = 16
 8634              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 223


 8635 0000 80B5     		push	{r7, lr}
 8636              	.LCFI290:
 8637              		.cfi_def_cfa_offset 8
 8638              		.cfi_offset 7, -8
 8639              		.cfi_offset 14, -4
 8640 0002 84B0     		sub	sp, sp, #16
 8641              	.LCFI291:
 8642              		.cfi_def_cfa_offset 24
 8643 0004 00AF     		add	r7, sp, #0
 8644              	.LCFI292:
 8645              		.cfi_def_cfa_register 7
 8646 0006 7860     		str	r0, [r7, #4]
3396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8647              		.loc 1 3396 23
 8648 0008 7B68     		ldr	r3, [r7, #4]
 8649 000a 9B6B     		ldr	r3, [r3, #56]
 8650 000c FB60     		str	r3, [r7, #12]
3397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 8651              		.loc 1 3397 22
 8652 000e FB68     		ldr	r3, [r7, #12]
 8653 0010 0022     		movs	r2, #0
 8654 0012 DA85     		strh	r2, [r3, #46]	@ movhi
3398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
3401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 8655              		.loc 1 3404 3
 8656 0014 F868     		ldr	r0, [r7, #12]
 8657 0016 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8658              		.loc 1 3406 1
 8659 001a 00BF     		nop
 8660 001c 1037     		adds	r7, r7, #16
 8661              	.LCFI293:
 8662              		.cfi_def_cfa_offset 8
 8663 001e BD46     		mov	sp, r7
 8664              	.LCFI294:
 8665              		.cfi_def_cfa_register 13
 8666              		@ sp needed
 8667 0020 80BD     		pop	{r7, pc}
 8668              		.cfi_endproc
 8669              	.LFE187:
 8671              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 8672              		.align	1
 8673              		.syntax unified
 8674              		.thumb
 8675              		.thumb_func
 8677              	UART_DMATxAbortCallback:
 8678              	.LFB188:
3407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 224


3411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8679              		.loc 1 3418 1
 8680              		.cfi_startproc
 8681              		@ args = 0, pretend = 0, frame = 16
 8682              		@ frame_needed = 1, uses_anonymous_args = 0
 8683 0000 80B5     		push	{r7, lr}
 8684              	.LCFI295:
 8685              		.cfi_def_cfa_offset 8
 8686              		.cfi_offset 7, -8
 8687              		.cfi_offset 14, -4
 8688 0002 84B0     		sub	sp, sp, #16
 8689              	.LCFI296:
 8690              		.cfi_def_cfa_offset 24
 8691 0004 00AF     		add	r7, sp, #0
 8692              	.LCFI297:
 8693              		.cfi_def_cfa_register 7
 8694 0006 7860     		str	r0, [r7, #4]
3419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8695              		.loc 1 3419 23
 8696 0008 7B68     		ldr	r3, [r7, #4]
 8697 000a 9B6B     		ldr	r3, [r3, #56]
 8698 000c FB60     		str	r3, [r7, #12]
3420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 8699              		.loc 1 3421 8
 8700 000e FB68     		ldr	r3, [r7, #12]
 8701 0010 9B6B     		ldr	r3, [r3, #56]
 8702              		.loc 1 3421 36
 8703 0012 0022     		movs	r2, #0
 8704 0014 1A65     		str	r2, [r3, #80]
3422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 8705              		.loc 1 3424 12
 8706 0016 FB68     		ldr	r3, [r7, #12]
 8707 0018 DB6B     		ldr	r3, [r3, #60]
 8708              		.loc 1 3424 6
 8709 001a 002B     		cmp	r3, #0
 8710 001c 04D0     		beq	.L437
3425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 8711              		.loc 1 3426 14
 8712 001e FB68     		ldr	r3, [r7, #12]
 8713 0020 DB6B     		ldr	r3, [r3, #60]
 8714              		.loc 1 3426 22
 8715 0022 1B6D     		ldr	r3, [r3, #80]
 8716              		.loc 1 3426 8
 8717 0024 002B     		cmp	r3, #0
 8718 0026 17D1     		bne	.L439
 8719              	.L437:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 225


3427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
3429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 8720              		.loc 1 3433 22
 8721 0028 FB68     		ldr	r3, [r7, #12]
 8722 002a 0022     		movs	r2, #0
 8723 002c DA84     		strh	r2, [r3, #38]	@ movhi
3434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 8724              		.loc 1 3434 22
 8725 002e FB68     		ldr	r3, [r7, #12]
 8726 0030 0022     		movs	r2, #0
 8727 0032 DA85     		strh	r2, [r3, #46]	@ movhi
3435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
3437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8728              		.loc 1 3437 20
 8729 0034 FB68     		ldr	r3, [r7, #12]
 8730 0036 0022     		movs	r2, #0
 8731 0038 5A64     		str	r2, [r3, #68]
3438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 8732              		.loc 1 3440 18
 8733 003a FB68     		ldr	r3, [r7, #12]
 8734 003c 2022     		movs	r2, #32
 8735 003e 83F84120 		strb	r2, [r3, #65]
3441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8736              		.loc 1 3441 18
 8737 0042 FB68     		ldr	r3, [r7, #12]
 8738 0044 2022     		movs	r2, #32
 8739 0046 83F84220 		strb	r2, [r3, #66]
3442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8740              		.loc 1 3442 24
 8741 004a FB68     		ldr	r3, [r7, #12]
 8742 004c 0022     		movs	r2, #0
 8743 004e 1A63     		str	r2, [r3, #48]
3443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 8744              		.loc 1 3450 3
 8745 0050 F868     		ldr	r0, [r7, #12]
 8746 0052 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 8747 0056 00E0     		b	.L436
 8748              	.L439:
3428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 8749              		.loc 1 3428 7
 8750 0058 00BF     		nop
 8751              	.L436:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 226


3451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8752              		.loc 1 3452 1
 8753 005a 1037     		adds	r7, r7, #16
 8754              	.LCFI298:
 8755              		.cfi_def_cfa_offset 8
 8756 005c BD46     		mov	sp, r7
 8757              	.LCFI299:
 8758              		.cfi_def_cfa_register 13
 8759              		@ sp needed
 8760 005e 80BD     		pop	{r7, pc}
 8761              		.cfi_endproc
 8762              	.LFE188:
 8764              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 8765              		.align	1
 8766              		.syntax unified
 8767              		.thumb
 8768              		.thumb_func
 8770              	UART_DMARxAbortCallback:
 8771              	.LFB189:
3453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8772              		.loc 1 3464 1
 8773              		.cfi_startproc
 8774              		@ args = 0, pretend = 0, frame = 16
 8775              		@ frame_needed = 1, uses_anonymous_args = 0
 8776 0000 80B5     		push	{r7, lr}
 8777              	.LCFI300:
 8778              		.cfi_def_cfa_offset 8
 8779              		.cfi_offset 7, -8
 8780              		.cfi_offset 14, -4
 8781 0002 84B0     		sub	sp, sp, #16
 8782              	.LCFI301:
 8783              		.cfi_def_cfa_offset 24
 8784 0004 00AF     		add	r7, sp, #0
 8785              	.LCFI302:
 8786              		.cfi_def_cfa_register 7
 8787 0006 7860     		str	r0, [r7, #4]
3465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8788              		.loc 1 3465 23
 8789 0008 7B68     		ldr	r3, [r7, #4]
 8790 000a 9B6B     		ldr	r3, [r3, #56]
 8791 000c FB60     		str	r3, [r7, #12]
3466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 8792              		.loc 1 3467 8
 8793 000e FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 227


 8794 0010 DB6B     		ldr	r3, [r3, #60]
 8795              		.loc 1 3467 36
 8796 0012 0022     		movs	r2, #0
 8797 0014 1A65     		str	r2, [r3, #80]
3468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 8798              		.loc 1 3470 12
 8799 0016 FB68     		ldr	r3, [r7, #12]
 8800 0018 9B6B     		ldr	r3, [r3, #56]
 8801              		.loc 1 3470 6
 8802 001a 002B     		cmp	r3, #0
 8803 001c 04D0     		beq	.L441
3471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 8804              		.loc 1 3472 14
 8805 001e FB68     		ldr	r3, [r7, #12]
 8806 0020 9B6B     		ldr	r3, [r3, #56]
 8807              		.loc 1 3472 22
 8808 0022 1B6D     		ldr	r3, [r3, #80]
 8809              		.loc 1 3472 8
 8810 0024 002B     		cmp	r3, #0
 8811 0026 17D1     		bne	.L443
 8812              	.L441:
3473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
3475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 8813              		.loc 1 3479 22
 8814 0028 FB68     		ldr	r3, [r7, #12]
 8815 002a 0022     		movs	r2, #0
 8816 002c DA84     		strh	r2, [r3, #38]	@ movhi
3480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 8817              		.loc 1 3480 22
 8818 002e FB68     		ldr	r3, [r7, #12]
 8819 0030 0022     		movs	r2, #0
 8820 0032 DA85     		strh	r2, [r3, #46]	@ movhi
3481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
3483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8821              		.loc 1 3483 20
 8822 0034 FB68     		ldr	r3, [r7, #12]
 8823 0036 0022     		movs	r2, #0
 8824 0038 5A64     		str	r2, [r3, #68]
3484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 8825              		.loc 1 3486 18
 8826 003a FB68     		ldr	r3, [r7, #12]
 8827 003c 2022     		movs	r2, #32
 8828 003e 83F84120 		strb	r2, [r3, #65]
3487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8829              		.loc 1 3487 18
 8830 0042 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 228


 8831 0044 2022     		movs	r2, #32
 8832 0046 83F84220 		strb	r2, [r3, #66]
3488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8833              		.loc 1 3488 24
 8834 004a FB68     		ldr	r3, [r7, #12]
 8835 004c 0022     		movs	r2, #0
 8836 004e 1A63     		str	r2, [r3, #48]
3489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 8837              		.loc 1 3496 3
 8838 0050 F868     		ldr	r0, [r7, #12]
 8839 0052 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 8840 0056 00E0     		b	.L440
 8841              	.L443:
3474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 8842              		.loc 1 3474 7
 8843 0058 00BF     		nop
 8844              	.L440:
3497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8845              		.loc 1 3498 1
 8846 005a 1037     		adds	r7, r7, #16
 8847              	.LCFI303:
 8848              		.cfi_def_cfa_offset 8
 8849 005c BD46     		mov	sp, r7
 8850              	.LCFI304:
 8851              		.cfi_def_cfa_register 13
 8852              		@ sp needed
 8853 005e 80BD     		pop	{r7, pc}
 8854              		.cfi_endproc
 8855              	.LFE189:
 8857              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 8858              		.align	1
 8859              		.syntax unified
 8860              		.thumb
 8861              		.thumb_func
 8863              	UART_DMATxOnlyAbortCallback:
 8864              	.LFB190:
3499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8865              		.loc 1 3510 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 229


 8866              		.cfi_startproc
 8867              		@ args = 0, pretend = 0, frame = 16
 8868              		@ frame_needed = 1, uses_anonymous_args = 0
 8869 0000 80B5     		push	{r7, lr}
 8870              	.LCFI305:
 8871              		.cfi_def_cfa_offset 8
 8872              		.cfi_offset 7, -8
 8873              		.cfi_offset 14, -4
 8874 0002 84B0     		sub	sp, sp, #16
 8875              	.LCFI306:
 8876              		.cfi_def_cfa_offset 24
 8877 0004 00AF     		add	r7, sp, #0
 8878              	.LCFI307:
 8879              		.cfi_def_cfa_register 7
 8880 0006 7860     		str	r0, [r7, #4]
3511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8881              		.loc 1 3511 23
 8882 0008 7B68     		ldr	r3, [r7, #4]
 8883 000a 9B6B     		ldr	r3, [r3, #56]
 8884 000c FB60     		str	r3, [r7, #12]
3512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 8885              		.loc 1 3513 22
 8886 000e FB68     		ldr	r3, [r7, #12]
 8887 0010 0022     		movs	r2, #0
 8888 0012 DA84     		strh	r2, [r3, #38]	@ movhi
3514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 8889              		.loc 1 3516 17
 8890 0014 FB68     		ldr	r3, [r7, #12]
 8891 0016 2022     		movs	r2, #32
 8892 0018 83F84120 		strb	r2, [r3, #65]
3517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 8893              		.loc 1 3524 3
 8894 001c F868     		ldr	r0, [r7, #12]
 8895 001e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
3525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8896              		.loc 1 3526 1
 8897 0022 00BF     		nop
 8898 0024 1037     		adds	r7, r7, #16
 8899              	.LCFI308:
 8900              		.cfi_def_cfa_offset 8
 8901 0026 BD46     		mov	sp, r7
 8902              	.LCFI309:
 8903              		.cfi_def_cfa_register 13
 8904              		@ sp needed
 8905 0028 80BD     		pop	{r7, pc}
 8906              		.cfi_endproc
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 230


 8907              	.LFE190:
 8909              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 8910              		.align	1
 8911              		.syntax unified
 8912              		.thumb
 8913              		.thumb_func
 8915              	UART_DMARxOnlyAbortCallback:
 8916              	.LFB191:
3527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8917              		.loc 1 3538 1
 8918              		.cfi_startproc
 8919              		@ args = 0, pretend = 0, frame = 16
 8920              		@ frame_needed = 1, uses_anonymous_args = 0
 8921 0000 80B5     		push	{r7, lr}
 8922              	.LCFI310:
 8923              		.cfi_def_cfa_offset 8
 8924              		.cfi_offset 7, -8
 8925              		.cfi_offset 14, -4
 8926 0002 84B0     		sub	sp, sp, #16
 8927              	.LCFI311:
 8928              		.cfi_def_cfa_offset 24
 8929 0004 00AF     		add	r7, sp, #0
 8930              	.LCFI312:
 8931              		.cfi_def_cfa_register 7
 8932 0006 7860     		str	r0, [r7, #4]
3539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8933              		.loc 1 3539 23
 8934 0008 7B68     		ldr	r3, [r7, #4]
 8935 000a 9B6B     		ldr	r3, [r3, #56]
 8936 000c FB60     		str	r3, [r7, #12]
3540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 8937              		.loc 1 3541 22
 8938 000e FB68     		ldr	r3, [r7, #12]
 8939 0010 0022     		movs	r2, #0
 8940 0012 DA85     		strh	r2, [r3, #46]	@ movhi
3542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8941              		.loc 1 3544 18
 8942 0014 FB68     		ldr	r3, [r7, #12]
 8943 0016 2022     		movs	r2, #32
 8944 0018 83F84220 		strb	r2, [r3, #66]
3545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8945              		.loc 1 3545 24
 8946 001c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 231


 8947 001e 0022     		movs	r2, #0
 8948 0020 1A63     		str	r2, [r3, #48]
3546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 8949              		.loc 1 3553 3
 8950 0022 F868     		ldr	r0, [r7, #12]
 8951 0024 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
3554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8952              		.loc 1 3555 1
 8953 0028 00BF     		nop
 8954 002a 1037     		adds	r7, r7, #16
 8955              	.LCFI313:
 8956              		.cfi_def_cfa_offset 8
 8957 002c BD46     		mov	sp, r7
 8958              	.LCFI314:
 8959              		.cfi_def_cfa_register 13
 8960              		@ sp needed
 8961 002e 80BD     		pop	{r7, pc}
 8962              		.cfi_endproc
 8963              	.LFE191:
 8965              		.section	.text.UART_Transmit_IT,"ax",%progbits
 8966              		.align	1
 8967              		.syntax unified
 8968              		.thumb
 8969              		.thumb_func
 8971              	UART_Transmit_IT:
 8972              	.LFB192:
3556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
3559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
3564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8973              		.loc 1 3564 1
 8974              		.cfi_startproc
 8975              		@ args = 0, pretend = 0, frame = 16
 8976              		@ frame_needed = 1, uses_anonymous_args = 0
 8977              		@ link register save eliminated.
 8978 0000 80B4     		push	{r7}
 8979              	.LCFI315:
 8980              		.cfi_def_cfa_offset 4
 8981              		.cfi_offset 7, -4
 8982 0002 85B0     		sub	sp, sp, #20
 8983              	.LCFI316:
 8984              		.cfi_def_cfa_offset 24
 8985 0004 00AF     		add	r7, sp, #0
 8986              	.LCFI317:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 232


 8987              		.cfi_def_cfa_register 7
 8988 0006 7860     		str	r0, [r7, #4]
3565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   const uint16_t *tmp;
3566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 8989              		.loc 1 3568 12
 8990 0008 7B68     		ldr	r3, [r7, #4]
 8991 000a 93F84130 		ldrb	r3, [r3, #65]
 8992 000e DBB2     		uxtb	r3, r3
 8993              		.loc 1 3568 6
 8994 0010 212B     		cmp	r3, #33
 8995 0012 3ED1     		bne	.L447
3569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8996              		.loc 1 3570 21
 8997 0014 7B68     		ldr	r3, [r7, #4]
 8998 0016 9B68     		ldr	r3, [r3, #8]
 8999              		.loc 1 3570 8
 9000 0018 B3F5805F 		cmp	r3, #4096
 9001 001c 14D1     		bne	.L448
 9002              		.loc 1 3570 71 discriminator 1
 9003 001e 7B68     		ldr	r3, [r7, #4]
 9004 0020 1B69     		ldr	r3, [r3, #16]
 9005              		.loc 1 3570 56 discriminator 1
 9006 0022 002B     		cmp	r3, #0
 9007 0024 10D1     		bne	.L448
3571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (const uint16_t *) huart->pTxBuffPtr;
 9008              		.loc 1 3572 11
 9009 0026 7B68     		ldr	r3, [r7, #4]
 9010 0028 1B6A     		ldr	r3, [r3, #32]
 9011 002a FB60     		str	r3, [r7, #12]
3573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 9012              		.loc 1 3573 40
 9013 002c FB68     		ldr	r3, [r7, #12]
 9014 002e 1B88     		ldrh	r3, [r3]
 9015              		.loc 1 3573 29
 9016 0030 1A46     		mov	r2, r3
 9017              		.loc 1 3573 12
 9018 0032 7B68     		ldr	r3, [r7, #4]
 9019 0034 1B68     		ldr	r3, [r3]
 9020              		.loc 1 3573 29
 9021 0036 C2F30802 		ubfx	r2, r2, #0, #9
 9022              		.loc 1 3573 27
 9023 003a 5A60     		str	r2, [r3, #4]
3574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 9024              		.loc 1 3574 12
 9025 003c 7B68     		ldr	r3, [r7, #4]
 9026 003e 1B6A     		ldr	r3, [r3, #32]
 9027              		.loc 1 3574 25
 9028 0040 9A1C     		adds	r2, r3, #2
 9029 0042 7B68     		ldr	r3, [r7, #4]
 9030 0044 1A62     		str	r2, [r3, #32]
 9031 0046 08E0     		b	.L449
 9032              	.L448:
3575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 233


3576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 9033              		.loc 1 3578 45
 9034 0048 7B68     		ldr	r3, [r7, #4]
 9035 004a 1B6A     		ldr	r3, [r3, #32]
 9036              		.loc 1 3578 57
 9037 004c 591C     		adds	r1, r3, #1
 9038 004e 7A68     		ldr	r2, [r7, #4]
 9039 0050 1162     		str	r1, [r2, #32]
 9040              		.loc 1 3578 39
 9041 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9042              		.loc 1 3578 12
 9043 0054 7B68     		ldr	r3, [r7, #4]
 9044 0056 1B68     		ldr	r3, [r3]
 9045              		.loc 1 3578 27
 9046 0058 5A60     		str	r2, [r3, #4]
 9047              	.L449:
3579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->TxXferCount == 0U)
 9048              		.loc 1 3581 16
 9049 005a 7B68     		ldr	r3, [r7, #4]
 9050 005c DB8C     		ldrh	r3, [r3, #38]	@ movhi
 9051 005e 9BB2     		uxth	r3, r3
 9052              		.loc 1 3581 9
 9053 0060 013B     		subs	r3, r3, #1
 9054 0062 9BB2     		uxth	r3, r3
 9055              		.loc 1 3581 8
 9056 0064 7A68     		ldr	r2, [r7, #4]
 9057 0066 1946     		mov	r1, r3	@ movhi
 9058 0068 D184     		strh	r1, [r2, #38]	@ movhi
 9059 006a 002B     		cmp	r3, #0
 9060 006c 0FD1     		bne	.L450
3582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 9061              		.loc 1 3584 7
 9062 006e 7B68     		ldr	r3, [r7, #4]
 9063 0070 1B68     		ldr	r3, [r3]
 9064 0072 DA68     		ldr	r2, [r3, #12]
 9065 0074 7B68     		ldr	r3, [r7, #4]
 9066 0076 1B68     		ldr	r3, [r3]
 9067 0078 22F08002 		bic	r2, r2, #128
 9068 007c DA60     		str	r2, [r3, #12]
3585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 9069              		.loc 1 3587 7
 9070 007e 7B68     		ldr	r3, [r7, #4]
 9071 0080 1B68     		ldr	r3, [r3]
 9072 0082 DA68     		ldr	r2, [r3, #12]
 9073 0084 7B68     		ldr	r3, [r7, #4]
 9074 0086 1B68     		ldr	r3, [r3]
 9075 0088 42F04002 		orr	r2, r2, #64
 9076 008c DA60     		str	r2, [r3, #12]
 9077              	.L450:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 234


3588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 9078              		.loc 1 3589 12
 9079 008e 0023     		movs	r3, #0
 9080 0090 00E0     		b	.L451
 9081              	.L447:
3590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 9082              		.loc 1 3593 12
 9083 0092 0223     		movs	r3, #2
 9084              	.L451:
3594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9085              		.loc 1 3595 1
 9086 0094 1846     		mov	r0, r3
 9087 0096 1437     		adds	r7, r7, #20
 9088              	.LCFI318:
 9089              		.cfi_def_cfa_offset 4
 9090 0098 BD46     		mov	sp, r7
 9091              	.LCFI319:
 9092              		.cfi_def_cfa_register 13
 9093              		@ sp needed
 9094 009a 5DF8047B 		ldr	r7, [sp], #4
 9095              	.LCFI320:
 9096              		.cfi_restore 7
 9097              		.cfi_def_cfa_offset 0
 9098 009e 7047     		bx	lr
 9099              		.cfi_endproc
 9100              	.LFE192:
 9102              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 9103              		.align	1
 9104              		.syntax unified
 9105              		.thumb
 9106              		.thumb_func
 9108              	UART_EndTransmit_IT:
 9109              	.LFB193:
3596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
3599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 9110              		.loc 1 3604 1
 9111              		.cfi_startproc
 9112              		@ args = 0, pretend = 0, frame = 8
 9113              		@ frame_needed = 1, uses_anonymous_args = 0
 9114 0000 80B5     		push	{r7, lr}
 9115              	.LCFI321:
 9116              		.cfi_def_cfa_offset 8
 9117              		.cfi_offset 7, -8
 9118              		.cfi_offset 14, -4
 9119 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 235


 9120              	.LCFI322:
 9121              		.cfi_def_cfa_offset 16
 9122 0004 00AF     		add	r7, sp, #0
 9123              	.LCFI323:
 9124              		.cfi_def_cfa_register 7
 9125 0006 7860     		str	r0, [r7, #4]
3605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 9126              		.loc 1 3606 3
 9127 0008 7B68     		ldr	r3, [r7, #4]
 9128 000a 1B68     		ldr	r3, [r3]
 9129 000c DA68     		ldr	r2, [r3, #12]
 9130 000e 7B68     		ldr	r3, [r7, #4]
 9131 0010 1B68     		ldr	r3, [r3]
 9132 0012 22F04002 		bic	r2, r2, #64
 9133 0016 DA60     		str	r2, [r3, #12]
3607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 9134              		.loc 1 3609 17
 9135 0018 7B68     		ldr	r3, [r7, #4]
 9136 001a 2022     		movs	r2, #32
 9137 001c 83F84120 		strb	r2, [r3, #65]
3610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 9138              		.loc 1 3616 3
 9139 0020 7868     		ldr	r0, [r7, #4]
 9140 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
3617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 9141              		.loc 1 3619 10
 9142 0026 0023     		movs	r3, #0
3620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9143              		.loc 1 3620 1
 9144 0028 1846     		mov	r0, r3
 9145 002a 0837     		adds	r7, r7, #8
 9146              	.LCFI324:
 9147              		.cfi_def_cfa_offset 8
 9148 002c BD46     		mov	sp, r7
 9149              	.LCFI325:
 9150              		.cfi_def_cfa_register 13
 9151              		@ sp needed
 9152 002e 80BD     		pop	{r7, pc}
 9153              		.cfi_endproc
 9154              	.LFE193:
 9156              		.section	.text.UART_Receive_IT,"ax",%progbits
 9157              		.align	1
 9158              		.syntax unified
 9159              		.thumb
 9160              		.thumb_func
 9162              	UART_Receive_IT:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 236


 9163              	.LFB194:
3621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode
3624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
3629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 9164              		.loc 1 3629 1
 9165              		.cfi_startproc
 9166              		@ args = 0, pretend = 0, frame = 48
 9167              		@ frame_needed = 1, uses_anonymous_args = 0
 9168 0000 80B5     		push	{r7, lr}
 9169              	.LCFI326:
 9170              		.cfi_def_cfa_offset 8
 9171              		.cfi_offset 7, -8
 9172              		.cfi_offset 14, -4
 9173 0002 8CB0     		sub	sp, sp, #48
 9174              	.LCFI327:
 9175              		.cfi_def_cfa_offset 56
 9176 0004 00AF     		add	r7, sp, #0
 9177              	.LCFI328:
 9178              		.cfi_def_cfa_register 7
 9179 0006 7860     		str	r0, [r7, #4]
3630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits = NULL;
 9180              		.loc 1 3630 13
 9181 0008 0023     		movs	r3, #0
 9182 000a FB62     		str	r3, [r7, #44]
3631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits = NULL;
 9183              		.loc 1 3631 13
 9184 000c 0023     		movs	r3, #0
 9185 000e BB62     		str	r3, [r7, #40]
3632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 9186              		.loc 1 3634 12
 9187 0010 7B68     		ldr	r3, [r7, #4]
 9188 0012 93F84230 		ldrb	r3, [r3, #66]
 9189 0016 DBB2     		uxtb	r3, r3
 9190              		.loc 1 3634 6
 9191 0018 222B     		cmp	r3, #34
 9192 001a 40F0AA80 		bne	.L455
3635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 9193              		.loc 1 3636 21
 9194 001e 7B68     		ldr	r3, [r7, #4]
 9195 0020 9B68     		ldr	r3, [r3, #8]
 9196              		.loc 1 3636 8
 9197 0022 B3F5805F 		cmp	r3, #4096
 9198 0026 15D1     		bne	.L456
 9199              		.loc 1 3636 71 discriminator 1
 9200 0028 7B68     		ldr	r3, [r7, #4]
 9201 002a 1B69     		ldr	r3, [r3, #16]
 9202              		.loc 1 3636 56 discriminator 1
 9203 002c 002B     		cmp	r3, #0
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 237


 9204 002e 11D1     		bne	.L456
3637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Unused pdata8bits */
3639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UNUSED(pdata8bits);
3640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 9205              		.loc 1 3640 19
 9206 0030 7B68     		ldr	r3, [r7, #4]
 9207 0032 9B6A     		ldr	r3, [r3, #40]
 9208 0034 BB62     		str	r3, [r7, #40]
3641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 9209              		.loc 1 3641 38
 9210 0036 7B68     		ldr	r3, [r7, #4]
 9211 0038 1B68     		ldr	r3, [r3]
 9212              		.loc 1 3641 48
 9213 003a 5B68     		ldr	r3, [r3, #4]
 9214              		.loc 1 3641 22
 9215 003c 9BB2     		uxth	r3, r3
 9216 003e C3F30803 		ubfx	r3, r3, #0, #9
 9217 0042 9AB2     		uxth	r2, r3
 9218              		.loc 1 3641 20
 9219 0044 BB6A     		ldr	r3, [r7, #40]
 9220 0046 1A80     		strh	r2, [r3]	@ movhi
3642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 9221              		.loc 1 3642 12
 9222 0048 7B68     		ldr	r3, [r7, #4]
 9223 004a 9B6A     		ldr	r3, [r3, #40]
 9224              		.loc 1 3642 25
 9225 004c 9A1C     		adds	r2, r3, #2
 9226 004e 7B68     		ldr	r3, [r7, #4]
 9227 0050 9A62     		str	r2, [r3, #40]
 9228 0052 24E0     		b	.L457
 9229              	.L456:
3643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits = (uint8_t *) huart->pRxBuffPtr;
 9230              		.loc 1 3646 18
 9231 0054 7B68     		ldr	r3, [r7, #4]
 9232 0056 9B6A     		ldr	r3, [r3, #40]
 9233 0058 FB62     		str	r3, [r7, #44]
3647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Unused pdata16bits */
3648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UNUSED(pdata16bits);
3649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLE
 9234              		.loc 1 3650 23
 9235 005a 7B68     		ldr	r3, [r7, #4]
 9236 005c 9B68     		ldr	r3, [r3, #8]
 9237              		.loc 1 3650 10
 9238 005e B3F5805F 		cmp	r3, #4096
 9239 0062 07D0     		beq	.L458
 9240              		.loc 1 3650 74 discriminator 1
 9241 0064 7B68     		ldr	r3, [r7, #4]
 9242 0066 9B68     		ldr	r3, [r3, #8]
 9243              		.loc 1 3650 58 discriminator 1
 9244 0068 002B     		cmp	r3, #0
 9245 006a 0AD1     		bne	.L459
 9246              		.loc 1 3650 124 discriminator 2
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 238


 9247 006c 7B68     		ldr	r3, [r7, #4]
 9248 006e 1B69     		ldr	r3, [r3, #16]
 9249              		.loc 1 3650 109 discriminator 2
 9250 0070 002B     		cmp	r3, #0
 9251 0072 06D1     		bne	.L459
 9252              	.L458:
3651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 9253              		.loc 1 3652 38
 9254 0074 7B68     		ldr	r3, [r7, #4]
 9255 0076 1B68     		ldr	r3, [r3]
 9256              		.loc 1 3652 48
 9257 0078 5B68     		ldr	r3, [r3, #4]
 9258              		.loc 1 3652 23
 9259 007a DAB2     		uxtb	r2, r3
 9260              		.loc 1 3652 21
 9261 007c FB6A     		ldr	r3, [r7, #44]
 9262 007e 1A70     		strb	r2, [r3]
 9263 0080 08E0     		b	.L460
 9264              	.L459:
3653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 9265              		.loc 1 3656 38
 9266 0082 7B68     		ldr	r3, [r7, #4]
 9267 0084 1B68     		ldr	r3, [r3]
 9268              		.loc 1 3656 48
 9269 0086 5B68     		ldr	r3, [r3, #4]
 9270              		.loc 1 3656 23
 9271 0088 DBB2     		uxtb	r3, r3
 9272 008a 03F07F03 		and	r3, r3, #127
 9273 008e DAB2     		uxtb	r2, r3
 9274              		.loc 1 3656 21
 9275 0090 FB6A     		ldr	r3, [r7, #44]
 9276 0092 1A70     		strb	r2, [r3]
 9277              	.L460:
3657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pRxBuffPtr += 1U;
 9278              		.loc 1 3658 12
 9279 0094 7B68     		ldr	r3, [r7, #4]
 9280 0096 9B6A     		ldr	r3, [r3, #40]
 9281              		.loc 1 3658 25
 9282 0098 5A1C     		adds	r2, r3, #1
 9283 009a 7B68     		ldr	r3, [r7, #4]
 9284 009c 9A62     		str	r2, [r3, #40]
 9285              	.L457:
3659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->RxXferCount == 0U)
 9286              		.loc 1 3661 16
 9287 009e 7B68     		ldr	r3, [r7, #4]
 9288 00a0 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 9289 00a2 9BB2     		uxth	r3, r3
 9290              		.loc 1 3661 9
 9291 00a4 013B     		subs	r3, r3, #1
 9292 00a6 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 239


 9293              		.loc 1 3661 8
 9294 00a8 7A68     		ldr	r2, [r7, #4]
 9295 00aa 1946     		mov	r1, r3	@ movhi
 9296 00ac D185     		strh	r1, [r2, #46]	@ movhi
 9297 00ae 002B     		cmp	r3, #0
 9298 00b0 5DD1     		bne	.L461
3662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Data Register not empty Interrupt */
3664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 9299              		.loc 1 3664 7
 9300 00b2 7B68     		ldr	r3, [r7, #4]
 9301 00b4 1B68     		ldr	r3, [r3]
 9302 00b6 DA68     		ldr	r2, [r3, #12]
 9303 00b8 7B68     		ldr	r3, [r7, #4]
 9304 00ba 1B68     		ldr	r3, [r3]
 9305 00bc 22F02002 		bic	r2, r2, #32
 9306 00c0 DA60     		str	r2, [r3, #12]
3665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
3667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 9307              		.loc 1 3667 7
 9308 00c2 7B68     		ldr	r3, [r7, #4]
 9309 00c4 1B68     		ldr	r3, [r3]
 9310 00c6 DA68     		ldr	r2, [r3, #12]
 9311 00c8 7B68     		ldr	r3, [r7, #4]
 9312 00ca 1B68     		ldr	r3, [r3]
 9313 00cc 22F48072 		bic	r2, r2, #256
 9314 00d0 DA60     		str	r2, [r3, #12]
3668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 9315              		.loc 1 3670 7
 9316 00d2 7B68     		ldr	r3, [r7, #4]
 9317 00d4 1B68     		ldr	r3, [r3]
 9318 00d6 5A69     		ldr	r2, [r3, #20]
 9319 00d8 7B68     		ldr	r3, [r7, #4]
 9320 00da 1B68     		ldr	r3, [r3]
 9321 00dc 22F00102 		bic	r2, r2, #1
 9322 00e0 5A61     		str	r2, [r3, #20]
3671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 9323              		.loc 1 3673 22
 9324 00e2 7B68     		ldr	r3, [r7, #4]
 9325 00e4 2022     		movs	r2, #32
 9326 00e6 83F84220 		strb	r2, [r3, #66]
3674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Initialize type of RxEvent to Transfer Complete */
3676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxEventType = HAL_UART_RXEVENT_TC;
 9327              		.loc 1 3676 26
 9328 00ea 7B68     		ldr	r3, [r7, #4]
 9329 00ec 0022     		movs	r2, #0
 9330 00ee 5A63     		str	r2, [r3, #52]
3677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check current reception Mode :
3679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
3680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 240


 9331              		.loc 1 3680 16
 9332 00f0 7B68     		ldr	r3, [r7, #4]
 9333 00f2 1B6B     		ldr	r3, [r3, #48]
 9334              		.loc 1 3680 10
 9335 00f4 012B     		cmp	r3, #1
 9336 00f6 35D1     		bne	.L462
3681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Set reception type to Standard */
3683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 9337              		.loc 1 3683 30
 9338 00f8 7B68     		ldr	r3, [r7, #4]
 9339 00fa 0022     		movs	r2, #0
 9340 00fc 1A63     		str	r2, [r3, #48]
 9341              	.L465:
 9342              	.LBB616:
3684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable IDLE interrupt */
3686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 9343              		.loc 1 3686 9 discriminator 1
 9344 00fe 7B68     		ldr	r3, [r7, #4]
 9345 0100 1B68     		ldr	r3, [r3]
 9346 0102 0C33     		adds	r3, r3, #12
 9347 0104 7B61     		str	r3, [r7, #20]
 9348              	.LBB617:
 9349              	.LBB618:
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9350              		.loc 2 480 4
 9351 0106 7B69     		ldr	r3, [r7, #20]
 9352              		.syntax unified
 9353              	@ 480 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9354 0108 53E8003F 		ldrex r3, [r3]
 9355              	@ 0 "" 2
 9356              		.thumb
 9357              		.syntax unified
 9358 010c 3B61     		str	r3, [r7, #16]
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9359              		.loc 2 481 10
 9360 010e 3B69     		ldr	r3, [r7, #16]
 9361              	.LBE618:
 9362              	.LBE617:
 9363              		.loc 1 3686 9 discriminator 1
 9364 0110 23F01003 		bic	r3, r3, #16
 9365 0114 7B62     		str	r3, [r7, #36]
 9366 0116 7B68     		ldr	r3, [r7, #4]
 9367 0118 1B68     		ldr	r3, [r3]
 9368 011a 0C33     		adds	r3, r3, #12
 9369 011c 7A6A     		ldr	r2, [r7, #36]
 9370 011e 3A62     		str	r2, [r7, #32]
 9371 0120 FB61     		str	r3, [r7, #28]
 9372              	.LBB619:
 9373              	.LBB620:
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9374              		.loc 2 531 4
 9375 0122 F969     		ldr	r1, [r7, #28]
 9376 0124 3A6A     		ldr	r2, [r7, #32]
 9377              		.syntax unified
 9378              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 241


 9379 0126 41E80023 		strex r3, r2, [r1]
 9380              	@ 0 "" 2
 9381              		.thumb
 9382              		.syntax unified
 9383 012a BB61     		str	r3, [r7, #24]
 9384              		.loc 2 532 10
 9385 012c BB69     		ldr	r3, [r7, #24]
 9386              	.LBE620:
 9387              	.LBE619:
 9388              		.loc 1 3686 9 discriminator 1
 9389 012e 002B     		cmp	r3, #0
 9390 0130 E5D1     		bne	.L465
 9391              	.LBE616:
3687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Check if IDLE flag is set */
3689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 9392              		.loc 1 3689 13
 9393 0132 7B68     		ldr	r3, [r7, #4]
 9394 0134 1B68     		ldr	r3, [r3]
 9395 0136 1B68     		ldr	r3, [r3]
 9396 0138 03F01003 		and	r3, r3, #16
 9397              		.loc 1 3689 12
 9398 013c 102B     		cmp	r3, #16
 9399 013e 0AD1     		bne	.L466
 9400              	.LBB621:
3690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
3691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Clear IDLE flag in ISR */
3692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UART_CLEAR_IDLEFLAG(huart);
 9401              		.loc 1 3692 11
 9402 0140 0023     		movs	r3, #0
 9403 0142 FB60     		str	r3, [r7, #12]
 9404 0144 7B68     		ldr	r3, [r7, #4]
 9405 0146 1B68     		ldr	r3, [r3]
 9406 0148 1B68     		ldr	r3, [r3]
 9407 014a FB60     		str	r3, [r7, #12]
 9408 014c 7B68     		ldr	r3, [r7, #4]
 9409 014e 1B68     		ldr	r3, [r3]
 9410 0150 5B68     		ldr	r3, [r3, #4]
 9411 0152 FB60     		str	r3, [r7, #12]
 9412 0154 FB68     		ldr	r3, [r7, #12]
 9413              	.L466:
 9414              	.LBE621:
3693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
3694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
3697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
3698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
3700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 9415              		.loc 1 3700 9
 9416 0156 7B68     		ldr	r3, [r7, #4]
 9417 0158 9B8D     		ldrh	r3, [r3, #44]
 9418 015a 1946     		mov	r1, r3
 9419 015c 7868     		ldr	r0, [r7, #4]
 9420 015e FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 9421 0162 02E0     		b	.L467
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 242


 9422              	.L462:
3701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Standard reception API called */
3706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
3708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
3709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
3711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
 9423              		.loc 1 3711 9
 9424 0164 7868     		ldr	r0, [r7, #4]
 9425 0166 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 9426              	.L467:
3712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
 9427              		.loc 1 3715 14
 9428 016a 0023     		movs	r3, #0
 9429 016c 02E0     		b	.L468
 9430              	.L461:
3716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 9431              		.loc 1 3717 12
 9432 016e 0023     		movs	r3, #0
 9433 0170 00E0     		b	.L468
 9434              	.L455:
3718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 9435              		.loc 1 3721 12
 9436 0172 0223     		movs	r3, #2
 9437              	.L468:
3722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9438              		.loc 1 3723 1
 9439 0174 1846     		mov	r0, r3
 9440 0176 3037     		adds	r7, r7, #48
 9441              	.LCFI329:
 9442              		.cfi_def_cfa_offset 8
 9443 0178 BD46     		mov	sp, r7
 9444              	.LCFI330:
 9445              		.cfi_def_cfa_register 13
 9446              		@ sp needed
 9447 017a 80BD     		pop	{r7, pc}
 9448              		.cfi_endproc
 9449              	.LFE194:
 9451              		.global	__aeabi_uldivmod
 9452              		.section	.text.UART_SetConfig,"ax",%progbits
 9453              		.align	1
 9454              		.syntax unified
 9455              		.thumb
 9456              		.thumb_func
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 243


 9458              	UART_SetConfig:
 9459              	.LFB195:
3724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral.
3727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
3732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 9460              		.loc 1 3732 1
 9461              		.cfi_startproc
 9462              		@ args = 0, pretend = 0, frame = 256
 9463              		@ frame_needed = 1, uses_anonymous_args = 0
 9464 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 9465              	.LCFI331:
 9466              		.cfi_def_cfa_offset 32
 9467              		.cfi_offset 4, -32
 9468              		.cfi_offset 5, -28
 9469              		.cfi_offset 7, -24
 9470              		.cfi_offset 8, -20
 9471              		.cfi_offset 9, -16
 9472              		.cfi_offset 10, -12
 9473              		.cfi_offset 11, -8
 9474              		.cfi_offset 14, -4
 9475 0004 C0B0     		sub	sp, sp, #256
 9476              	.LCFI332:
 9477              		.cfi_def_cfa_offset 288
 9478 0006 00AF     		add	r7, sp, #0
 9479              	.LCFI333:
 9480              		.cfi_def_cfa_register 7
 9481 0008 C7F8F400 		str	r0, [r7, #244]
3733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg;
3734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t pclk;
3735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
3737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits
3744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      according to huart->Init.StopBits value */
3745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 9482              		.loc 1 3745 3
 9483 000c D7F8F430 		ldr	r3, [r7, #244]
 9484 0010 1B68     		ldr	r3, [r3]
 9485 0012 1B69     		ldr	r3, [r3, #16]
 9486 0014 23F44050 		bic	r0, r3, #12288
 9487 0018 D7F8F430 		ldr	r3, [r7, #244]
 9488 001c D968     		ldr	r1, [r3, #12]
 9489 001e D7F8F430 		ldr	r3, [r7, #244]
 9490 0022 1A68     		ldr	r2, [r3]
 9491 0024 40EA0103 		orr	r3, r0, r1
 9492 0028 1361     		str	r3, [r2, #16]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 244


3746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode:
3749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value
3750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
3751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
3752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
3753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 9493              		.loc 1 3754 33
 9494 002a D7F8F430 		ldr	r3, [r7, #244]
 9495 002e 9A68     		ldr	r2, [r3, #8]
 9496              		.loc 1 3754 58
 9497 0030 D7F8F430 		ldr	r3, [r7, #244]
 9498 0034 1B69     		ldr	r3, [r3, #16]
 9499              		.loc 1 3754 45
 9500 0036 1A43     		orrs	r2, r2, r3
 9501              		.loc 1 3754 79
 9502 0038 D7F8F430 		ldr	r3, [r7, #244]
 9503 003c 5B69     		ldr	r3, [r3, #20]
 9504              		.loc 1 3754 66
 9505 003e 1A43     		orrs	r2, r2, r3
 9506              		.loc 1 3754 98
 9507 0040 D7F8F430 		ldr	r3, [r7, #244]
 9508 0044 DB69     		ldr	r3, [r3, #28]
 9509              		.loc 1 3754 10
 9510 0046 1343     		orrs	r3, r3, r2
 9511 0048 C7F8F830 		str	r3, [r7, #248]
3755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 9512              		.loc 1 3755 3
 9513 004c D7F8F430 		ldr	r3, [r7, #244]
 9514 0050 1B68     		ldr	r3, [r3]
 9515 0052 DB68     		ldr	r3, [r3, #12]
 9516 0054 23F41641 		bic	r1, r3, #38400
 9517 0058 21F00C01 		bic	r1, r1, #12
 9518 005c D7F8F430 		ldr	r3, [r7, #244]
 9519 0060 1A68     		ldr	r2, [r3]
 9520 0062 D7F8F830 		ldr	r3, [r7, #248]
 9521 0066 0B43     		orrs	r3, r3, r1
 9522 0068 D360     		str	r3, [r2, #12]
3756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
3757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              tmpreg);
3758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
3761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 9523              		.loc 1 3761 3
 9524 006a D7F8F430 		ldr	r3, [r7, #244]
 9525 006e 1B68     		ldr	r3, [r3]
 9526 0070 5B69     		ldr	r3, [r3, #20]
 9527 0072 23F44070 		bic	r0, r3, #768
 9528 0076 D7F8F430 		ldr	r3, [r7, #244]
 9529 007a 9969     		ldr	r1, [r3, #24]
 9530 007c D7F8F430 		ldr	r3, [r7, #244]
 9531 0080 1A68     		ldr	r2, [r3]
 9532 0082 40EA0103 		orr	r3, r0, r1
 9533 0086 5361     		str	r3, [r2, #20]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 245


3762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) && defined(UART9) && defined(UART10)
3765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) ||
3766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #elif defined(USART6)
3770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6))
 9534              		.loc 1 3770 15
 9535 0088 D7F8F430 		ldr	r3, [r7, #244]
 9536 008c 1A68     		ldr	r2, [r3]
 9537              		.loc 1 3770 8
 9538 008e 8F4B     		ldr	r3, .L476
 9539 0090 9A42     		cmp	r2, r3
 9540 0092 05D0     		beq	.L470
 9541              		.loc 1 3770 46 discriminator 1
 9542 0094 D7F8F430 		ldr	r3, [r7, #244]
 9543 0098 1A68     		ldr	r2, [r3]
 9544              		.loc 1 3770 37 discriminator 1
 9545 009a 8D4B     		ldr	r3, .L476+4
 9546 009c 9A42     		cmp	r2, r3
 9547 009e 04D1     		bne	.L471
 9548              	.L470:
3771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
 9549              		.loc 1 3772 14
 9550 00a0 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 9551 00a4 C7F8FC00 		str	r0, [r7, #252]
 9552              		.loc 1 3772 12
 9553 00a8 03E0     		b	.L472
 9554              	.L471:
3773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Instance == USART1)
3776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
3780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
 9555              		.loc 1 3782 14
 9556 00aa FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 9557 00ae C7F8FC00 		str	r0, [r7, #252]
 9558              	.L472:
3783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration ---------------------*/
3785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 9559              		.loc 1 3785 18
 9560 00b2 D7F8F430 		ldr	r3, [r7, #244]
 9561 00b6 DB69     		ldr	r3, [r3, #28]
 9562              		.loc 1 3785 6
 9563 00b8 B3F5004F 		cmp	r3, #32768
 9564 00bc 40F00C81 		bne	.L473
3786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 246


 9565              		.loc 1 3787 28
 9566 00c0 D7F8FC30 		ldr	r3, [r7, #252]
 9567 00c4 0022     		movs	r2, #0
 9568 00c6 C7F8E830 		str	r3, [r7, #232]
 9569 00ca C7F8EC20 		str	r2, [r7, #236]
 9570 00ce D7E93A45 		ldrd	r4, [r7, #232]
 9571 00d2 2246     		mov	r2, r4
 9572 00d4 2B46     		mov	r3, r5
 9573 00d6 9118     		adds	r1, r2, r2
 9574 00d8 B965     		str	r1, [r7, #88]
 9575 00da 5B41     		adcs	r3, r3, r3
 9576 00dc FB65     		str	r3, [r7, #92]
 9577 00de D7E91623 		ldrd	r2, [r7, #88]
 9578 00e2 2146     		mov	r1, r4
 9579 00e4 12EB0108 		adds	r8, r2, r1
 9580 00e8 2946     		mov	r1, r5
 9581 00ea 43EB0109 		adc	r9, r3, r1
 9582 00ee 4FF00002 		mov	r2, #0
 9583 00f2 4FF00003 		mov	r3, #0
 9584 00f6 4FEAC903 		lsl	r3, r9, #3
 9585 00fa 43EA5873 		orr	r3, r3, r8, lsr #29
 9586 00fe 4FEAC802 		lsl	r2, r8, #3
 9587 0102 9046     		mov	r8, r2
 9588 0104 9946     		mov	r9, r3
 9589 0106 2346     		mov	r3, r4
 9590 0108 18EB0303 		adds	r3, r8, r3
 9591 010c C7F8E030 		str	r3, [r7, #224]
 9592 0110 2B46     		mov	r3, r5
 9593 0112 49EB0303 		adc	r3, r9, r3
 9594 0116 C7F8E430 		str	r3, [r7, #228]
 9595 011a D7F8F430 		ldr	r3, [r7, #244]
 9596 011e 5B68     		ldr	r3, [r3, #4]
 9597 0120 0022     		movs	r2, #0
 9598 0122 C7F8D830 		str	r3, [r7, #216]
 9599 0126 C7F8DC20 		str	r2, [r7, #220]
 9600 012a D7E93612 		ldrd	r1, [r7, #216]
 9601 012e 0B46     		mov	r3, r1
 9602 0130 DB18     		adds	r3, r3, r3
 9603 0132 3B65     		str	r3, [r7, #80]
 9604 0134 1346     		mov	r3, r2
 9605 0136 42EB0303 		adc	r3, r2, r3
 9606 013a 7B65     		str	r3, [r7, #84]
 9607 013c D7E91423 		ldrd	r2, [r7, #80]
 9608 0140 D7E93801 		ldrd	r0, [r7, #224]
 9609 0144 FFF7FEFF 		bl	__aeabi_uldivmod
 9610 0148 0246     		mov	r2, r0
 9611 014a 0B46     		mov	r3, r1
 9612 014c 614B     		ldr	r3, .L476+8
 9613 014e A3FB0223 		umull	r2, r3, r3, r2
 9614 0152 5B09     		lsrs	r3, r3, #5
 9615 0154 1C01     		lsls	r4, r3, #4
 9616 0156 D7F8FC30 		ldr	r3, [r7, #252]
 9617 015a 0022     		movs	r2, #0
 9618 015c C7F8D030 		str	r3, [r7, #208]
 9619 0160 C7F8D420 		str	r2, [r7, #212]
 9620 0164 D7E93489 		ldrd	r8, [r7, #208]
 9621 0168 4246     		mov	r2, r8
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 247


 9622 016a 4B46     		mov	r3, r9
 9623 016c 9118     		adds	r1, r2, r2
 9624 016e B964     		str	r1, [r7, #72]
 9625 0170 5B41     		adcs	r3, r3, r3
 9626 0172 FB64     		str	r3, [r7, #76]
 9627 0174 D7E91223 		ldrd	r2, [r7, #72]
 9628 0178 4146     		mov	r1, r8
 9629 017a 12EB010A 		adds	r10, r2, r1
 9630 017e 4946     		mov	r1, r9
 9631 0180 43EB010B 		adc	fp, r3, r1
 9632 0184 4FF00002 		mov	r2, #0
 9633 0188 4FF00003 		mov	r3, #0
 9634 018c 4FEACB03 		lsl	r3, fp, #3
 9635 0190 43EA5A73 		orr	r3, r3, r10, lsr #29
 9636 0194 4FEACA02 		lsl	r2, r10, #3
 9637 0198 9246     		mov	r10, r2
 9638 019a 9B46     		mov	fp, r3
 9639 019c 4346     		mov	r3, r8
 9640 019e 1AEB0303 		adds	r3, r10, r3
 9641 01a2 C7F8C830 		str	r3, [r7, #200]
 9642 01a6 4B46     		mov	r3, r9
 9643 01a8 4BEB0303 		adc	r3, fp, r3
 9644 01ac C7F8CC30 		str	r3, [r7, #204]
 9645 01b0 D7F8F430 		ldr	r3, [r7, #244]
 9646 01b4 5B68     		ldr	r3, [r3, #4]
 9647 01b6 0022     		movs	r2, #0
 9648 01b8 C7F8C030 		str	r3, [r7, #192]
 9649 01bc C7F8C420 		str	r2, [r7, #196]
 9650 01c0 D7E93012 		ldrd	r1, [r7, #192]
 9651 01c4 0B46     		mov	r3, r1
 9652 01c6 DB18     		adds	r3, r3, r3
 9653 01c8 3B64     		str	r3, [r7, #64]
 9654 01ca 1346     		mov	r3, r2
 9655 01cc 42EB0303 		adc	r3, r2, r3
 9656 01d0 7B64     		str	r3, [r7, #68]
 9657 01d2 D7E91023 		ldrd	r2, [r7, #64]
 9658 01d6 D7E93201 		ldrd	r0, [r7, #200]
 9659 01da FFF7FEFF 		bl	__aeabi_uldivmod
 9660 01de 0246     		mov	r2, r0
 9661 01e0 0B46     		mov	r3, r1
 9662 01e2 1146     		mov	r1, r2
 9663 01e4 3B4B     		ldr	r3, .L476+8
 9664 01e6 A3FB0123 		umull	r2, r3, r3, r1
 9665 01ea 5B09     		lsrs	r3, r3, #5
 9666 01ec 6422     		movs	r2, #100
 9667 01ee 02FB03F3 		mul	r3, r2, r3
 9668 01f2 CB1A     		subs	r3, r1, r3
 9669 01f4 DB00     		lsls	r3, r3, #3
 9670 01f6 03F13202 		add	r2, r3, #50
 9671 01fa 364B     		ldr	r3, .L476+8
 9672 01fc A3FB0223 		umull	r2, r3, r3, r2
 9673 0200 5B09     		lsrs	r3, r3, #5
 9674 0202 5B00     		lsls	r3, r3, #1
 9675 0204 03F4F873 		and	r3, r3, #496
 9676 0208 1C44     		add	r4, r4, r3
 9677 020a D7F8FC30 		ldr	r3, [r7, #252]
 9678 020e 0022     		movs	r2, #0
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 248


 9679 0210 C7F8B830 		str	r3, [r7, #184]
 9680 0214 C7F8BC20 		str	r2, [r7, #188]
 9681 0218 D7E92E89 		ldrd	r8, [r7, #184]
 9682 021c 4246     		mov	r2, r8
 9683 021e 4B46     		mov	r3, r9
 9684 0220 9118     		adds	r1, r2, r2
 9685 0222 B963     		str	r1, [r7, #56]
 9686 0224 5B41     		adcs	r3, r3, r3
 9687 0226 FB63     		str	r3, [r7, #60]
 9688 0228 D7E90E23 		ldrd	r2, [r7, #56]
 9689 022c 4146     		mov	r1, r8
 9690 022e 5118     		adds	r1, r2, r1
 9691 0230 3963     		str	r1, [r7, #48]
 9692 0232 4946     		mov	r1, r9
 9693 0234 4B41     		adcs	r3, r3, r1
 9694 0236 7B63     		str	r3, [r7, #52]
 9695 0238 4FF00002 		mov	r2, #0
 9696 023c 4FF00003 		mov	r3, #0
 9697 0240 D7E90CAB 		ldrd	r10, [r7, #48]
 9698 0244 5946     		mov	r1, fp
 9699 0246 CB00     		lsls	r3, r1, #3
 9700 0248 5146     		mov	r1, r10
 9701 024a 43EA5173 		orr	r3, r3, r1, lsr #29
 9702 024e 5146     		mov	r1, r10
 9703 0250 CA00     		lsls	r2, r1, #3
 9704 0252 1046     		mov	r0, r2
 9705 0254 1946     		mov	r1, r3
 9706 0256 0346     		mov	r3, r0
 9707 0258 4246     		mov	r2, r8
 9708 025a 9B18     		adds	r3, r3, r2
 9709 025c C7F8B030 		str	r3, [r7, #176]
 9710 0260 4B46     		mov	r3, r9
 9711 0262 0A46     		mov	r2, r1
 9712 0264 42EB0303 		adc	r3, r2, r3
 9713 0268 C7F8B430 		str	r3, [r7, #180]
 9714 026c D7F8F430 		ldr	r3, [r7, #244]
 9715 0270 5B68     		ldr	r3, [r3, #4]
 9716 0272 0022     		movs	r2, #0
 9717 0274 C7F8A830 		str	r3, [r7, #168]
 9718 0278 C7F8AC20 		str	r2, [r7, #172]
 9719 027c D7E92A12 		ldrd	r1, [r7, #168]
 9720 0280 0B46     		mov	r3, r1
 9721 0282 DB18     		adds	r3, r3, r3
 9722 0284 BB62     		str	r3, [r7, #40]
 9723 0286 1346     		mov	r3, r2
 9724 0288 42EB0303 		adc	r3, r2, r3
 9725 028c FB62     		str	r3, [r7, #44]
 9726 028e D7E90A23 		ldrd	r2, [r7, #40]
 9727 0292 D7E92C01 		ldrd	r0, [r7, #176]
 9728 0296 FFF7FEFF 		bl	__aeabi_uldivmod
 9729 029a 0246     		mov	r2, r0
 9730 029c 0B46     		mov	r3, r1
 9731 029e 0D4B     		ldr	r3, .L476+8
 9732 02a0 A3FB0213 		umull	r1, r3, r3, r2
 9733 02a4 5B09     		lsrs	r3, r3, #5
 9734 02a6 6421     		movs	r1, #100
 9735 02a8 01FB03F3 		mul	r3, r1, r3
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 249


 9736 02ac D31A     		subs	r3, r2, r3
 9737 02ae DB00     		lsls	r3, r3, #3
 9738 02b0 3233     		adds	r3, r3, #50
 9739 02b2 084A     		ldr	r2, .L476+8
 9740 02b4 A2FB0323 		umull	r2, r3, r2, r3
 9741 02b8 5B09     		lsrs	r3, r3, #5
 9742 02ba 03F00702 		and	r2, r3, #7
 9743              		.loc 1 3787 10
 9744 02be D7F8F430 		ldr	r3, [r7, #244]
 9745 02c2 1B68     		ldr	r3, [r3]
 9746              		.loc 1 3787 28
 9747 02c4 2244     		add	r2, r2, r4
 9748              		.loc 1 3787 26
 9749 02c6 9A60     		str	r2, [r3, #8]
3788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9750              		.loc 1 3793 1
 9751 02c8 06E1     		b	.L475
 9752              	.L477:
 9753 02ca 00BF     		.align	2
 9754              	.L476:
 9755 02cc 00100140 		.word	1073811456
 9756 02d0 00140140 		.word	1073812480
 9757 02d4 1F85EB51 		.word	1374389535
 9758              	.L473:
3791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 9759              		.loc 1 3791 28
 9760 02d8 D7F8FC30 		ldr	r3, [r7, #252]
 9761 02dc 0022     		movs	r2, #0
 9762 02de C7F8A030 		str	r3, [r7, #160]
 9763 02e2 C7F8A420 		str	r2, [r7, #164]
 9764 02e6 D7E92889 		ldrd	r8, [r7, #160]
 9765 02ea 4246     		mov	r2, r8
 9766 02ec 4B46     		mov	r3, r9
 9767 02ee 9118     		adds	r1, r2, r2
 9768 02f0 3962     		str	r1, [r7, #32]
 9769 02f2 5B41     		adcs	r3, r3, r3
 9770 02f4 7B62     		str	r3, [r7, #36]
 9771 02f6 D7E90823 		ldrd	r2, [r7, #32]
 9772 02fa 4146     		mov	r1, r8
 9773 02fc 5418     		adds	r4, r2, r1
 9774 02fe 4946     		mov	r1, r9
 9775 0300 43EB0105 		adc	r5, r3, r1
 9776 0304 4FF00002 		mov	r2, #0
 9777 0308 4FF00003 		mov	r3, #0
 9778 030c EB00     		lsls	r3, r5, #3
 9779 030e 43EA5473 		orr	r3, r3, r4, lsr #29
 9780 0312 E200     		lsls	r2, r4, #3
 9781 0314 1446     		mov	r4, r2
 9782 0316 1D46     		mov	r5, r3
 9783 0318 4346     		mov	r3, r8
 9784 031a E318     		adds	r3, r4, r3
 9785 031c C7F89830 		str	r3, [r7, #152]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 250


 9786 0320 4B46     		mov	r3, r9
 9787 0322 45EB0303 		adc	r3, r5, r3
 9788 0326 C7F89C30 		str	r3, [r7, #156]
 9789 032a D7F8F430 		ldr	r3, [r7, #244]
 9790 032e 5B68     		ldr	r3, [r3, #4]
 9791 0330 0022     		movs	r2, #0
 9792 0332 C7F89030 		str	r3, [r7, #144]
 9793 0336 C7F89420 		str	r2, [r7, #148]
 9794 033a 4FF00002 		mov	r2, #0
 9795 033e 4FF00003 		mov	r3, #0
 9796 0342 D7E92445 		ldrd	r4, [r7, #144]
 9797 0346 2946     		mov	r1, r5
 9798 0348 8B00     		lsls	r3, r1, #2
 9799 034a 2146     		mov	r1, r4
 9800 034c 43EA9173 		orr	r3, r3, r1, lsr #30
 9801 0350 2146     		mov	r1, r4
 9802 0352 8A00     		lsls	r2, r1, #2
 9803 0354 D7E92601 		ldrd	r0, [r7, #152]
 9804 0358 FFF7FEFF 		bl	__aeabi_uldivmod
 9805 035c 0246     		mov	r2, r0
 9806 035e 0B46     		mov	r3, r1
 9807 0360 604B     		ldr	r3, .L478
 9808 0362 A3FB0223 		umull	r2, r3, r3, r2
 9809 0366 5B09     		lsrs	r3, r3, #5
 9810 0368 1C01     		lsls	r4, r3, #4
 9811 036a D7F8FC30 		ldr	r3, [r7, #252]
 9812 036e 0022     		movs	r2, #0
 9813 0370 C7F88830 		str	r3, [r7, #136]
 9814 0374 C7F88C20 		str	r2, [r7, #140]
 9815 0378 D7E92289 		ldrd	r8, [r7, #136]
 9816 037c 4246     		mov	r2, r8
 9817 037e 4B46     		mov	r3, r9
 9818 0380 9118     		adds	r1, r2, r2
 9819 0382 B961     		str	r1, [r7, #24]
 9820 0384 5B41     		adcs	r3, r3, r3
 9821 0386 FB61     		str	r3, [r7, #28]
 9822 0388 D7E90623 		ldrd	r2, [r7, #24]
 9823 038c 4146     		mov	r1, r8
 9824 038e 5118     		adds	r1, r2, r1
 9825 0390 3961     		str	r1, [r7, #16]
 9826 0392 4946     		mov	r1, r9
 9827 0394 4B41     		adcs	r3, r3, r1
 9828 0396 7B61     		str	r3, [r7, #20]
 9829 0398 4FF00002 		mov	r2, #0
 9830 039c 4FF00003 		mov	r3, #0
 9831 03a0 D7E904AB 		ldrd	r10, [r7, #16]
 9832 03a4 5946     		mov	r1, fp
 9833 03a6 CB00     		lsls	r3, r1, #3
 9834 03a8 5146     		mov	r1, r10
 9835 03aa 43EA5173 		orr	r3, r3, r1, lsr #29
 9836 03ae 5146     		mov	r1, r10
 9837 03b0 CA00     		lsls	r2, r1, #3
 9838 03b2 1046     		mov	r0, r2
 9839 03b4 1946     		mov	r1, r3
 9840 03b6 0346     		mov	r3, r0
 9841 03b8 4246     		mov	r2, r8
 9842 03ba 9B18     		adds	r3, r3, r2
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 251


 9843 03bc C7F88030 		str	r3, [r7, #128]
 9844 03c0 4B46     		mov	r3, r9
 9845 03c2 0A46     		mov	r2, r1
 9846 03c4 42EB0303 		adc	r3, r2, r3
 9847 03c8 C7F88430 		str	r3, [r7, #132]
 9848 03cc D7F8F430 		ldr	r3, [r7, #244]
 9849 03d0 5B68     		ldr	r3, [r3, #4]
 9850 03d2 0022     		movs	r2, #0
 9851 03d4 BB67     		str	r3, [r7, #120]
 9852 03d6 FA67     		str	r2, [r7, #124]
 9853 03d8 4FF00002 		mov	r2, #0
 9854 03dc 4FF00003 		mov	r3, #0
 9855 03e0 D7E91E89 		ldrd	r8, [r7, #120]
 9856 03e4 4946     		mov	r1, r9
 9857 03e6 8B00     		lsls	r3, r1, #2
 9858 03e8 4146     		mov	r1, r8
 9859 03ea 43EA9173 		orr	r3, r3, r1, lsr #30
 9860 03ee 4146     		mov	r1, r8
 9861 03f0 8A00     		lsls	r2, r1, #2
 9862 03f2 D7E92001 		ldrd	r0, [r7, #128]
 9863 03f6 FFF7FEFF 		bl	__aeabi_uldivmod
 9864 03fa 0246     		mov	r2, r0
 9865 03fc 0B46     		mov	r3, r1
 9866 03fe 1146     		mov	r1, r2
 9867 0400 384B     		ldr	r3, .L478
 9868 0402 A3FB0123 		umull	r2, r3, r3, r1
 9869 0406 5B09     		lsrs	r3, r3, #5
 9870 0408 6422     		movs	r2, #100
 9871 040a 02FB03F3 		mul	r3, r2, r3
 9872 040e CB1A     		subs	r3, r1, r3
 9873 0410 1B01     		lsls	r3, r3, #4
 9874 0412 3233     		adds	r3, r3, #50
 9875 0414 334A     		ldr	r2, .L478
 9876 0416 A2FB0323 		umull	r2, r3, r2, r3
 9877 041a 5B09     		lsrs	r3, r3, #5
 9878 041c 03F0F003 		and	r3, r3, #240
 9879 0420 1C44     		add	r4, r4, r3
 9880 0422 D7F8FC30 		ldr	r3, [r7, #252]
 9881 0426 0022     		movs	r2, #0
 9882 0428 3B67     		str	r3, [r7, #112]
 9883 042a 7A67     		str	r2, [r7, #116]
 9884 042c D7E91C89 		ldrd	r8, [r7, #112]
 9885 0430 4246     		mov	r2, r8
 9886 0432 4B46     		mov	r3, r9
 9887 0434 9118     		adds	r1, r2, r2
 9888 0436 B960     		str	r1, [r7, #8]
 9889 0438 5B41     		adcs	r3, r3, r3
 9890 043a FB60     		str	r3, [r7, #12]
 9891 043c D7E90223 		ldrd	r2, [r7, #8]
 9892 0440 4146     		mov	r1, r8
 9893 0442 5118     		adds	r1, r2, r1
 9894 0444 3960     		str	r1, [r7]
 9895 0446 4946     		mov	r1, r9
 9896 0448 4B41     		adcs	r3, r3, r1
 9897 044a 7B60     		str	r3, [r7, #4]
 9898 044c 4FF00002 		mov	r2, #0
 9899 0450 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 252


 9900 0454 D7E900AB 		ldrd	r10, [r7]
 9901 0458 5946     		mov	r1, fp
 9902 045a CB00     		lsls	r3, r1, #3
 9903 045c 5146     		mov	r1, r10
 9904 045e 43EA5173 		orr	r3, r3, r1, lsr #29
 9905 0462 5146     		mov	r1, r10
 9906 0464 CA00     		lsls	r2, r1, #3
 9907 0466 1046     		mov	r0, r2
 9908 0468 1946     		mov	r1, r3
 9909 046a 0346     		mov	r3, r0
 9910 046c 4246     		mov	r2, r8
 9911 046e 9B18     		adds	r3, r3, r2
 9912 0470 BB66     		str	r3, [r7, #104]
 9913 0472 4B46     		mov	r3, r9
 9914 0474 0A46     		mov	r2, r1
 9915 0476 42EB0303 		adc	r3, r2, r3
 9916 047a FB66     		str	r3, [r7, #108]
 9917 047c D7F8F430 		ldr	r3, [r7, #244]
 9918 0480 5B68     		ldr	r3, [r3, #4]
 9919 0482 0022     		movs	r2, #0
 9920 0484 3B66     		str	r3, [r7, #96]
 9921 0486 7A66     		str	r2, [r7, #100]
 9922 0488 4FF00002 		mov	r2, #0
 9923 048c 4FF00003 		mov	r3, #0
 9924 0490 D7E91889 		ldrd	r8, [r7, #96]
 9925 0494 4946     		mov	r1, r9
 9926 0496 8B00     		lsls	r3, r1, #2
 9927 0498 4146     		mov	r1, r8
 9928 049a 43EA9173 		orr	r3, r3, r1, lsr #30
 9929 049e 4146     		mov	r1, r8
 9930 04a0 8A00     		lsls	r2, r1, #2
 9931 04a2 D7E91A01 		ldrd	r0, [r7, #104]
 9932 04a6 FFF7FEFF 		bl	__aeabi_uldivmod
 9933 04aa 0246     		mov	r2, r0
 9934 04ac 0B46     		mov	r3, r1
 9935 04ae 0D4B     		ldr	r3, .L478
 9936 04b0 A3FB0213 		umull	r1, r3, r3, r2
 9937 04b4 5B09     		lsrs	r3, r3, #5
 9938 04b6 6421     		movs	r1, #100
 9939 04b8 01FB03F3 		mul	r3, r1, r3
 9940 04bc D31A     		subs	r3, r2, r3
 9941 04be 1B01     		lsls	r3, r3, #4
 9942 04c0 3233     		adds	r3, r3, #50
 9943 04c2 084A     		ldr	r2, .L478
 9944 04c4 A2FB0323 		umull	r2, r3, r2, r3
 9945 04c8 5B09     		lsrs	r3, r3, #5
 9946 04ca 03F00F02 		and	r2, r3, #15
3791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 9947              		.loc 1 3791 10
 9948 04ce D7F8F430 		ldr	r3, [r7, #244]
 9949 04d2 1B68     		ldr	r3, [r3]
3791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 9950              		.loc 1 3791 28
 9951 04d4 2244     		add	r2, r2, r4
3791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 9952              		.loc 1 3791 26
 9953 04d6 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 253


 9954              	.L475:
 9955              		.loc 1 3793 1
 9956 04d8 00BF     		nop
 9957 04da 07F58077 		add	r7, r7, #256
 9958              	.LCFI334:
 9959              		.cfi_def_cfa_offset 32
 9960 04de BD46     		mov	sp, r7
 9961              	.LCFI335:
 9962              		.cfi_def_cfa_register 13
 9963              		@ sp needed
 9964 04e0 BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 9965              	.L479:
 9966              		.align	2
 9967              	.L478:
 9968 04e4 1F85EB51 		.word	1374389535
 9969              		.cfi_endproc
 9970              	.LFE195:
 9972              		.text
 9973              	.Letext0:
 9974              		.file 3 "D:/enviroment/msys2/mingw64/arm-none-eabi/include/machine/_default_types.h"
 9975              		.file 4 "D:/enviroment/msys2/mingw64/arm-none-eabi/include/sys/_stdint.h"
 9976              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 9977              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 9978              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 9979              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 9980              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 9981              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 9982              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 254


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_uart.c
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:21     .text.HAL_UART_Init:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:27     .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:662    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:9458   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:140    .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:146    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:267    .text.HAL_LIN_Init:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:273    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:412    .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:418    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:568    .text.HAL_UART_DeInit:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:574    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:704    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:656    .text.HAL_UART_MspInit:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:698    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:740    .text.HAL_UART_Transmit:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:746    .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:7789   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:957    .text.HAL_UART_Receive:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:963    .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:1194   .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:1200   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:1294   .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:1300   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:7931   .text.UART_Start_Receive_IT:00000000 UART_Start_Receive_IT
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:1371   .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:1377   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:1573   .text.HAL_UART_Transmit_DMA:000000ec $d
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:7105   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:7269   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:7673   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:1580   .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:1586   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8029   .text.UART_Start_Receive_DMA:00000000 UART_Start_Receive_DMA
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:1657   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:1663   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:1956   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:1962   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:2240   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:2246   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8324   .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8420   .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:2463   .text.HAL_UARTEx_ReceiveToIdle:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:2469   .text.HAL_UARTEx_ReceiveToIdle:00000000 HAL_UARTEx_ReceiveToIdle
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:2781   .text.HAL_UARTEx_ReceiveToIdle_IT:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:2787   .text.HAL_UARTEx_ReceiveToIdle_IT:00000000 HAL_UARTEx_ReceiveToIdle_IT
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:2946   .text.HAL_UARTEx_ReceiveToIdle_DMA:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:2952   .text.HAL_UARTEx_ReceiveToIdle_DMA:00000000 HAL_UARTEx_ReceiveToIdle_DMA
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:3107   .text.HAL_UARTEx_GetRxEventType:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:3113   .text.HAL_UARTEx_GetRxEventType:00000000 HAL_UARTEx_GetRxEventType
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:3152   .text.HAL_UART_Abort:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:3158   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:3571   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:3577   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:3768   .text.HAL_UART_AbortReceive:00000000 $t
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 255


C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:3774   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:4078   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:4084   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6264   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:4545   .text.HAL_UART_Abort_IT:00000220 $d
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8677   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8770   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:4551   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:4557   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6306   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:4760   .text.HAL_UART_AbortTransmit_IT:000000e4 $d
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8863   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:4765   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:4771   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6348   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:5091   .text.HAL_UART_AbortReceive_IT:00000160 $d
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8915   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:5096   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:5102   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:9162   .text.UART_Receive_IT:00000000 UART_Receive_IT
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6222   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6390   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:5785   .text.HAL_UART_IRQHandler:00000410 $d
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8629   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:5790   .text.HAL_UART_IRQHandler:00000414 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8971   .text.UART_Transmit_IT:00000000 UART_Transmit_IT
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:9108   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6048   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6054   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6090   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6096   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6132   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6138   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6174   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6180   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6216   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6258   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6300   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6342   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6384   .text.HAL_UARTEx_RxEventCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6428   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6434   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6550   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6556   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6676   .text.HAL_MultiProcessor_ExitMuteMode:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6682   .text.HAL_MultiProcessor_ExitMuteMode:00000000 HAL_MultiProcessor_ExitMuteMode
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6802   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6808   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6895   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6901   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6988   .text.HAL_UART_GetState:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:6994   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:7055   .text.HAL_UART_GetError:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:7061   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:7100   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:7264   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:7308   .text.UART_DMAReceiveCplt:00000000 $t
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 256


C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:7313   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:7601   .text.UART_DMARxHalfCplt:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:7606   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:7668   .text.UART_DMAError:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:7784   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:7925   .text.UART_Start_Receive_IT:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8023   .text.UART_Start_Receive_DMA:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8312   .text.UART_Start_Receive_DMA:00000140 $d
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8319   .text.UART_EndTxTransfer:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8415   .text.UART_EndRxTransfer:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8624   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8672   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8765   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8858   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8910   .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:8966   .text.UART_Transmit_IT:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:9103   .text.UART_EndTransmit_IT:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:9157   .text.UART_Receive_IT:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:9453   .text.UART_SetConfig:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:9755   .text.UART_SetConfig:000002cc $d
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:9760   .text.UART_SetConfig:000002d8 $t
C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s:9968   .text.UART_SetConfig:000004e4 $d
                           .group:00000000 wm4.0.3e68c699c40fadf7e6c1e499de837233
                           .group:00000000 wm4.stm32f4xx_hal_conf.h.25.a9a6e27d8b41172b5af7d7631d763ee0
                           .group:00000000 wm4.stm32f4xx.h.38.63e3ea23bd63a94457417730025259b6
                           .group:00000000 wm4.stm32f446xx.h.34.dd43cebd7192f96bce7a5ff975201274
                           .group:00000000 wm4._newlib_version.h.4.0eb654b64686e2bd29646258853f6c22
                           .group:00000000 wm4.features.h.33.d554620bb17bd3b714c3fb5c268772bc
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_version.h.32.0ac195c83bb4537824e6ad1c47474b79
                           .group:00000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:00000000 wm4.cmsis_gcc.h.26.498d0ad17a45fc9ef20fdc01caf02259
                           .group:00000000 wm4.core_cm4.h.174.62be9b4588d49bed18171771001331df
                           .group:00000000 wm4.mpu_armv7.h.32.83326921a797fa9d6f70449916b4b839
                           .group:00000000 wm4.stm32f446xx.h.917.13927c85cbbf4787955bc4173c54fa12
                           .group:00000000 wm4.stm32f4xx.h.195.a4b8bf80f37cc96981498656ffe5f588
                           .group:00000000 wm4.stm32_hal_legacy.h.22.8b7d303dc46a0b7ac6d3edf19ce2608d
                           .group:00000000 wm4.stddef.h.39.0dc9006b34572d4d9cae4c8b422c4971
                           .group:00000000 wm4.stm32f4xx_hal_def.h.58.3cb484e92e5ccf2e55312a4714e27917
                           .group:00000000 wm4.stm32f4xx_hal_rcc_ex.h.20.9b6e314009d4800dd71c0ec1c264a1ea
                           .group:00000000 wm4.stm32f4xx_hal_rcc.h.106.0887cf5d985ae88e345b0aed0ceb4729
                           .group:00000000 wm4.stm32f4xx_hal_gpio.h.21.22da6a14b6049d6ac156577be74df1d7
                           .group:00000000 wm4.stm32f4xx_hal_gpio_ex.h.21.33ea7ea24fd170b1d3dce3d23330c9d3
                           .group:00000000 wm4.stm32f4xx_hal_gpio.h.254.d7e07832f748fe8bcb575db0b8373592
                           .group:00000000 wm4.stm32f4xx_hal_exti.h.21.4fc7f37c3cc97fb821b368ede79414b6
                           .group:00000000 wm4.stm32f4xx_hal_dma.h.21.8e4b1421c914345c23be719e5e528779
                           .group:00000000 wm4.stm32f4xx_hal_dma.h.720.ac2d7eef74792e4026acc4d2923c5da4
                           .group:00000000 wm4.stm32f4xx_hal_cortex.h.20.03673e4f79386680bf73ba399c19306b
                           .group:00000000 wm4.stm32f4xx_hal_can.h.21.4b16c8dedf31ba328482231f811a7e65
                           .group:00000000 wm4.stm32f4xx_hal_flash.h.20.2f1e0d1b7010b3a81a7980aaf712e7e5
                           .group:00000000 wm4.stm32f4xx_hal_flash_ex.h.20.77cb3e5c0f1e426426a4cbc884a1eed8
                           .group:00000000 wm4.stm32f4xx_hal_flash.h.361.23bc19b9eac79b0956d913651841ede8
                           .group:00000000 wm4.stm32f4xx_hal_pwr.h.20.1905a0783a9c83adefd7df0c4b501e40
                           .group:00000000 wm4.stm32f4xx_hal_pwr_ex.h.20.9786dbd699c850465fa7b77273740267
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccLgeVrq.s 			page 257


                           .group:00000000 wm4.stm32f4xx_hal_pwr.h.338.debc0a4a62ba54688e63ab53dd99c4ea
                           .group:00000000 wm4.stm32f4xx_hal_uart.h.21.ba8e24dd05c77faac3f3d48472e636ba
                           .group:00000000 wm4.stm32f4xx_hal.h.71.02372bc31d47d29d3f67fbfe1429649e

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
__aeabi_uldivmod
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq
