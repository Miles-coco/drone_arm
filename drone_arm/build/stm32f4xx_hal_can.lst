ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_can.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c"
  20              		.section	.text.HAL_CAN_Init,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_CAN_Init
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_CAN_Init:
  28              	.LFB134:
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @file    stm32f4xx_hal_can.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief   CAN HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          functionalities of the Controller Area Network (CAN) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Configuration functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Control functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Interrupts management
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Callbacks functions
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Peripheral State and Error functions
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @attention
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * Copyright (c) 2016 STMicroelectronics.
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * All rights reserved.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * This software is licensed under terms that can be found in the LICENSE file
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * in the root directory of this software component.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   @verbatim
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                         ##### How to use this driver #####
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Initialize the CAN low level resources by implementing the
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_MspInit():
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****          (++) Enable the CAN interface clock using __HAL_RCC_CANx_CLK_ENABLE()
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****          (++) Configure CAN pins
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) Enable the clock for the CAN GPIOs
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) Configure CAN pins as alternate function
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****          (++) In case of using interrupts (e.g. HAL_CAN_ActivateNotification())
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) Configure the CAN interrupt priority using
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                    HAL_NVIC_SetPriority()
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) Enable the CAN IRQ handler using HAL_NVIC_EnableIRQ()
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) In CAN IRQ handler, call HAL_CAN_IRQHandler()
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Initialize the CAN peripheral using HAL_CAN_Init() function. This
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           function resorts to HAL_CAN_MspInit() for low-level initialization.
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Configure the reception filters using the following configuration
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           functions:
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_ConfigFilter()
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Start the CAN module using HAL_CAN_Start() function. At this level
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           the node is active on the bus: it receive messages, and can send
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           messages.
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) To manage messages transmission, the following Tx control functions
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           can be used:
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_AddTxMessage() to request transmission of a new
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  message.
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_AbortTxRequest() to abort transmission of a pending
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  message.
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_GetTxMailboxesFreeLevel() to get the number of free Tx
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  mailboxes.
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_IsTxMessagePending() to check if a message is pending
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  in a Tx mailbox.
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_GetTxTimestamp() to get the timestamp of Tx message
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  sent, if time triggered communication mode is enabled.
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) When a message is received into the CAN Rx FIFOs, it can be retrieved
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           using the HAL_CAN_GetRxMessage() function. The function
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_GetRxFifoFillLevel() allows to know how many Rx message are
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           stored in the Rx Fifo.
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Calling the HAL_CAN_Stop() function stops the CAN module.
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) The deinitialization is achieved with HAL_CAN_DeInit() function.
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       *** Polling mode operation ***
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       ==============================
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Reception:
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Monitor reception of message using HAL_CAN_GetRxFifoFillLevel()
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  until at least one message is received.
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Then get the message using HAL_CAN_GetRxMessage().
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Transmission:
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Monitor the Tx mailboxes availability until at least one Tx
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  mailbox is free, using HAL_CAN_GetTxMailboxesFreeLevel().
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Then request transmission of a message using
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  HAL_CAN_AddTxMessage().
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       *** Interrupt mode operation ***
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       ================================
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Notifications are activated using HAL_CAN_ActivateNotification()
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           function. Then, the process can be controlled through the
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           available user callbacks: HAL_CAN_xxxCallback(), using same APIs
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_GetRxMessage() and HAL_CAN_AddTxMessage().
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Notifications can be deactivated using
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_DeactivateNotification() function.
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Special care should be taken for CAN_IT_RX_FIFO0_MSG_PENDING and
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           CAN_IT_RX_FIFO1_MSG_PENDING notifications. These notifications trig
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           the callbacks HAL_CAN_RxFIFO0MsgPendingCallback() and
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_RxFIFO1MsgPendingCallback(). User has two possible options
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           here.
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Directly get the Rx message in the callback, using
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  HAL_CAN_GetRxMessage().
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Or deactivate the notification in the callback without
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  getting the Rx message. The Rx message can then be got later
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  using HAL_CAN_GetRxMessage(). Once the Rx message have been
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  read, the notification can be activated again.
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       *** Sleep mode ***
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       ==================
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) The CAN peripheral can be put in sleep mode (low power), using
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_RequestSleep(). The sleep mode will be entered as soon as the
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           current CAN activity (transmission or reception of a CAN frame) will
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           be completed.
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) A notification can be activated to be informed when the sleep mode
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           will be entered.
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) It can be checked if the sleep mode is entered using
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_IsSleepActive().
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           Note that the CAN state (accessible from the API HAL_CAN_GetState())
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           is HAL_CAN_STATE_SLEEP_PENDING as soon as the sleep mode request is
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           submitted (the sleep mode is not yet entered), and become
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_STATE_SLEEP_ACTIVE when the sleep mode is effective.
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) The wake-up from sleep mode can be triggered by two ways:
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Using HAL_CAN_WakeUp(). When returning from this function,
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  the sleep mode is exited (if return status is HAL_OK).
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) When a start of Rx CAN frame is detected by the CAN peripheral,
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  if automatic wake up mode is enabled.
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *** Callback registration ***
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   =============================================
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   The compilation define  USE_HAL_CAN_REGISTER_CALLBACKS when set to 1
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   allows the user to configure dynamically the driver callbacks.
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Use Function HAL_CAN_RegisterCallback() to register an interrupt callback.
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Function HAL_CAN_RegisterCallback() allows to register following callbacks:
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   and a pointer to the user callback function.
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Use function HAL_CAN_UnRegisterCallback() to reset a callback to the default
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   weak function.
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_UnRegisterCallback takes as parameters the HAL peripheral handle,
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   and the Callback ID.
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   This function allows to reset following callbacks:
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   By default, after the HAL_CAN_Init() and when the state is HAL_CAN_STATE_RESET,
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   all callbacks are set to the corresponding weak functions:
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   example HAL_CAN_ErrorCallback().
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Exception done for MspInit and MspDeInit functions that are
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   reset to the legacy weak function in the HAL_CAN_Init()/ HAL_CAN_DeInit() only when
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   these callbacks are null (not registered beforehand).
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if not, MspInit or MspDeInit are not null, the HAL_CAN_Init()/ HAL_CAN_DeInit()
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Callbacks can be registered/unregistered in HAL_CAN_STATE_READY state only.
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   in HAL_CAN_STATE_READY or HAL_CAN_STATE_RESET state,
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   In that case first register the MspInit/MspDeInit user callbacks
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   using HAL_CAN_RegisterCallback() before calling HAL_CAN_DeInit()
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   or HAL_CAN_Init() function.
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   When The compilation define USE_HAL_CAN_REGISTER_CALLBACKS is set to 0 or
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   not defined, the callback registration feature is not available and all callbacks
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   are set to the corresponding weak functions.
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   @endverbatim
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Includes ------------------------------------------------------------------*/
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #include "stm32f4xx_hal.h"
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @addtogroup STM32F4xx_HAL_Driver
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if defined(CAN1)
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN CAN
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief CAN driver modules
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #ifdef HAL_CAN_MODULE_ENABLED
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #ifdef HAL_CAN_LEGACY_MODULE_ENABLED
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #error "The CAN driver cannot be used with its legacy, Please enable only one CAN module at once"
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* HAL_CAN_LEGACY_MODULE_ENABLED */
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private typedef -----------------------------------------------------------*/
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private define ------------------------------------------------------------*/
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Private_Constants CAN Private Constants
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #define CAN_TIMEOUT_VALUE 10U
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #define CAN_WAKEUP_TIMEOUT_COUNTER 1000000U
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private macro -------------------------------------------------------------*/
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private variables ---------------------------------------------------------*/
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private function prototypes -----------------------------------------------*/
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Exported functions --------------------------------------------------------*/
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions CAN Exported Functions
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group1 Initialization and de-initialization functions
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief    Initialization and Configuration functions
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****               ##### Initialization and de-initialization functions #####
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 6


 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_Init                       : Initialize and configure the CAN.
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_DeInit                     : De-initialize the CAN.
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_MspInit                    : Initialize the CAN MSP.
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_MspDeInit                  : DeInitialize the CAN MSP.
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         parameters in the CAN_InitStruct.
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef *hcan)
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
  29              		.loc 1 276 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 84B0     		sub	sp, sp, #16
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check CAN handle */
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan == NULL)
  45              		.loc 1 280 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
  49              		.loc 1 282 12
  50 000e 0123     		movs	r3, #1
  51 0010 EDE0     		b	.L3
  52              	.L2:
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check the parameters */
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 7


 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Reset callbacks to legacy functions */
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo0MsgPendingCallback  =  HAL_CAN_RxFifo0MsgPendingCallback;  /* Legacy weak RxFifo0M
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo0FullCallback        =  HAL_CAN_RxFifo0FullCallback;        /* Legacy weak RxFifo0F
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo1MsgPendingCallback  =  HAL_CAN_RxFifo1MsgPendingCallback;  /* Legacy weak RxFifo1M
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo1FullCallback        =  HAL_CAN_RxFifo1FullCallback;        /* Legacy weak RxFifo1F
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox0CompleteCallback =  HAL_CAN_TxMailbox0CompleteCallback; /* Legacy weak TxMailbo
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox1CompleteCallback =  HAL_CAN_TxMailbox1CompleteCallback; /* Legacy weak TxMailbo
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox2CompleteCallback =  HAL_CAN_TxMailbox2CompleteCallback; /* Legacy weak TxMailbo
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox0AbortCallback    =  HAL_CAN_TxMailbox0AbortCallback;    /* Legacy weak TxMailbo
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox1AbortCallback    =  HAL_CAN_TxMailbox1AbortCallback;    /* Legacy weak TxMailbo
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox2AbortCallback    =  HAL_CAN_TxMailbox2AbortCallback;    /* Legacy weak TxMailbo
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->SleepCallback              =  HAL_CAN_SleepCallback;              /* Legacy weak SleepCal
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->WakeUpFromRxMsgCallback    =  HAL_CAN_WakeUpFromRxMsgCallback;    /* Legacy weak WakeUpFr
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCallback              =  HAL_CAN_ErrorCallback;              /* Legacy weak ErrorCal
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (hcan->MspInitCallback == NULL)
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->MspInitCallback = HAL_CAN_MspInit; /* Legacy weak MspInit */
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->MspInitCallback(hcan);
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
  53              		.loc 1 327 11
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 93F82030 		ldrb	r3, [r3, #32]
  56 0018 DBB2     		uxtb	r3, r3
  57              		.loc 1 327 6
  58 001a 002B     		cmp	r3, #0
  59 001c 02D1     		bne	.L4
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     HAL_CAN_MspInit(hcan);
  60              		.loc 1 330 5
  61 001e 7868     		ldr	r0, [r7, #4]
  62 0020 FFF7FEFF 		bl	HAL_CAN_MspInit
  63              	.L4:
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Request initialisation */
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
  64              		.loc 1 335 3
  65 0024 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 8


  66 0026 1B68     		ldr	r3, [r3]
  67 0028 1A68     		ldr	r2, [r3]
  68 002a 7B68     		ldr	r3, [r7, #4]
  69 002c 1B68     		ldr	r3, [r3]
  70 002e 42F00102 		orr	r2, r2, #1
  71 0032 1A60     		str	r2, [r3]
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Get tick */
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   tickstart = HAL_GetTick();
  72              		.loc 1 338 15
  73 0034 FFF7FEFF 		bl	HAL_GetTick
  74 0038 F860     		str	r0, [r7, #12]
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Wait initialisation acknowledge */
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
  75              		.loc 1 341 9
  76 003a 12E0     		b	.L5
  77              	.L6:
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
  78              		.loc 1 343 10
  79 003c FFF7FEFF 		bl	HAL_GetTick
  80 0040 0246     		mov	r2, r0
  81              		.loc 1 343 24 discriminator 1
  82 0042 FB68     		ldr	r3, [r7, #12]
  83 0044 D31A     		subs	r3, r2, r3
  84              		.loc 1 343 8 discriminator 1
  85 0046 0A2B     		cmp	r3, #10
  86 0048 0BD9     		bls	.L5
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Update error code */
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
  87              		.loc 1 346 11
  88 004a 7B68     		ldr	r3, [r7, #4]
  89 004c 5B6A     		ldr	r3, [r3, #36]
  90              		.loc 1 346 23
  91 004e 43F40032 		orr	r2, r3, #131072
  92 0052 7B68     		ldr	r3, [r7, #4]
  93 0054 5A62     		str	r2, [r3, #36]
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Change CAN state */
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
  94              		.loc 1 349 19
  95 0056 7B68     		ldr	r3, [r7, #4]
  96 0058 0522     		movs	r2, #5
  97 005a 83F82020 		strb	r2, [r3, #32]
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       return HAL_ERROR;
  98              		.loc 1 351 14
  99 005e 0123     		movs	r3, #1
 100 0060 C5E0     		b	.L3
 101              	.L5:
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 102              		.loc 1 341 15
 103 0062 7B68     		ldr	r3, [r7, #4]
 104 0064 1B68     		ldr	r3, [r3]
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 9


 105              		.loc 1 341 25
 106 0066 5B68     		ldr	r3, [r3, #4]
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 107              		.loc 1 341 31
 108 0068 03F00103 		and	r3, r3, #1
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 109              		.loc 1 341 47
 110 006c 002B     		cmp	r3, #0
 111 006e E5D0     		beq	.L6
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Exit from sleep mode */
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 112              		.loc 1 356 3
 113 0070 7B68     		ldr	r3, [r7, #4]
 114 0072 1B68     		ldr	r3, [r3]
 115 0074 1A68     		ldr	r2, [r3]
 116 0076 7B68     		ldr	r3, [r7, #4]
 117 0078 1B68     		ldr	r3, [r3]
 118 007a 22F00202 		bic	r2, r2, #2
 119 007e 1A60     		str	r2, [r3]
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Get tick */
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   tickstart = HAL_GetTick();
 120              		.loc 1 359 15
 121 0080 FFF7FEFF 		bl	HAL_GetTick
 122 0084 F860     		str	r0, [r7, #12]
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check Sleep mode leave acknowledge */
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 123              		.loc 1 362 9
 124 0086 12E0     		b	.L7
 125              	.L8:
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 126              		.loc 1 364 10
 127 0088 FFF7FEFF 		bl	HAL_GetTick
 128 008c 0246     		mov	r2, r0
 129              		.loc 1 364 24 discriminator 1
 130 008e FB68     		ldr	r3, [r7, #12]
 131 0090 D31A     		subs	r3, r2, r3
 132              		.loc 1 364 8 discriminator 1
 133 0092 0A2B     		cmp	r3, #10
 134 0094 0BD9     		bls	.L7
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Update error code */
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 135              		.loc 1 367 11
 136 0096 7B68     		ldr	r3, [r7, #4]
 137 0098 5B6A     		ldr	r3, [r3, #36]
 138              		.loc 1 367 23
 139 009a 43F40032 		orr	r2, r3, #131072
 140 009e 7B68     		ldr	r3, [r7, #4]
 141 00a0 5A62     		str	r2, [r3, #36]
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Change CAN state */
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 10


 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 142              		.loc 1 370 19
 143 00a2 7B68     		ldr	r3, [r7, #4]
 144 00a4 0522     		movs	r2, #5
 145 00a6 83F82020 		strb	r2, [r3, #32]
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       return HAL_ERROR;
 146              		.loc 1 372 14
 147 00aa 0123     		movs	r3, #1
 148 00ac 9FE0     		b	.L3
 149              	.L7:
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 150              		.loc 1 362 15
 151 00ae 7B68     		ldr	r3, [r7, #4]
 152 00b0 1B68     		ldr	r3, [r3]
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 153              		.loc 1 362 25
 154 00b2 5B68     		ldr	r3, [r3, #4]
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 155              		.loc 1 362 31
 156 00b4 03F00203 		and	r3, r3, #2
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 157              		.loc 1 362 47
 158 00b8 002B     		cmp	r3, #0
 159 00ba E5D1     		bne	.L8
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the time triggered communication mode */
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.TimeTriggeredMode == ENABLE)
 160              		.loc 1 377 17
 161 00bc 7B68     		ldr	r3, [r7, #4]
 162 00be 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 163              		.loc 1 377 6
 164 00c0 012B     		cmp	r3, #1
 165 00c2 08D1     		bne	.L9
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 166              		.loc 1 379 5
 167 00c4 7B68     		ldr	r3, [r7, #4]
 168 00c6 1B68     		ldr	r3, [r3]
 169 00c8 1A68     		ldr	r2, [r3]
 170 00ca 7B68     		ldr	r3, [r7, #4]
 171 00cc 1B68     		ldr	r3, [r3]
 172 00ce 42F08002 		orr	r2, r2, #128
 173 00d2 1A60     		str	r2, [r3]
 174 00d4 07E0     		b	.L10
 175              	.L9:
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 176              		.loc 1 383 5
 177 00d6 7B68     		ldr	r3, [r7, #4]
 178 00d8 1B68     		ldr	r3, [r3]
 179 00da 1A68     		ldr	r2, [r3]
 180 00dc 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 11


 181 00de 1B68     		ldr	r3, [r3]
 182 00e0 22F08002 		bic	r2, r2, #128
 183 00e4 1A60     		str	r2, [r3]
 184              	.L10:
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the automatic bus-off management */
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.AutoBusOff == ENABLE)
 185              		.loc 1 387 17
 186 00e6 7B68     		ldr	r3, [r7, #4]
 187 00e8 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 188              		.loc 1 387 6
 189 00ea 012B     		cmp	r3, #1
 190 00ec 08D1     		bne	.L11
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 191              		.loc 1 389 5
 192 00ee 7B68     		ldr	r3, [r7, #4]
 193 00f0 1B68     		ldr	r3, [r3]
 194 00f2 1A68     		ldr	r2, [r3]
 195 00f4 7B68     		ldr	r3, [r7, #4]
 196 00f6 1B68     		ldr	r3, [r3]
 197 00f8 42F04002 		orr	r2, r2, #64
 198 00fc 1A60     		str	r2, [r3]
 199 00fe 07E0     		b	.L12
 200              	.L11:
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 201              		.loc 1 393 5
 202 0100 7B68     		ldr	r3, [r7, #4]
 203 0102 1B68     		ldr	r3, [r3]
 204 0104 1A68     		ldr	r2, [r3]
 205 0106 7B68     		ldr	r3, [r7, #4]
 206 0108 1B68     		ldr	r3, [r3]
 207 010a 22F04002 		bic	r2, r2, #64
 208 010e 1A60     		str	r2, [r3]
 209              	.L12:
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the automatic wake-up mode */
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.AutoWakeUp == ENABLE)
 210              		.loc 1 397 17
 211 0110 7B68     		ldr	r3, [r7, #4]
 212 0112 9B7E     		ldrb	r3, [r3, #26]	@ zero_extendqisi2
 213              		.loc 1 397 6
 214 0114 012B     		cmp	r3, #1
 215 0116 08D1     		bne	.L13
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 216              		.loc 1 399 5
 217 0118 7B68     		ldr	r3, [r7, #4]
 218 011a 1B68     		ldr	r3, [r3]
 219 011c 1A68     		ldr	r2, [r3]
 220 011e 7B68     		ldr	r3, [r7, #4]
 221 0120 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 12


 222 0122 42F02002 		orr	r2, r2, #32
 223 0126 1A60     		str	r2, [r3]
 224 0128 07E0     		b	.L14
 225              	.L13:
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 226              		.loc 1 403 5
 227 012a 7B68     		ldr	r3, [r7, #4]
 228 012c 1B68     		ldr	r3, [r3]
 229 012e 1A68     		ldr	r2, [r3]
 230 0130 7B68     		ldr	r3, [r7, #4]
 231 0132 1B68     		ldr	r3, [r3]
 232 0134 22F02002 		bic	r2, r2, #32
 233 0138 1A60     		str	r2, [r3]
 234              	.L14:
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the automatic retransmission */
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.AutoRetransmission == ENABLE)
 235              		.loc 1 407 17
 236 013a 7B68     		ldr	r3, [r7, #4]
 237 013c DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 238              		.loc 1 407 6
 239 013e 012B     		cmp	r3, #1
 240 0140 08D1     		bne	.L15
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 241              		.loc 1 409 5
 242 0142 7B68     		ldr	r3, [r7, #4]
 243 0144 1B68     		ldr	r3, [r3]
 244 0146 1A68     		ldr	r2, [r3]
 245 0148 7B68     		ldr	r3, [r7, #4]
 246 014a 1B68     		ldr	r3, [r3]
 247 014c 22F01002 		bic	r2, r2, #16
 248 0150 1A60     		str	r2, [r3]
 249 0152 07E0     		b	.L16
 250              	.L15:
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 251              		.loc 1 413 5
 252 0154 7B68     		ldr	r3, [r7, #4]
 253 0156 1B68     		ldr	r3, [r3]
 254 0158 1A68     		ldr	r2, [r3]
 255 015a 7B68     		ldr	r3, [r7, #4]
 256 015c 1B68     		ldr	r3, [r3]
 257 015e 42F01002 		orr	r2, r2, #16
 258 0162 1A60     		str	r2, [r3]
 259              	.L16:
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the receive FIFO locked mode */
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.ReceiveFifoLocked == ENABLE)
 260              		.loc 1 417 17
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 13


 261 0164 7B68     		ldr	r3, [r7, #4]
 262 0166 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 263              		.loc 1 417 6
 264 0168 012B     		cmp	r3, #1
 265 016a 08D1     		bne	.L17
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 266              		.loc 1 419 5
 267 016c 7B68     		ldr	r3, [r7, #4]
 268 016e 1B68     		ldr	r3, [r3]
 269 0170 1A68     		ldr	r2, [r3]
 270 0172 7B68     		ldr	r3, [r7, #4]
 271 0174 1B68     		ldr	r3, [r3]
 272 0176 42F00802 		orr	r2, r2, #8
 273 017a 1A60     		str	r2, [r3]
 274 017c 07E0     		b	.L18
 275              	.L17:
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 276              		.loc 1 423 5
 277 017e 7B68     		ldr	r3, [r7, #4]
 278 0180 1B68     		ldr	r3, [r3]
 279 0182 1A68     		ldr	r2, [r3]
 280 0184 7B68     		ldr	r3, [r7, #4]
 281 0186 1B68     		ldr	r3, [r3]
 282 0188 22F00802 		bic	r2, r2, #8
 283 018c 1A60     		str	r2, [r3]
 284              	.L18:
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the transmit FIFO priority */
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.TransmitFifoPriority == ENABLE)
 285              		.loc 1 427 17
 286 018e 7B68     		ldr	r3, [r7, #4]
 287 0190 5B7F     		ldrb	r3, [r3, #29]	@ zero_extendqisi2
 288              		.loc 1 427 6
 289 0192 012B     		cmp	r3, #1
 290 0194 08D1     		bne	.L19
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 291              		.loc 1 429 5
 292 0196 7B68     		ldr	r3, [r7, #4]
 293 0198 1B68     		ldr	r3, [r3]
 294 019a 1A68     		ldr	r2, [r3]
 295 019c 7B68     		ldr	r3, [r7, #4]
 296 019e 1B68     		ldr	r3, [r3]
 297 01a0 42F00402 		orr	r2, r2, #4
 298 01a4 1A60     		str	r2, [r3]
 299 01a6 07E0     		b	.L20
 300              	.L19:
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 301              		.loc 1 433 5
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 14


 302 01a8 7B68     		ldr	r3, [r7, #4]
 303 01aa 1B68     		ldr	r3, [r3]
 304 01ac 1A68     		ldr	r2, [r3]
 305 01ae 7B68     		ldr	r3, [r7, #4]
 306 01b0 1B68     		ldr	r3, [r3]
 307 01b2 22F00402 		bic	r2, r2, #4
 308 01b6 1A60     		str	r2, [r3]
 309              	.L20:
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the bit timing register */
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 310              		.loc 1 437 3
 311 01b8 7B68     		ldr	r3, [r7, #4]
 312 01ba 9A68     		ldr	r2, [r3, #8]
 313 01bc 7B68     		ldr	r3, [r7, #4]
 314 01be DB68     		ldr	r3, [r3, #12]
 315 01c0 1A43     		orrs	r2, r2, r3
 316 01c2 7B68     		ldr	r3, [r7, #4]
 317 01c4 1B69     		ldr	r3, [r3, #16]
 318 01c6 1A43     		orrs	r2, r2, r3
 319 01c8 7B68     		ldr	r3, [r7, #4]
 320 01ca 5B69     		ldr	r3, [r3, #20]
 321 01cc 42EA0301 		orr	r1, r2, r3
 322 01d0 7B68     		ldr	r3, [r7, #4]
 323 01d2 5B68     		ldr	r3, [r3, #4]
 324 01d4 5A1E     		subs	r2, r3, #1
 325 01d6 7B68     		ldr	r3, [r7, #4]
 326 01d8 1B68     		ldr	r3, [r3]
 327 01da 0A43     		orrs	r2, r2, r1
 328 01dc DA61     		str	r2, [r3, #28]
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                             hcan->Init.TimeSeg1       |
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                             hcan->Init.TimeSeg2       |
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                             (hcan->Init.Prescaler - 1U)));
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Initialize the error code */
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 329              		.loc 1 444 19
 330 01de 7B68     		ldr	r3, [r7, #4]
 331 01e0 0022     		movs	r2, #0
 332 01e2 5A62     		str	r2, [r3, #36]
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Initialize the CAN state */
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY;
 333              		.loc 1 447 15
 334 01e4 7B68     		ldr	r3, [r7, #4]
 335 01e6 0122     		movs	r2, #1
 336 01e8 83F82020 		strb	r2, [r3, #32]
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return function status */
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return HAL_OK;
 337              		.loc 1 450 10
 338 01ec 0023     		movs	r3, #0
 339              	.L3:
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 340              		.loc 1 451 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 15


 341 01ee 1846     		mov	r0, r3
 342 01f0 1037     		adds	r7, r7, #16
 343              	.LCFI3:
 344              		.cfi_def_cfa_offset 8
 345 01f2 BD46     		mov	sp, r7
 346              	.LCFI4:
 347              		.cfi_def_cfa_register 13
 348              		@ sp needed
 349 01f4 80BD     		pop	{r7, pc}
 350              		.cfi_endproc
 351              	.LFE134:
 353              		.section	.text.HAL_CAN_DeInit,"ax",%progbits
 354              		.align	1
 355              		.global	HAL_CAN_DeInit
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
 360              	HAL_CAN_DeInit:
 361              	.LFB135:
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         reset values.
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef *hcan)
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 362              		.loc 1 461 1
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 8
 365              		@ frame_needed = 1, uses_anonymous_args = 0
 366 0000 80B5     		push	{r7, lr}
 367              	.LCFI5:
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 7, -8
 370              		.cfi_offset 14, -4
 371 0002 82B0     		sub	sp, sp, #8
 372              	.LCFI6:
 373              		.cfi_def_cfa_offset 16
 374 0004 00AF     		add	r7, sp, #0
 375              	.LCFI7:
 376              		.cfi_def_cfa_register 7
 377 0006 7860     		str	r0, [r7, #4]
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check CAN handle */
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan == NULL)
 378              		.loc 1 463 6
 379 0008 7B68     		ldr	r3, [r7, #4]
 380 000a 002B     		cmp	r3, #0
 381 000c 01D1     		bne	.L22
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 382              		.loc 1 465 12
 383 000e 0123     		movs	r3, #1
 384 0010 15E0     		b	.L23
 385              	.L22:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 16


 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check the parameters */
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Stop the CAN module */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   (void)HAL_CAN_Stop(hcan);
 386              		.loc 1 472 9
 387 0012 7868     		ldr	r0, [r7, #4]
 388 0014 FFF7FEFF 		bl	HAL_CAN_Stop
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->MspDeInitCallback == NULL)
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->MspDeInitCallback = HAL_CAN_MspDeInit; /* Legacy weak MspDeInit */
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->MspDeInitCallback(hcan);
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_MspDeInit(hcan);
 389              		.loc 1 485 3
 390 0018 7868     		ldr	r0, [r7, #4]
 391 001a FFF7FEFF 		bl	HAL_CAN_MspDeInit
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Reset the CAN peripheral */
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_RESET);
 392              		.loc 1 489 3
 393 001e 7B68     		ldr	r3, [r7, #4]
 394 0020 1B68     		ldr	r3, [r3]
 395 0022 1A68     		ldr	r2, [r3]
 396 0024 7B68     		ldr	r3, [r7, #4]
 397 0026 1B68     		ldr	r3, [r3]
 398 0028 42F40042 		orr	r2, r2, #32768
 399 002c 1A60     		str	r2, [r3]
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Reset the CAN ErrorCode */
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 400              		.loc 1 492 19
 401 002e 7B68     		ldr	r3, [r7, #4]
 402 0030 0022     		movs	r2, #0
 403 0032 5A62     		str	r2, [r3, #36]
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Change CAN state */
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_RESET;
 404              		.loc 1 495 15
 405 0034 7B68     		ldr	r3, [r7, #4]
 406 0036 0022     		movs	r2, #0
 407 0038 83F82020 		strb	r2, [r3, #32]
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return function status */
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return HAL_OK;
 408              		.loc 1 498 10
 409 003c 0023     		movs	r3, #0
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 17


 410              	.L23:
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 411              		.loc 1 499 1
 412 003e 1846     		mov	r0, r3
 413 0040 0837     		adds	r7, r7, #8
 414              	.LCFI8:
 415              		.cfi_def_cfa_offset 8
 416 0042 BD46     		mov	sp, r7
 417              	.LCFI9:
 418              		.cfi_def_cfa_register 13
 419              		@ sp needed
 420 0044 80BD     		pop	{r7, pc}
 421              		.cfi_endproc
 422              	.LFE135:
 424              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
 425              		.align	1
 426              		.weak	HAL_CAN_MspInit
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 431              	HAL_CAN_MspInit:
 432              	.LFB136:
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Initializes the CAN MSP.
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_MspInit(CAN_HandleTypeDef *hcan)
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 433              		.loc 1 508 1
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 8
 436              		@ frame_needed = 1, uses_anonymous_args = 0
 437              		@ link register save eliminated.
 438 0000 80B4     		push	{r7}
 439              	.LCFI10:
 440              		.cfi_def_cfa_offset 4
 441              		.cfi_offset 7, -4
 442 0002 83B0     		sub	sp, sp, #12
 443              	.LCFI11:
 444              		.cfi_def_cfa_offset 16
 445 0004 00AF     		add	r7, sp, #0
 446              	.LCFI12:
 447              		.cfi_def_cfa_register 7
 448 0006 7860     		str	r0, [r7, #4]
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_MspInit could be implemented in the user file
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 449              		.loc 1 515 1
 450 0008 00BF     		nop
 451 000a 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 18


 452              	.LCFI13:
 453              		.cfi_def_cfa_offset 4
 454 000c BD46     		mov	sp, r7
 455              	.LCFI14:
 456              		.cfi_def_cfa_register 13
 457              		@ sp needed
 458 000e 5DF8047B 		ldr	r7, [sp], #4
 459              	.LCFI15:
 460              		.cfi_restore 7
 461              		.cfi_def_cfa_offset 0
 462 0012 7047     		bx	lr
 463              		.cfi_endproc
 464              	.LFE136:
 466              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 467              		.align	1
 468              		.weak	HAL_CAN_MspDeInit
 469              		.syntax unified
 470              		.thumb
 471              		.thumb_func
 473              	HAL_CAN_MspDeInit:
 474              	.LFB137:
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  DeInitializes the CAN MSP.
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_MspDeInit(CAN_HandleTypeDef *hcan)
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 475              		.loc 1 524 1
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 8
 478              		@ frame_needed = 1, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 480 0000 80B4     		push	{r7}
 481              	.LCFI16:
 482              		.cfi_def_cfa_offset 4
 483              		.cfi_offset 7, -4
 484 0002 83B0     		sub	sp, sp, #12
 485              	.LCFI17:
 486              		.cfi_def_cfa_offset 16
 487 0004 00AF     		add	r7, sp, #0
 488              	.LCFI18:
 489              		.cfi_def_cfa_register 7
 490 0006 7860     		str	r0, [r7, #4]
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_MspDeInit could be implemented in the user file
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 491              		.loc 1 531 1
 492 0008 00BF     		nop
 493 000a 0C37     		adds	r7, r7, #12
 494              	.LCFI19:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 19


 495              		.cfi_def_cfa_offset 4
 496 000c BD46     		mov	sp, r7
 497              	.LCFI20:
 498              		.cfi_def_cfa_register 13
 499              		@ sp needed
 500 000e 5DF8047B 		ldr	r7, [sp], #4
 501              	.LCFI21:
 502              		.cfi_restore 7
 503              		.cfi_def_cfa_offset 0
 504 0012 7047     		bx	lr
 505              		.cfi_endproc
 506              	.LFE137:
 508              		.section	.text.HAL_CAN_ConfigFilter,"ax",%progbits
 509              		.align	1
 510              		.global	HAL_CAN_ConfigFilter
 511              		.syntax unified
 512              		.thumb
 513              		.thumb_func
 515              	HAL_CAN_ConfigFilter:
 516              	.LFB138:
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Register a CAN CallBack.
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         To be used instead of the weak predefined callback
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for CAN module
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  CallbackID ID of the callback to be registered
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be one of the following values:
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  pCallback pointer to the Callback function
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Callb
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                            void (* pCallback)(CAN_HandleTypeDef *_hcan))
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (pCallback == NULL)
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update the error code */
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 20


 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = pCallback;
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = pCallback;
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = pCallback;
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = pCallback;
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = pCallback;
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = pCallback;
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = pCallback;
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0FullCallback = pCallback;
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = pCallback;
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1FullCallback = pCallback;
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->SleepCallback = pCallback;
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = pCallback;
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCallback = pCallback;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 21


 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       default :
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       default :
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update the error code */
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return error status */
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     status =  HAL_ERROR;
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Unregister a CAN CallBack.
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         CAN callback is redirected to the weak predefined callback
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for CAN module
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 22


 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  CallbackID ID of the callback to be unregistered
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be one of the following values:
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_UnRegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Cal
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = HAL_CAN_TxMailbox0CompleteCallback;
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = HAL_CAN_TxMailbox1CompleteCallback;
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = HAL_CAN_TxMailbox2CompleteCallback;
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = HAL_CAN_TxMailbox0AbortCallback;
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = HAL_CAN_TxMailbox1AbortCallback;
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = HAL_CAN_TxMailbox2AbortCallback;
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = HAL_CAN_RxFifo0MsgPendingCallback;
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0FullCallback = HAL_CAN_RxFifo0FullCallback;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 23


 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = HAL_CAN_RxFifo1MsgPendingCallback;
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1FullCallback = HAL_CAN_RxFifo1FullCallback;
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->SleepCallback = HAL_CAN_SleepCallback;
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = HAL_CAN_WakeUpFromRxMsgCallback;
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCallback = HAL_CAN_ErrorCallback;
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       default :
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       default :
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 24


 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update the error code */
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return error status */
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     status =  HAL_ERROR;
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group2 Configuration functions
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief    Configuration functions.
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****               ##### Configuration functions #####
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ConfigFilter            : Configure the CAN reception filters
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         parameters in the CAN_FilterInitStruct.
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  sFilterConfig pointer to a CAN_FilterTypeDef structure that
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         contains the filter configuration information.
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef *hcan, const CAN_FilterTypeDef *sFilterCon
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 517              		.loc 1 841 1
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 24
 520              		@ frame_needed = 1, uses_anonymous_args = 0
 521              		@ link register save eliminated.
 522 0000 80B4     		push	{r7}
 523              	.LCFI22:
 524              		.cfi_def_cfa_offset 4
 525              		.cfi_offset 7, -4
 526 0002 87B0     		sub	sp, sp, #28
 527              	.LCFI23:
 528              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 25


 529 0004 00AF     		add	r7, sp, #0
 530              	.LCFI24:
 531              		.cfi_def_cfa_register 7
 532 0006 7860     		str	r0, [r7, #4]
 533 0008 3960     		str	r1, [r7]
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t filternbrbitpos;
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   CAN_TypeDef *can_ip;
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 534              		.loc 1 844 24
 535 000a 7B68     		ldr	r3, [r7, #4]
 536 000c 93F82030 		ldrb	r3, [r3, #32]
 537 0010 FB75     		strb	r3, [r7, #23]
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 538              		.loc 1 846 6
 539 0012 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 540 0014 012B     		cmp	r3, #1
 541 0016 03D0     		beq	.L27
 542              		.loc 1 846 38 discriminator 1
 543 0018 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 544 001a 022B     		cmp	r3, #2
 545 001c 40F0BE80 		bne	.L28
 546              	.L27:
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the parameters */
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdHigh));
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if defined(CAN3)
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the CAN instance */
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (hcan->Instance == CAN3)
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* CAN3 is single instance with 14 dedicated filters banks */
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip = hcan->Instance;
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check the parameters */
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* CAN1 and CAN2 are dual instances with 28 common filters banks */
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Select master instance to access the filter banks */
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip = CAN1;
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check the parameters */
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->FilterBank));
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #elif defined(CAN2)
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* CAN1 and CAN2 are dual instances with 28 common filters banks */
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 26


 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Select master instance to access the filter banks */
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     can_ip = CAN1;
 547              		.loc 1 882 12
 548 0020 654B     		ldr	r3, .L37
 549 0022 3B61     		str	r3, [r7, #16]
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the parameters */
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->FilterBank));
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* CAN1 is single instance with 14 dedicated filters banks */
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     can_ip = hcan->Instance;
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the parameters */
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* CAN3 */
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Initialisation mode for the filter */
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(can_ip->FMR, CAN_FMR_FINIT);
 550              		.loc 1 896 5
 551 0024 3B69     		ldr	r3, [r7, #16]
 552 0026 D3F80032 		ldr	r3, [r3, #512]
 553 002a 43F00102 		orr	r2, r3, #1
 554 002e 3B69     		ldr	r3, [r7, #16]
 555 0030 C3F80022 		str	r2, [r3, #512]
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if defined(CAN3)
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the CAN instance */
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (can_ip == CAN1)
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Select the start filter number of CAN2 slave instance */
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FMR, CAN_FMR_CAN2SB);
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #elif defined(CAN2)
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Select the start filter number of CAN2 slave instance */
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_CAN2SB);
 556              		.loc 1 909 5
 557 0034 3B69     		ldr	r3, [r7, #16]
 558 0036 D3F80032 		ldr	r3, [r3, #512]
 559 003a 23F47C52 		bic	r2, r3, #16128
 560 003e 3B69     		ldr	r3, [r7, #16]
 561 0040 C3F80022 		str	r2, [r3, #512]
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 562              		.loc 1 910 5
 563 0044 3B69     		ldr	r3, [r7, #16]
 564 0046 D3F80022 		ldr	r2, [r3, #512]
 565 004a 3B68     		ldr	r3, [r7]
 566 004c 5B6A     		ldr	r3, [r3, #36]
 567 004e 1B02     		lsls	r3, r3, #8
 568 0050 1A43     		orrs	r2, r2, r3
 569 0052 3B69     		ldr	r3, [r7, #16]
 570 0054 C3F80022 		str	r2, [r3, #512]
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* CAN3 */
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Convert filter number into bit position */
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 27


 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     filternbrbitpos = (uint32_t)1 << (sFilterConfig->FilterBank & 0x1FU);
 571              		.loc 1 914 52
 572 0058 3B68     		ldr	r3, [r7]
 573 005a 5B69     		ldr	r3, [r3, #20]
 574              		.loc 1 914 65
 575 005c 03F01F03 		and	r3, r3, #31
 576              		.loc 1 914 21
 577 0060 0122     		movs	r2, #1
 578 0062 02FA03F3 		lsl	r3, r2, r3
 579 0066 FB60     		str	r3, [r7, #12]
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter Deactivation */
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(can_ip->FA1R, filternbrbitpos);
 580              		.loc 1 917 5
 581 0068 3B69     		ldr	r3, [r7, #16]
 582 006a D3F81C22 		ldr	r2, [r3, #540]
 583 006e FB68     		ldr	r3, [r7, #12]
 584 0070 DB43     		mvns	r3, r3
 585 0072 1A40     		ands	r2, r2, r3
 586 0074 3B69     		ldr	r3, [r7, #16]
 587 0076 C3F81C22 		str	r2, [r3, #540]
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter Scale */
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
 588              		.loc 1 920 22
 589 007a 3B68     		ldr	r3, [r7]
 590 007c DB69     		ldr	r3, [r3, #28]
 591              		.loc 1 920 8
 592 007e 002B     		cmp	r3, #0
 593 0080 23D1     		bne	.L29
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* 16-bit scale for the filter */
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FS1R, filternbrbitpos);
 594              		.loc 1 923 7
 595 0082 3B69     		ldr	r3, [r7, #16]
 596 0084 D3F80C22 		ldr	r2, [r3, #524]
 597 0088 FB68     		ldr	r3, [r7, #12]
 598 008a DB43     		mvns	r3, r3
 599 008c 1A40     		ands	r2, r2, r3
 600 008e 3B69     		ldr	r3, [r7, #16]
 601 0090 C3F80C22 		str	r2, [r3, #524]
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* First 16-bit identifier and First 16-bit mask */
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Or First 16-bit identifier and Second 16-bit identifier */
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 602              		.loc 1 928 48
 603 0094 3B68     		ldr	r3, [r7]
 604 0096 DB68     		ldr	r3, [r3, #12]
 605              		.loc 1 928 67
 606 0098 1904     		lsls	r1, r3, #16
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 607              		.loc 1 929 47
 608 009a 3B68     		ldr	r3, [r7]
 609 009c 5B68     		ldr	r3, [r3, #4]
 610              		.loc 1 929 22
 611 009e 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 28


 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 612              		.loc 1 927 44
 613 00a0 3A68     		ldr	r2, [r7]
 614 00a2 5269     		ldr	r2, [r2, #20]
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 615              		.loc 1 928 75
 616 00a4 1943     		orrs	r1, r1, r3
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 617              		.loc 1 927 62
 618 00a6 3B69     		ldr	r3, [r7, #16]
 619 00a8 4832     		adds	r2, r2, #72
 620 00aa 43F83210 		str	r1, [r3, r2, lsl #3]
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Second 16-bit identifier and Second 16-bit mask */
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 621              		.loc 1 934 48
 622 00ae 3B68     		ldr	r3, [r7]
 623 00b0 9B68     		ldr	r3, [r3, #8]
 624              		.loc 1 934 68
 625 00b2 1904     		lsls	r1, r3, #16
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 626              		.loc 1 935 47
 627 00b4 3B68     		ldr	r3, [r7]
 628 00b6 1B68     		ldr	r3, [r3]
 629              		.loc 1 935 22
 630 00b8 9AB2     		uxth	r2, r3
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 631              		.loc 1 933 44
 632 00ba 3B68     		ldr	r3, [r7]
 633 00bc 5B69     		ldr	r3, [r3, #20]
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 634              		.loc 1 934 76
 635 00be 0A43     		orrs	r2, r2, r1
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 636              		.loc 1 933 62
 637 00c0 3969     		ldr	r1, [r7, #16]
 638 00c2 4833     		adds	r3, r3, #72
 639 00c4 DB00     		lsls	r3, r3, #3
 640 00c6 0B44     		add	r3, r3, r1
 641 00c8 5A60     		str	r2, [r3, #4]
 642              	.L29:
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
 643              		.loc 1 938 22
 644 00ca 3B68     		ldr	r3, [r7]
 645 00cc DB69     		ldr	r3, [r3, #28]
 646              		.loc 1 938 8
 647 00ce 012B     		cmp	r3, #1
 648 00d0 22D1     		bne	.L30
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* 32-bit scale for the filter */
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FS1R, filternbrbitpos);
 649              		.loc 1 941 7
 650 00d2 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 29


 651 00d4 D3F80C22 		ldr	r2, [r3, #524]
 652 00d8 FB68     		ldr	r3, [r7, #12]
 653 00da 1A43     		orrs	r2, r2, r3
 654 00dc 3B69     		ldr	r3, [r7, #16]
 655 00de C3F80C22 		str	r2, [r3, #524]
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* 32-bit identifier or First 32-bit identifier */
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 656              		.loc 1 945 48
 657 00e2 3B68     		ldr	r3, [r7]
 658 00e4 1B68     		ldr	r3, [r3]
 659              		.loc 1 945 64
 660 00e6 1904     		lsls	r1, r3, #16
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 661              		.loc 1 946 47
 662 00e8 3B68     		ldr	r3, [r7]
 663 00ea 5B68     		ldr	r3, [r3, #4]
 664              		.loc 1 946 22
 665 00ec 9BB2     		uxth	r3, r3
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 666              		.loc 1 944 44
 667 00ee 3A68     		ldr	r2, [r7]
 668 00f0 5269     		ldr	r2, [r2, #20]
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 669              		.loc 1 945 72
 670 00f2 1943     		orrs	r1, r1, r3
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 671              		.loc 1 944 62
 672 00f4 3B69     		ldr	r3, [r7, #16]
 673 00f6 4832     		adds	r2, r2, #72
 674 00f8 43F83210 		str	r1, [r3, r2, lsl #3]
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* 32-bit mask or Second 32-bit identifier */
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 675              		.loc 1 950 48
 676 00fc 3B68     		ldr	r3, [r7]
 677 00fe 9B68     		ldr	r3, [r3, #8]
 678              		.loc 1 950 68
 679 0100 1904     		lsls	r1, r3, #16
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 680              		.loc 1 951 47
 681 0102 3B68     		ldr	r3, [r7]
 682 0104 DB68     		ldr	r3, [r3, #12]
 683              		.loc 1 951 22
 684 0106 9AB2     		uxth	r2, r3
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 685              		.loc 1 949 44
 686 0108 3B68     		ldr	r3, [r7]
 687 010a 5B69     		ldr	r3, [r3, #20]
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 688              		.loc 1 950 76
 689 010c 0A43     		orrs	r2, r2, r1
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 690              		.loc 1 949 62
 691 010e 3969     		ldr	r1, [r7, #16]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 30


 692 0110 4833     		adds	r3, r3, #72
 693 0112 DB00     		lsls	r3, r3, #3
 694 0114 0B44     		add	r3, r3, r1
 695 0116 5A60     		str	r2, [r3, #4]
 696              	.L30:
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter Mode */
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
 697              		.loc 1 955 22
 698 0118 3B68     		ldr	r3, [r7]
 699 011a 9B69     		ldr	r3, [r3, #24]
 700              		.loc 1 955 8
 701 011c 002B     		cmp	r3, #0
 702 011e 09D1     		bne	.L31
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Id/Mask mode for the filter*/
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FM1R, filternbrbitpos);
 703              		.loc 1 958 7
 704 0120 3B69     		ldr	r3, [r7, #16]
 705 0122 D3F80422 		ldr	r2, [r3, #516]
 706 0126 FB68     		ldr	r3, [r7, #12]
 707 0128 DB43     		mvns	r3, r3
 708 012a 1A40     		ands	r2, r2, r3
 709 012c 3B69     		ldr	r3, [r7, #16]
 710 012e C3F80422 		str	r2, [r3, #516]
 711 0132 07E0     		b	.L32
 712              	.L31:
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Identifier list mode for the filter*/
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FM1R, filternbrbitpos);
 713              		.loc 1 963 7
 714 0134 3B69     		ldr	r3, [r7, #16]
 715 0136 D3F80422 		ldr	r2, [r3, #516]
 716 013a FB68     		ldr	r3, [r7, #12]
 717 013c 1A43     		orrs	r2, r2, r3
 718 013e 3B69     		ldr	r3, [r7, #16]
 719 0140 C3F80422 		str	r2, [r3, #516]
 720              	.L32:
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter FIFO assignment */
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
 721              		.loc 1 967 22
 722 0144 3B68     		ldr	r3, [r7]
 723 0146 1B69     		ldr	r3, [r3, #16]
 724              		.loc 1 967 8
 725 0148 002B     		cmp	r3, #0
 726 014a 09D1     		bne	.L33
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* FIFO 0 assignation for the filter */
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FFA1R, filternbrbitpos);
 727              		.loc 1 970 7
 728 014c 3B69     		ldr	r3, [r7, #16]
 729 014e D3F81422 		ldr	r2, [r3, #532]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 31


 730 0152 FB68     		ldr	r3, [r7, #12]
 731 0154 DB43     		mvns	r3, r3
 732 0156 1A40     		ands	r2, r2, r3
 733 0158 3B69     		ldr	r3, [r7, #16]
 734 015a C3F81422 		str	r2, [r3, #532]
 735 015e 07E0     		b	.L34
 736              	.L33:
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* FIFO 1 assignation for the filter */
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FFA1R, filternbrbitpos);
 737              		.loc 1 975 7
 738 0160 3B69     		ldr	r3, [r7, #16]
 739 0162 D3F81422 		ldr	r2, [r3, #532]
 740 0166 FB68     		ldr	r3, [r7, #12]
 741 0168 1A43     		orrs	r2, r2, r3
 742 016a 3B69     		ldr	r3, [r7, #16]
 743 016c C3F81422 		str	r2, [r3, #532]
 744              	.L34:
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter activation */
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterActivation == CAN_FILTER_ENABLE)
 745              		.loc 1 979 22
 746 0170 3B68     		ldr	r3, [r7]
 747 0172 1B6A     		ldr	r3, [r3, #32]
 748              		.loc 1 979 8
 749 0174 012B     		cmp	r3, #1
 750 0176 07D1     		bne	.L35
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FA1R, filternbrbitpos);
 751              		.loc 1 981 7
 752 0178 3B69     		ldr	r3, [r7, #16]
 753 017a D3F81C22 		ldr	r2, [r3, #540]
 754 017e FB68     		ldr	r3, [r7, #12]
 755 0180 1A43     		orrs	r2, r2, r3
 756 0182 3B69     		ldr	r3, [r7, #16]
 757 0184 C3F81C22 		str	r2, [r3, #540]
 758              	.L35:
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Leave the initialisation mode for the filter */
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_FINIT);
 759              		.loc 1 985 5
 760 0188 3B69     		ldr	r3, [r7, #16]
 761 018a D3F80032 		ldr	r3, [r3, #512]
 762 018e 23F00102 		bic	r2, r3, #1
 763 0192 3B69     		ldr	r3, [r7, #16]
 764 0194 C3F80022 		str	r2, [r3, #512]
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 765              		.loc 1 988 12
 766 0198 0023     		movs	r3, #0
 767 019a 06E0     		b	.L36
 768              	.L28:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 32


 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 769              		.loc 1 993 9
 770 019c 7B68     		ldr	r3, [r7, #4]
 771 019e 5B6A     		ldr	r3, [r3, #36]
 772              		.loc 1 993 21
 773 01a0 43F48022 		orr	r2, r3, #262144
 774 01a4 7B68     		ldr	r3, [r7, #4]
 775 01a6 5A62     		str	r2, [r3, #36]
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 776              		.loc 1 995 12
 777 01a8 0123     		movs	r3, #1
 778              	.L36:
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 779              		.loc 1 997 1
 780 01aa 1846     		mov	r0, r3
 781 01ac 1C37     		adds	r7, r7, #28
 782              	.LCFI25:
 783              		.cfi_def_cfa_offset 4
 784 01ae BD46     		mov	sp, r7
 785              	.LCFI26:
 786              		.cfi_def_cfa_register 13
 787              		@ sp needed
 788 01b0 5DF8047B 		ldr	r7, [sp], #4
 789              	.LCFI27:
 790              		.cfi_restore 7
 791              		.cfi_def_cfa_offset 0
 792 01b4 7047     		bx	lr
 793              	.L38:
 794 01b6 00BF     		.align	2
 795              	.L37:
 796 01b8 00640040 		.word	1073767424
 797              		.cfi_endproc
 798              	.LFE138:
 800              		.section	.text.HAL_CAN_Start,"ax",%progbits
 801              		.align	1
 802              		.global	HAL_CAN_Start
 803              		.syntax unified
 804              		.thumb
 805              		.thumb_func
 807              	HAL_CAN_Start:
 808              	.LFB139:
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group3 Control functions
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief    Control functions
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 33


1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                       ##### Control functions #####
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_Start                    : Start the CAN module
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_Stop                     : Stop the CAN module
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RequestSleep             : Request sleep mode entry.
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_WakeUp                   : Wake up from sleep mode.
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_IsSleepActive            : Check is sleep mode is active.
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_AddTxMessage             : Add a message to the Tx mailboxes
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                              and activate the corresponding
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                              transmission request
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_AbortTxRequest           : Abort transmission request
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetTxMailboxesFreeLevel  : Return Tx mailboxes free level
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_IsTxMessagePending       : Check if a transmission request is
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                              pending on the selected Tx mailbox
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetRxMessage             : Get a CAN frame from the Rx FIFO
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetRxFifoFillLevel       : Return Rx FIFO fill level
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Start the CAN module.
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Start(CAN_HandleTypeDef *hcan)
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 809              		.loc 1 1037 1
 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 16
 812              		@ frame_needed = 1, uses_anonymous_args = 0
 813 0000 80B5     		push	{r7, lr}
 814              	.LCFI28:
 815              		.cfi_def_cfa_offset 8
 816              		.cfi_offset 7, -8
 817              		.cfi_offset 14, -4
 818 0002 84B0     		sub	sp, sp, #16
 819              	.LCFI29:
 820              		.cfi_def_cfa_offset 24
 821 0004 00AF     		add	r7, sp, #0
 822              	.LCFI30:
 823              		.cfi_def_cfa_register 7
 824 0006 7860     		str	r0, [r7, #4]
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 825              		.loc 1 1040 11
 826 0008 7B68     		ldr	r3, [r7, #4]
 827 000a 93F82030 		ldrb	r3, [r3, #32]
 828 000e DBB2     		uxtb	r3, r3
 829              		.loc 1 1040 6
 830 0010 012B     		cmp	r3, #1
 831 0012 2ED1     		bne	.L40
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 34


1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Change CAN peripheral state */
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_LISTENING;
 832              		.loc 1 1043 17
 833 0014 7B68     		ldr	r3, [r7, #4]
 834 0016 0222     		movs	r2, #2
 835 0018 83F82020 		strb	r2, [r3, #32]
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Request leave initialisation */
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 836              		.loc 1 1046 5
 837 001c 7B68     		ldr	r3, [r7, #4]
 838 001e 1B68     		ldr	r3, [r3]
 839 0020 1A68     		ldr	r2, [r3]
 840 0022 7B68     		ldr	r3, [r7, #4]
 841 0024 1B68     		ldr	r3, [r3]
 842 0026 22F00102 		bic	r2, r2, #1
 843 002a 1A60     		str	r2, [r3]
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get tick */
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     tickstart = HAL_GetTick();
 844              		.loc 1 1049 17
 845 002c FFF7FEFF 		bl	HAL_GetTick
 846 0030 F860     		str	r0, [r7, #12]
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Wait the acknowledge */
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) != 0U)
 847              		.loc 1 1052 11
 848 0032 12E0     		b	.L41
 849              	.L43:
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check for the Timeout */
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 850              		.loc 1 1055 12
 851 0034 FFF7FEFF 		bl	HAL_GetTick
 852 0038 0246     		mov	r2, r0
 853              		.loc 1 1055 26 discriminator 1
 854 003a FB68     		ldr	r3, [r7, #12]
 855 003c D31A     		subs	r3, r2, r3
 856              		.loc 1 1055 10 discriminator 1
 857 003e 0A2B     		cmp	r3, #10
 858 0040 0BD9     		bls	.L41
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 859              		.loc 1 1058 13
 860 0042 7B68     		ldr	r3, [r7, #4]
 861 0044 5B6A     		ldr	r3, [r3, #36]
 862              		.loc 1 1058 25
 863 0046 43F40032 		orr	r2, r3, #131072
 864 004a 7B68     		ldr	r3, [r7, #4]
 865 004c 5A62     		str	r2, [r3, #36]
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Change CAN state */
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
 866              		.loc 1 1061 21
 867 004e 7B68     		ldr	r3, [r7, #4]
 868 0050 0522     		movs	r2, #5
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 35


 869 0052 83F82020 		strb	r2, [r3, #32]
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
 870              		.loc 1 1063 16
 871 0056 0123     		movs	r3, #1
 872 0058 12E0     		b	.L42
 873              	.L41:
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 874              		.loc 1 1052 17
 875 005a 7B68     		ldr	r3, [r7, #4]
 876 005c 1B68     		ldr	r3, [r3]
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 877              		.loc 1 1052 27
 878 005e 5B68     		ldr	r3, [r3, #4]
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 879              		.loc 1 1052 33
 880 0060 03F00103 		and	r3, r3, #1
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 881              		.loc 1 1052 49
 882 0064 002B     		cmp	r3, #0
 883 0066 E5D1     		bne	.L43
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Reset the CAN ErrorCode */
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 884              		.loc 1 1068 21
 885 0068 7B68     		ldr	r3, [r7, #4]
 886 006a 0022     		movs	r2, #0
 887 006c 5A62     		str	r2, [r3, #36]
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 888              		.loc 1 1071 12
 889 006e 0023     		movs	r3, #0
 890 0070 06E0     		b	.L42
 891              	.L40:
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_READY;
 892              		.loc 1 1076 9
 893 0072 7B68     		ldr	r3, [r7, #4]
 894 0074 5B6A     		ldr	r3, [r3, #36]
 895              		.loc 1 1076 21
 896 0076 43F40022 		orr	r2, r3, #524288
 897 007a 7B68     		ldr	r3, [r7, #4]
 898 007c 5A62     		str	r2, [r3, #36]
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 899              		.loc 1 1078 12
 900 007e 0123     		movs	r3, #1
 901              	.L42:
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 902              		.loc 1 1080 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 36


 903 0080 1846     		mov	r0, r3
 904 0082 1037     		adds	r7, r7, #16
 905              	.LCFI31:
 906              		.cfi_def_cfa_offset 8
 907 0084 BD46     		mov	sp, r7
 908              	.LCFI32:
 909              		.cfi_def_cfa_register 13
 910              		@ sp needed
 911 0086 80BD     		pop	{r7, pc}
 912              		.cfi_endproc
 913              	.LFE139:
 915              		.section	.text.HAL_CAN_Stop,"ax",%progbits
 916              		.align	1
 917              		.global	HAL_CAN_Stop
 918              		.syntax unified
 919              		.thumb
 920              		.thumb_func
 922              	HAL_CAN_Stop:
 923              	.LFB140:
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Stop the CAN module and enable access to configuration registers.
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Stop(CAN_HandleTypeDef *hcan)
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 924              		.loc 1 1089 1
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 16
 927              		@ frame_needed = 1, uses_anonymous_args = 0
 928 0000 80B5     		push	{r7, lr}
 929              	.LCFI33:
 930              		.cfi_def_cfa_offset 8
 931              		.cfi_offset 7, -8
 932              		.cfi_offset 14, -4
 933 0002 84B0     		sub	sp, sp, #16
 934              	.LCFI34:
 935              		.cfi_def_cfa_offset 24
 936 0004 00AF     		add	r7, sp, #0
 937              	.LCFI35:
 938              		.cfi_def_cfa_register 7
 939 0006 7860     		str	r0, [r7, #4]
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_LISTENING)
 940              		.loc 1 1092 11
 941 0008 7B68     		ldr	r3, [r7, #4]
 942 000a 93F82030 		ldrb	r3, [r3, #32]
 943 000e DBB2     		uxtb	r3, r3
 944              		.loc 1 1092 6
 945 0010 022B     		cmp	r3, #2
 946 0012 33D1     		bne	.L45
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Request initialisation */
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 37


 947              		.loc 1 1095 5
 948 0014 7B68     		ldr	r3, [r7, #4]
 949 0016 1B68     		ldr	r3, [r3]
 950 0018 1A68     		ldr	r2, [r3]
 951 001a 7B68     		ldr	r3, [r7, #4]
 952 001c 1B68     		ldr	r3, [r3]
 953 001e 42F00102 		orr	r2, r2, #1
 954 0022 1A60     		str	r2, [r3]
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get tick */
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     tickstart = HAL_GetTick();
 955              		.loc 1 1098 17
 956 0024 FFF7FEFF 		bl	HAL_GetTick
 957 0028 F860     		str	r0, [r7, #12]
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Wait the acknowledge */
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
 958              		.loc 1 1101 11
 959 002a 12E0     		b	.L46
 960              	.L48:
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check for the Timeout */
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 961              		.loc 1 1104 12
 962 002c FFF7FEFF 		bl	HAL_GetTick
 963 0030 0246     		mov	r2, r0
 964              		.loc 1 1104 26 discriminator 1
 965 0032 FB68     		ldr	r3, [r7, #12]
 966 0034 D31A     		subs	r3, r2, r3
 967              		.loc 1 1104 10 discriminator 1
 968 0036 0A2B     		cmp	r3, #10
 969 0038 0BD9     		bls	.L46
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 970              		.loc 1 1107 13
 971 003a 7B68     		ldr	r3, [r7, #4]
 972 003c 5B6A     		ldr	r3, [r3, #36]
 973              		.loc 1 1107 25
 974 003e 43F40032 		orr	r2, r3, #131072
 975 0042 7B68     		ldr	r3, [r7, #4]
 976 0044 5A62     		str	r2, [r3, #36]
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Change CAN state */
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
 977              		.loc 1 1110 21
 978 0046 7B68     		ldr	r3, [r7, #4]
 979 0048 0522     		movs	r2, #5
 980 004a 83F82020 		strb	r2, [r3, #32]
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
 981              		.loc 1 1112 16
 982 004e 0123     		movs	r3, #1
 983 0050 1BE0     		b	.L47
 984              	.L46:
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 985              		.loc 1 1101 17
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 38


 986 0052 7B68     		ldr	r3, [r7, #4]
 987 0054 1B68     		ldr	r3, [r3]
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 988              		.loc 1 1101 27
 989 0056 5B68     		ldr	r3, [r3, #4]
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 990              		.loc 1 1101 33
 991 0058 03F00103 		and	r3, r3, #1
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 992              		.loc 1 1101 49
 993 005c 002B     		cmp	r3, #0
 994 005e E5D0     		beq	.L48
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Exit from sleep mode */
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 995              		.loc 1 1117 5
 996 0060 7B68     		ldr	r3, [r7, #4]
 997 0062 1B68     		ldr	r3, [r3]
 998 0064 1A68     		ldr	r2, [r3]
 999 0066 7B68     		ldr	r3, [r7, #4]
 1000 0068 1B68     		ldr	r3, [r3]
 1001 006a 22F00202 		bic	r2, r2, #2
 1002 006e 1A60     		str	r2, [r3]
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Change CAN peripheral state */
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
 1003              		.loc 1 1120 17
 1004 0070 7B68     		ldr	r3, [r7, #4]
 1005 0072 0122     		movs	r2, #1
 1006 0074 83F82020 		strb	r2, [r3, #32]
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 1007              		.loc 1 1123 12
 1008 0078 0023     		movs	r3, #0
 1009 007a 06E0     		b	.L47
 1010              	.L45:
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_STARTED;
 1011              		.loc 1 1128 9
 1012 007c 7B68     		ldr	r3, [r7, #4]
 1013 007e 5B6A     		ldr	r3, [r3, #36]
 1014              		.loc 1 1128 21
 1015 0080 43F48012 		orr	r2, r3, #1048576
 1016 0084 7B68     		ldr	r3, [r7, #4]
 1017 0086 5A62     		str	r2, [r3, #36]
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1018              		.loc 1 1130 12
 1019 0088 0123     		movs	r3, #1
 1020              	.L47:
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 39


1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1021              		.loc 1 1132 1
 1022 008a 1846     		mov	r0, r3
 1023 008c 1037     		adds	r7, r7, #16
 1024              	.LCFI36:
 1025              		.cfi_def_cfa_offset 8
 1026 008e BD46     		mov	sp, r7
 1027              	.LCFI37:
 1028              		.cfi_def_cfa_register 13
 1029              		@ sp needed
 1030 0090 80BD     		pop	{r7, pc}
 1031              		.cfi_endproc
 1032              	.LFE140:
 1034              		.section	.text.HAL_CAN_RequestSleep,"ax",%progbits
 1035              		.align	1
 1036              		.global	HAL_CAN_RequestSleep
 1037              		.syntax unified
 1038              		.thumb
 1039              		.thumb_func
 1041              	HAL_CAN_RequestSleep:
 1042              	.LFB141:
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Request the sleep mode (low power) entry.
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         When returning from this function, Sleep mode will be entered
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         as soon as the current CAN activity (transmission or reception
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         of a CAN frame) has been completed.
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status.
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RequestSleep(CAN_HandleTypeDef *hcan)
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1043              		.loc 1 1144 1
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 16
 1046              		@ frame_needed = 1, uses_anonymous_args = 0
 1047              		@ link register save eliminated.
 1048 0000 80B4     		push	{r7}
 1049              	.LCFI38:
 1050              		.cfi_def_cfa_offset 4
 1051              		.cfi_offset 7, -4
 1052 0002 85B0     		sub	sp, sp, #20
 1053              	.LCFI39:
 1054              		.cfi_def_cfa_offset 24
 1055 0004 00AF     		add	r7, sp, #0
 1056              	.LCFI40:
 1057              		.cfi_def_cfa_register 7
 1058 0006 7860     		str	r0, [r7, #4]
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1059              		.loc 1 1145 24
 1060 0008 7B68     		ldr	r3, [r7, #4]
 1061 000a 93F82030 		ldrb	r3, [r3, #32]
 1062 000e FB73     		strb	r3, [r7, #15]
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1063              		.loc 1 1147 6
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 40


 1064 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1065 0012 012B     		cmp	r3, #1
 1066 0014 02D0     		beq	.L50
 1067              		.loc 1 1147 38 discriminator 1
 1068 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1069 0018 022B     		cmp	r3, #2
 1070 001a 09D1     		bne	.L51
 1071              	.L50:
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Request Sleep mode */
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 1072              		.loc 1 1151 5
 1073 001c 7B68     		ldr	r3, [r7, #4]
 1074 001e 1B68     		ldr	r3, [r3]
 1075 0020 1A68     		ldr	r2, [r3]
 1076 0022 7B68     		ldr	r3, [r7, #4]
 1077 0024 1B68     		ldr	r3, [r3]
 1078 0026 42F00202 		orr	r2, r2, #2
 1079 002a 1A60     		str	r2, [r3]
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 1080              		.loc 1 1154 12
 1081 002c 0023     		movs	r3, #0
 1082 002e 06E0     		b	.L52
 1083              	.L51:
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1084              		.loc 1 1159 9
 1085 0030 7B68     		ldr	r3, [r7, #4]
 1086 0032 5B6A     		ldr	r3, [r3, #36]
 1087              		.loc 1 1159 21
 1088 0034 43F48022 		orr	r2, r3, #262144
 1089 0038 7B68     		ldr	r3, [r7, #4]
 1090 003a 5A62     		str	r2, [r3, #36]
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1091              		.loc 1 1162 12
 1092 003c 0123     		movs	r3, #1
 1093              	.L52:
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1094              		.loc 1 1164 1
 1095 003e 1846     		mov	r0, r3
 1096 0040 1437     		adds	r7, r7, #20
 1097              	.LCFI41:
 1098              		.cfi_def_cfa_offset 4
 1099 0042 BD46     		mov	sp, r7
 1100              	.LCFI42:
 1101              		.cfi_def_cfa_register 13
 1102              		@ sp needed
 1103 0044 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 41


 1104              	.LCFI43:
 1105              		.cfi_restore 7
 1106              		.cfi_def_cfa_offset 0
 1107 0048 7047     		bx	lr
 1108              		.cfi_endproc
 1109              	.LFE141:
 1111              		.section	.text.HAL_CAN_WakeUp,"ax",%progbits
 1112              		.align	1
 1113              		.global	HAL_CAN_WakeUp
 1114              		.syntax unified
 1115              		.thumb
 1116              		.thumb_func
 1118              	HAL_CAN_WakeUp:
 1119              	.LFB142:
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Wake up from sleep mode.
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         When returning with HAL_OK status from this function, Sleep mode
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         is exited.
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status.
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef *hcan)
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1120              		.loc 1 1175 1
 1121              		.cfi_startproc
 1122              		@ args = 0, pretend = 0, frame = 16
 1123              		@ frame_needed = 1, uses_anonymous_args = 0
 1124              		@ link register save eliminated.
 1125 0000 80B4     		push	{r7}
 1126              	.LCFI44:
 1127              		.cfi_def_cfa_offset 4
 1128              		.cfi_offset 7, -4
 1129 0002 85B0     		sub	sp, sp, #20
 1130              	.LCFI45:
 1131              		.cfi_def_cfa_offset 24
 1132 0004 00AF     		add	r7, sp, #0
 1133              	.LCFI46:
 1134              		.cfi_def_cfa_register 7
 1135 0006 7860     		str	r0, [r7, #4]
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   __IO uint32_t count = 0;
 1136              		.loc 1 1176 17
 1137 0008 0023     		movs	r3, #0
 1138 000a BB60     		str	r3, [r7, #8]
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1139              		.loc 1 1177 24
 1140 000c 7B68     		ldr	r3, [r7, #4]
 1141 000e 93F82030 		ldrb	r3, [r3, #32]
 1142 0012 FB73     		strb	r3, [r7, #15]
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1143              		.loc 1 1179 6
 1144 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1145 0016 012B     		cmp	r3, #1
 1146 0018 02D0     		beq	.L54
 1147              		.loc 1 1179 38 discriminator 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 42


 1148 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1149 001c 022B     		cmp	r3, #2
 1150 001e 1FD1     		bne	.L55
 1151              	.L54:
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Wake up request */
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 1152              		.loc 1 1183 5
 1153 0020 7B68     		ldr	r3, [r7, #4]
 1154 0022 1B68     		ldr	r3, [r3]
 1155 0024 1A68     		ldr	r2, [r3]
 1156 0026 7B68     		ldr	r3, [r7, #4]
 1157 0028 1B68     		ldr	r3, [r3]
 1158 002a 22F00202 		bic	r2, r2, #2
 1159 002e 1A60     		str	r2, [r3]
 1160              	.L58:
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Wait sleep mode is exited */
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     do
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Increment counter */
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       count++;
 1161              		.loc 1 1189 12
 1162 0030 BB68     		ldr	r3, [r7, #8]
 1163 0032 0133     		adds	r3, r3, #1
 1164 0034 BB60     		str	r3, [r7, #8]
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check if timeout is reached */
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (count > CAN_WAKEUP_TIMEOUT_COUNTER)
 1165              		.loc 1 1192 17
 1166 0036 BB68     		ldr	r3, [r7, #8]
 1167              		.loc 1 1192 10
 1168 0038 104A     		ldr	r2, .L59
 1169 003a 9342     		cmp	r3, r2
 1170 003c 07D9     		bls	.L56
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 1171              		.loc 1 1195 13
 1172 003e 7B68     		ldr	r3, [r7, #4]
 1173 0040 5B6A     		ldr	r3, [r3, #36]
 1174              		.loc 1 1195 25
 1175 0042 43F40032 		orr	r2, r3, #131072
 1176 0046 7B68     		ldr	r3, [r7, #4]
 1177 0048 5A62     		str	r2, [r3, #36]
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
 1178              		.loc 1 1197 16
 1179 004a 0123     		movs	r3, #1
 1180 004c 0FE0     		b	.L57
 1181              	.L56:
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     } while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U);
 1182              		.loc 1 1199 19
 1183 004e 7B68     		ldr	r3, [r7, #4]
 1184 0050 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 43


 1185              		.loc 1 1199 29
 1186 0052 5B68     		ldr	r3, [r3, #4]
 1187              		.loc 1 1199 35
 1188 0054 03F00203 		and	r3, r3, #2
 1189              		.loc 1 1199 51
 1190 0058 002B     		cmp	r3, #0
 1191 005a E9D1     		bne	.L58
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 1192              		.loc 1 1202 12
 1193 005c 0023     		movs	r3, #0
 1194 005e 06E0     		b	.L57
 1195              	.L55:
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1196              		.loc 1 1207 9
 1197 0060 7B68     		ldr	r3, [r7, #4]
 1198 0062 5B6A     		ldr	r3, [r3, #36]
 1199              		.loc 1 1207 21
 1200 0064 43F48022 		orr	r2, r3, #262144
 1201 0068 7B68     		ldr	r3, [r7, #4]
 1202 006a 5A62     		str	r2, [r3, #36]
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1203              		.loc 1 1209 12
 1204 006c 0123     		movs	r3, #1
 1205              	.L57:
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1206              		.loc 1 1211 1
 1207 006e 1846     		mov	r0, r3
 1208 0070 1437     		adds	r7, r7, #20
 1209              	.LCFI47:
 1210              		.cfi_def_cfa_offset 4
 1211 0072 BD46     		mov	sp, r7
 1212              	.LCFI48:
 1213              		.cfi_def_cfa_register 13
 1214              		@ sp needed
 1215 0074 5DF8047B 		ldr	r7, [sp], #4
 1216              	.LCFI49:
 1217              		.cfi_restore 7
 1218              		.cfi_def_cfa_offset 0
 1219 0078 7047     		bx	lr
 1220              	.L60:
 1221 007a 00BF     		.align	2
 1222              	.L59:
 1223 007c 40420F00 		.word	1000000
 1224              		.cfi_endproc
 1225              	.LFE142:
 1227              		.section	.text.HAL_CAN_IsSleepActive,"ax",%progbits
 1228              		.align	1
 1229              		.global	HAL_CAN_IsSleepActive
 1230              		.syntax unified
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 44


 1231              		.thumb
 1232              		.thumb_func
 1234              	HAL_CAN_IsSleepActive:
 1235              	.LFB143:
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Check is sleep mode is active.
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Status
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          - 0 : Sleep mode is not active.
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          - 1 : Sleep mode is active.
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_IsSleepActive(const CAN_HandleTypeDef *hcan)
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1236              		.loc 1 1222 1
 1237              		.cfi_startproc
 1238              		@ args = 0, pretend = 0, frame = 16
 1239              		@ frame_needed = 1, uses_anonymous_args = 0
 1240              		@ link register save eliminated.
 1241 0000 80B4     		push	{r7}
 1242              	.LCFI50:
 1243              		.cfi_def_cfa_offset 4
 1244              		.cfi_offset 7, -4
 1245 0002 85B0     		sub	sp, sp, #20
 1246              	.LCFI51:
 1247              		.cfi_def_cfa_offset 24
 1248 0004 00AF     		add	r7, sp, #0
 1249              	.LCFI52:
 1250              		.cfi_def_cfa_register 7
 1251 0006 7860     		str	r0, [r7, #4]
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t status = 0U;
 1252              		.loc 1 1223 12
 1253 0008 0023     		movs	r3, #0
 1254 000a FB60     		str	r3, [r7, #12]
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1255              		.loc 1 1224 24
 1256 000c 7B68     		ldr	r3, [r7, #4]
 1257 000e 93F82030 		ldrb	r3, [r3, #32]
 1258 0012 FB72     		strb	r3, [r7, #11]
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1259              		.loc 1 1226 6
 1260 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1261 0016 012B     		cmp	r3, #1
 1262 0018 02D0     		beq	.L62
 1263              		.loc 1 1226 38 discriminator 1
 1264 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1265 001c 022B     		cmp	r3, #2
 1266 001e 08D1     		bne	.L63
 1267              	.L62:
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Sleep mode */
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 1268              		.loc 1 1230 14
 1269 0020 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 45


 1270 0022 1B68     		ldr	r3, [r3]
 1271              		.loc 1 1230 24
 1272 0024 5B68     		ldr	r3, [r3, #4]
 1273              		.loc 1 1230 30
 1274 0026 03F00203 		and	r3, r3, #2
 1275              		.loc 1 1230 8
 1276 002a 002B     		cmp	r3, #0
 1277 002c 01D0     		beq	.L63
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       status = 1U;
 1278              		.loc 1 1232 14
 1279 002e 0123     		movs	r3, #1
 1280 0030 FB60     		str	r3, [r7, #12]
 1281              	.L63:
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return function status */
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 1282              		.loc 1 1237 10
 1283 0032 FB68     		ldr	r3, [r7, #12]
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1284              		.loc 1 1238 1
 1285 0034 1846     		mov	r0, r3
 1286 0036 1437     		adds	r7, r7, #20
 1287              	.LCFI53:
 1288              		.cfi_def_cfa_offset 4
 1289 0038 BD46     		mov	sp, r7
 1290              	.LCFI54:
 1291              		.cfi_def_cfa_register 13
 1292              		@ sp needed
 1293 003a 5DF8047B 		ldr	r7, [sp], #4
 1294              	.LCFI55:
 1295              		.cfi_restore 7
 1296              		.cfi_def_cfa_offset 0
 1297 003e 7047     		bx	lr
 1298              		.cfi_endproc
 1299              	.LFE143:
 1301              		.section	.text.HAL_CAN_AddTxMessage,"ax",%progbits
 1302              		.align	1
 1303              		.global	HAL_CAN_AddTxMessage
 1304              		.syntax unified
 1305              		.thumb
 1306              		.thumb_func
 1308              	HAL_CAN_AddTxMessage:
 1309              	.LFB144:
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Add a message to the first free Tx mailbox and activate the
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         corresponding transmission request.
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  pHeader pointer to a CAN_TxHeaderTypeDef structure.
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  aData array containing the payload of the Tx frame.
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  pTxMailbox pointer to a variable where the function will return
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the TxMailbox used to store the Tx message.
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_Tx_Mailboxes.
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 46


1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AddTxMessage(CAN_HandleTypeDef *hcan, const CAN_TxHeaderTypeDef *pHeader,
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                        const uint8_t aData[], uint32_t *pTxMailbox)
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1310              		.loc 1 1254 1
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 32
 1313              		@ frame_needed = 1, uses_anonymous_args = 0
 1314              		@ link register save eliminated.
 1315 0000 80B4     		push	{r7}
 1316              	.LCFI56:
 1317              		.cfi_def_cfa_offset 4
 1318              		.cfi_offset 7, -4
 1319 0002 89B0     		sub	sp, sp, #36
 1320              	.LCFI57:
 1321              		.cfi_def_cfa_offset 40
 1322 0004 00AF     		add	r7, sp, #0
 1323              	.LCFI58:
 1324              		.cfi_def_cfa_register 7
 1325 0006 F860     		str	r0, [r7, #12]
 1326 0008 B960     		str	r1, [r7, #8]
 1327 000a 7A60     		str	r2, [r7, #4]
 1328 000c 3B60     		str	r3, [r7]
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t transmitmailbox;
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1329              		.loc 1 1256 24
 1330 000e FB68     		ldr	r3, [r7, #12]
 1331 0010 93F82030 		ldrb	r3, [r3, #32]
 1332 0014 FB77     		strb	r3, [r7, #31]
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tsr = READ_REG(hcan->Instance->TSR);
 1333              		.loc 1 1257 18
 1334 0016 FB68     		ldr	r3, [r7, #12]
 1335 0018 1B68     		ldr	r3, [r3]
 1336              		.loc 1 1257 12
 1337 001a 9B68     		ldr	r3, [r3, #8]
 1338 001c BB61     		str	r3, [r7, #24]
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check the parameters */
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(pHeader->IDE));
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_RTR(pHeader->RTR));
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_DLC(pHeader->DLC));
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (pHeader->IDE == CAN_ID_STD)
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_STDID(pHeader->StdId));
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_EXTID(pHeader->ExtId));
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(pHeader->TransmitGlobalTime));
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1339              		.loc 1 1273 6
 1340 001e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1341 0020 012B     		cmp	r3, #1
 1342 0022 03D0     		beq	.L66
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 47


 1343              		.loc 1 1273 38 discriminator 1
 1344 0024 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1345 0026 022B     		cmp	r3, #2
 1346 0028 40F0AD80 		bne	.L67
 1347              	.L66:
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check that all the Tx mailboxes are not full */
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (((tsr & CAN_TSR_TME0) != 0U) ||
 1348              		.loc 1 1277 15
 1349 002c BB69     		ldr	r3, [r7, #24]
 1350 002e 03F08063 		and	r3, r3, #67108864
 1351              		.loc 1 1277 8
 1352 0032 002B     		cmp	r3, #0
 1353 0034 0AD1     		bne	.L68
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
 1354              		.loc 1 1278 15
 1355 0036 BB69     		ldr	r3, [r7, #24]
 1356 0038 03F00063 		and	r3, r3, #134217728
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
 1357              		.loc 1 1277 38 discriminator 1
 1358 003c 002B     		cmp	r3, #0
 1359 003e 05D1     		bne	.L68
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((tsr & CAN_TSR_TME2) != 0U))
 1360              		.loc 1 1279 15
 1361 0040 BB69     		ldr	r3, [r7, #24]
 1362 0042 03F08053 		and	r3, r3, #268435456
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
 1363              		.loc 1 1278 38
 1364 0046 002B     		cmp	r3, #0
 1365 0048 00F09580 		beq	.L69
 1366              	.L68:
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Select an empty transmit mailbox */
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       transmitmailbox = (tsr & CAN_TSR_CODE) >> CAN_TSR_CODE_Pos;
 1367              		.loc 1 1282 46
 1368 004c BB69     		ldr	r3, [r7, #24]
 1369 004e 1B0E     		lsrs	r3, r3, #24
 1370              		.loc 1 1282 23
 1371 0050 03F00303 		and	r3, r3, #3
 1372 0054 7B61     		str	r3, [r7, #20]
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Store the Tx mailbox */
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       *pTxMailbox = (uint32_t)1 << transmitmailbox;
 1373              		.loc 1 1285 33
 1374 0056 0122     		movs	r2, #1
 1375 0058 7B69     		ldr	r3, [r7, #20]
 1376 005a 9A40     		lsls	r2, r2, r3
 1377              		.loc 1 1285 19
 1378 005c 3B68     		ldr	r3, [r7]
 1379 005e 1A60     		str	r2, [r3]
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set up the Id */
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (pHeader->IDE == CAN_ID_STD)
 1380              		.loc 1 1288 18
 1381 0060 BB68     		ldr	r3, [r7, #8]
 1382 0062 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 48


 1383              		.loc 1 1288 10
 1384 0064 002B     		cmp	r3, #0
 1385 0066 0DD1     		bne	.L70
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->StdId << CAN_TI0R_STID_Pos) |
 1386              		.loc 1 1290 68
 1387 0068 BB68     		ldr	r3, [r7, #8]
 1388 006a 1B68     		ldr	r3, [r3]
 1389              		.loc 1 1290 76
 1390 006c 5A05     		lsls	r2, r3, #21
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1391              		.loc 1 1291 67
 1392 006e BB68     		ldr	r3, [r7, #8]
 1393 0070 DB68     		ldr	r3, [r3, #12]
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1394              		.loc 1 1290 13
 1395 0072 F968     		ldr	r1, [r7, #12]
 1396 0074 0968     		ldr	r1, [r1]
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1397              		.loc 1 1290 98
 1398 0076 1A43     		orrs	r2, r2, r3
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1399              		.loc 1 1290 57
 1400 0078 7B69     		ldr	r3, [r7, #20]
 1401 007a 1833     		adds	r3, r3, #24
 1402 007c 1B01     		lsls	r3, r3, #4
 1403 007e 0B44     		add	r3, r3, r1
 1404 0080 1A60     		str	r2, [r3]
 1405 0082 0FE0     		b	.L71
 1406              	.L70:
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       else
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->ExtId << CAN_TI0R_EXID_Pos) |
 1407              		.loc 1 1295 68
 1408 0084 BB68     		ldr	r3, [r7, #8]
 1409 0086 5B68     		ldr	r3, [r3, #4]
 1410              		.loc 1 1295 76
 1411 0088 DA00     		lsls	r2, r3, #3
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1412              		.loc 1 1296 67
 1413 008a BB68     		ldr	r3, [r7, #8]
 1414 008c 9B68     		ldr	r3, [r3, #8]
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1415              		.loc 1 1295 98
 1416 008e 1A43     		orrs	r2, r2, r3
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1417              		.loc 1 1297 67
 1418 0090 BB68     		ldr	r3, [r7, #8]
 1419 0092 DB68     		ldr	r3, [r3, #12]
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1420              		.loc 1 1295 13
 1421 0094 F968     		ldr	r1, [r7, #12]
 1422 0096 0968     		ldr	r1, [r1]
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1423              		.loc 1 1296 73
 1424 0098 1A43     		orrs	r2, r2, r3
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 49


1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1425              		.loc 1 1295 57
 1426 009a 7B69     		ldr	r3, [r7, #20]
 1427 009c 1833     		adds	r3, r3, #24
 1428 009e 1B01     		lsls	r3, r3, #4
 1429 00a0 0B44     		add	r3, r3, r1
 1430 00a2 1A60     		str	r2, [r3]
 1431              	.L71:
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set up the DLC */
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TDTR = (pHeader->DLC);
 1432              		.loc 1 1301 11
 1433 00a4 FB68     		ldr	r3, [r7, #12]
 1434 00a6 1968     		ldr	r1, [r3]
 1435              		.loc 1 1301 66
 1436 00a8 BB68     		ldr	r3, [r7, #8]
 1437 00aa 1A69     		ldr	r2, [r3, #16]
 1438              		.loc 1 1301 56
 1439 00ac 7B69     		ldr	r3, [r7, #20]
 1440 00ae 1833     		adds	r3, r3, #24
 1441 00b0 1B01     		lsls	r3, r3, #4
 1442 00b2 0B44     		add	r3, r3, r1
 1443 00b4 0433     		adds	r3, r3, #4
 1444 00b6 1A60     		str	r2, [r3]
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set up the Transmit Global Time mode */
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (pHeader->TransmitGlobalTime == ENABLE)
 1445              		.loc 1 1304 18
 1446 00b8 BB68     		ldr	r3, [r7, #8]
 1447 00ba 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1448              		.loc 1 1304 10
 1449 00bc 012B     		cmp	r3, #1
 1450 00be 11D1     		bne	.L72
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TDTR, CAN_TDT0R_TGT);
 1451              		.loc 1 1306 9
 1452 00c0 FB68     		ldr	r3, [r7, #12]
 1453 00c2 1A68     		ldr	r2, [r3]
 1454 00c4 7B69     		ldr	r3, [r7, #20]
 1455 00c6 1833     		adds	r3, r3, #24
 1456 00c8 1B01     		lsls	r3, r3, #4
 1457 00ca 1344     		add	r3, r3, r2
 1458 00cc 0433     		adds	r3, r3, #4
 1459 00ce 1B68     		ldr	r3, [r3]
 1460 00d0 FA68     		ldr	r2, [r7, #12]
 1461 00d2 1168     		ldr	r1, [r2]
 1462 00d4 43F48072 		orr	r2, r3, #256
 1463 00d8 7B69     		ldr	r3, [r7, #20]
 1464 00da 1833     		adds	r3, r3, #24
 1465 00dc 1B01     		lsls	r3, r3, #4
 1466 00de 0B44     		add	r3, r3, r1
 1467 00e0 0433     		adds	r3, r3, #4
 1468 00e2 1A60     		str	r2, [r3]
 1469              	.L72:
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 50


1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set up the data field */
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR,
 1470              		.loc 1 1310 7
 1471 00e4 7B68     		ldr	r3, [r7, #4]
 1472 00e6 0733     		adds	r3, r3, #7
 1473 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1474 00ea 1A06     		lsls	r2, r3, #24
 1475 00ec 7B68     		ldr	r3, [r7, #4]
 1476 00ee 0633     		adds	r3, r3, #6
 1477 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1478 00f2 1B04     		lsls	r3, r3, #16
 1479 00f4 1A43     		orrs	r2, r2, r3
 1480 00f6 7B68     		ldr	r3, [r7, #4]
 1481 00f8 0533     		adds	r3, r3, #5
 1482 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1483 00fc 1B02     		lsls	r3, r3, #8
 1484 00fe 1343     		orrs	r3, r3, r2
 1485 0100 7A68     		ldr	r2, [r7, #4]
 1486 0102 0432     		adds	r2, r2, #4
 1487 0104 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1488 0106 1046     		mov	r0, r2
 1489 0108 FA68     		ldr	r2, [r7, #12]
 1490 010a 1168     		ldr	r1, [r2]
 1491 010c 43EA0002 		orr	r2, r3, r0
 1492 0110 7B69     		ldr	r3, [r7, #20]
 1493 0112 1B01     		lsls	r3, r3, #4
 1494 0114 0B44     		add	r3, r3, r1
 1495 0116 03F5C673 		add	r3, r3, #396
 1496 011a 1A60     		str	r2, [r3]
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[7] << CAN_TDH0R_DATA7_Pos) |
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[6] << CAN_TDH0R_DATA6_Pos) |
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[5] << CAN_TDH0R_DATA5_Pos) |
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[4] << CAN_TDH0R_DATA4_Pos));
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR,
 1497              		.loc 1 1315 7
 1498 011c 7B68     		ldr	r3, [r7, #4]
 1499 011e 0333     		adds	r3, r3, #3
 1500 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1501 0122 1A06     		lsls	r2, r3, #24
 1502 0124 7B68     		ldr	r3, [r7, #4]
 1503 0126 0233     		adds	r3, r3, #2
 1504 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1505 012a 1B04     		lsls	r3, r3, #16
 1506 012c 1A43     		orrs	r2, r2, r3
 1507 012e 7B68     		ldr	r3, [r7, #4]
 1508 0130 0133     		adds	r3, r3, #1
 1509 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1510 0134 1B02     		lsls	r3, r3, #8
 1511 0136 1343     		orrs	r3, r3, r2
 1512 0138 7A68     		ldr	r2, [r7, #4]
 1513 013a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1514 013c 1046     		mov	r0, r2
 1515 013e FA68     		ldr	r2, [r7, #12]
 1516 0140 1168     		ldr	r1, [r2]
 1517 0142 43EA0002 		orr	r2, r3, r0
 1518 0146 7B69     		ldr	r3, [r7, #20]
 1519 0148 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 51


 1520 014a 0B44     		add	r3, r3, r1
 1521 014c 03F5C473 		add	r3, r3, #392
 1522 0150 1A60     		str	r2, [r3]
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[3] << CAN_TDL0R_DATA3_Pos) |
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[2] << CAN_TDL0R_DATA2_Pos) |
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[1] << CAN_TDL0R_DATA1_Pos) |
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[0] << CAN_TDL0R_DATA0_Pos));
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Request transmission */
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
 1523              		.loc 1 1322 7
 1524 0152 FB68     		ldr	r3, [r7, #12]
 1525 0154 1A68     		ldr	r2, [r3]
 1526 0156 7B69     		ldr	r3, [r7, #20]
 1527 0158 1833     		adds	r3, r3, #24
 1528 015a 1B01     		lsls	r3, r3, #4
 1529 015c 1344     		add	r3, r3, r2
 1530 015e 1B68     		ldr	r3, [r3]
 1531 0160 FA68     		ldr	r2, [r7, #12]
 1532 0162 1168     		ldr	r1, [r2]
 1533 0164 43F00102 		orr	r2, r3, #1
 1534 0168 7B69     		ldr	r3, [r7, #20]
 1535 016a 1833     		adds	r3, r3, #24
 1536 016c 1B01     		lsls	r3, r3, #4
 1537 016e 0B44     		add	r3, r3, r1
 1538 0170 1A60     		str	r2, [r3]
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Return function status */
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       return HAL_OK;
 1539              		.loc 1 1325 14
 1540 0172 0023     		movs	r3, #0
 1541 0174 0EE0     		b	.L73
 1542              	.L69:
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Update error code */
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1543              		.loc 1 1330 11
 1544 0176 FB68     		ldr	r3, [r7, #12]
 1545 0178 5B6A     		ldr	r3, [r3, #36]
 1546              		.loc 1 1330 23
 1547 017a 43F40012 		orr	r2, r3, #2097152
 1548 017e FB68     		ldr	r3, [r7, #12]
 1549 0180 5A62     		str	r2, [r3, #36]
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       return HAL_ERROR;
 1550              		.loc 1 1332 14
 1551 0182 0123     		movs	r3, #1
 1552 0184 06E0     		b	.L73
 1553              	.L67:
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 52


 1554              		.loc 1 1338 9
 1555 0186 FB68     		ldr	r3, [r7, #12]
 1556 0188 5B6A     		ldr	r3, [r3, #36]
 1557              		.loc 1 1338 21
 1558 018a 43F48022 		orr	r2, r3, #262144
 1559 018e FB68     		ldr	r3, [r7, #12]
 1560 0190 5A62     		str	r2, [r3, #36]
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1561              		.loc 1 1340 12
 1562 0192 0123     		movs	r3, #1
 1563              	.L73:
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1564              		.loc 1 1342 1
 1565 0194 1846     		mov	r0, r3
 1566 0196 2437     		adds	r7, r7, #36
 1567              	.LCFI59:
 1568              		.cfi_def_cfa_offset 4
 1569 0198 BD46     		mov	sp, r7
 1570              	.LCFI60:
 1571              		.cfi_def_cfa_register 13
 1572              		@ sp needed
 1573 019a 5DF8047B 		ldr	r7, [sp], #4
 1574              	.LCFI61:
 1575              		.cfi_restore 7
 1576              		.cfi_def_cfa_offset 0
 1577 019e 7047     		bx	lr
 1578              		.cfi_endproc
 1579              	.LFE144:
 1581              		.section	.text.HAL_CAN_AbortTxRequest,"ax",%progbits
 1582              		.align	1
 1583              		.global	HAL_CAN_AbortTxRequest
 1584              		.syntax unified
 1585              		.thumb
 1586              		.thumb_func
 1588              	HAL_CAN_AbortTxRequest:
 1589              	.LFB145:
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Abort transmission requests
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  TxMailboxes List of the Tx Mailboxes to abort.
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AbortTxRequest(CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1590              		.loc 1 1353 1
 1591              		.cfi_startproc
 1592              		@ args = 0, pretend = 0, frame = 16
 1593              		@ frame_needed = 1, uses_anonymous_args = 0
 1594              		@ link register save eliminated.
 1595 0000 80B4     		push	{r7}
 1596              	.LCFI62:
 1597              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 53


 1598              		.cfi_offset 7, -4
 1599 0002 85B0     		sub	sp, sp, #20
 1600              	.LCFI63:
 1601              		.cfi_def_cfa_offset 24
 1602 0004 00AF     		add	r7, sp, #0
 1603              	.LCFI64:
 1604              		.cfi_def_cfa_register 7
 1605 0006 7860     		str	r0, [r7, #4]
 1606 0008 3960     		str	r1, [r7]
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1607              		.loc 1 1354 24
 1608 000a 7B68     		ldr	r3, [r7, #4]
 1609 000c 93F82030 		ldrb	r3, [r3, #32]
 1610 0010 FB73     		strb	r3, [r7, #15]
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1611              		.loc 1 1359 6
 1612 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1613 0014 012B     		cmp	r3, #1
 1614 0016 02D0     		beq	.L75
 1615              		.loc 1 1359 38 discriminator 1
 1616 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1617 001a 022B     		cmp	r3, #2
 1618 001c 28D1     		bne	.L76
 1619              	.L75:
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 0 */
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX0) != 0U)
 1620              		.loc 1 1363 22
 1621 001e 3B68     		ldr	r3, [r7]
 1622 0020 03F00103 		and	r3, r3, #1
 1623              		.loc 1 1363 8
 1624 0024 002B     		cmp	r3, #0
 1625 0026 07D0     		beq	.L77
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 0 */
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ0);
 1626              		.loc 1 1366 7
 1627 0028 7B68     		ldr	r3, [r7, #4]
 1628 002a 1B68     		ldr	r3, [r3]
 1629 002c 9A68     		ldr	r2, [r3, #8]
 1630 002e 7B68     		ldr	r3, [r7, #4]
 1631 0030 1B68     		ldr	r3, [r3]
 1632 0032 42F08002 		orr	r2, r2, #128
 1633 0036 9A60     		str	r2, [r3, #8]
 1634              	.L77:
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 1 */
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX1) != 0U)
 1635              		.loc 1 1370 22
 1636 0038 3B68     		ldr	r3, [r7]
 1637 003a 03F00203 		and	r3, r3, #2
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 54


 1638              		.loc 1 1370 8
 1639 003e 002B     		cmp	r3, #0
 1640 0040 07D0     		beq	.L78
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 1 */
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ1);
 1641              		.loc 1 1373 7
 1642 0042 7B68     		ldr	r3, [r7, #4]
 1643 0044 1B68     		ldr	r3, [r3]
 1644 0046 9A68     		ldr	r2, [r3, #8]
 1645 0048 7B68     		ldr	r3, [r7, #4]
 1646 004a 1B68     		ldr	r3, [r3]
 1647 004c 42F40042 		orr	r2, r2, #32768
 1648 0050 9A60     		str	r2, [r3, #8]
 1649              	.L78:
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 2 */
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX2) != 0U)
 1650              		.loc 1 1377 22
 1651 0052 3B68     		ldr	r3, [r7]
 1652 0054 03F00403 		and	r3, r3, #4
 1653              		.loc 1 1377 8
 1654 0058 002B     		cmp	r3, #0
 1655 005a 07D0     		beq	.L79
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 2 */
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ2);
 1656              		.loc 1 1380 7
 1657 005c 7B68     		ldr	r3, [r7, #4]
 1658 005e 1B68     		ldr	r3, [r3]
 1659 0060 9A68     		ldr	r2, [r3, #8]
 1660 0062 7B68     		ldr	r3, [r7, #4]
 1661 0064 1B68     		ldr	r3, [r3]
 1662 0066 42F40002 		orr	r2, r2, #8388608
 1663 006a 9A60     		str	r2, [r3, #8]
 1664              	.L79:
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 1665              		.loc 1 1384 12
 1666 006c 0023     		movs	r3, #0
 1667 006e 06E0     		b	.L80
 1668              	.L76:
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1669              		.loc 1 1389 9
 1670 0070 7B68     		ldr	r3, [r7, #4]
 1671 0072 5B6A     		ldr	r3, [r3, #36]
 1672              		.loc 1 1389 21
 1673 0074 43F48022 		orr	r2, r3, #262144
 1674 0078 7B68     		ldr	r3, [r7, #4]
 1675 007a 5A62     		str	r2, [r3, #36]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 55


1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1676              		.loc 1 1391 12
 1677 007c 0123     		movs	r3, #1
 1678              	.L80:
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1679              		.loc 1 1393 1
 1680 007e 1846     		mov	r0, r3
 1681 0080 1437     		adds	r7, r7, #20
 1682              	.LCFI65:
 1683              		.cfi_def_cfa_offset 4
 1684 0082 BD46     		mov	sp, r7
 1685              	.LCFI66:
 1686              		.cfi_def_cfa_register 13
 1687              		@ sp needed
 1688 0084 5DF8047B 		ldr	r7, [sp], #4
 1689              	.LCFI67:
 1690              		.cfi_restore 7
 1691              		.cfi_def_cfa_offset 0
 1692 0088 7047     		bx	lr
 1693              		.cfi_endproc
 1694              	.LFE145:
 1696              		.section	.text.HAL_CAN_GetTxMailboxesFreeLevel,"ax",%progbits
 1697              		.align	1
 1698              		.global	HAL_CAN_GetTxMailboxesFreeLevel
 1699              		.syntax unified
 1700              		.thumb
 1701              		.thumb_func
 1703              	HAL_CAN_GetTxMailboxesFreeLevel:
 1704              	.LFB146:
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return Tx Mailboxes free level: number of free Tx Mailboxes.
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Number of free Tx Mailboxes.
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetTxMailboxesFreeLevel(const CAN_HandleTypeDef *hcan)
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1705              		.loc 1 1402 1
 1706              		.cfi_startproc
 1707              		@ args = 0, pretend = 0, frame = 16
 1708              		@ frame_needed = 1, uses_anonymous_args = 0
 1709              		@ link register save eliminated.
 1710 0000 80B4     		push	{r7}
 1711              	.LCFI68:
 1712              		.cfi_def_cfa_offset 4
 1713              		.cfi_offset 7, -4
 1714 0002 85B0     		sub	sp, sp, #20
 1715              	.LCFI69:
 1716              		.cfi_def_cfa_offset 24
 1717 0004 00AF     		add	r7, sp, #0
 1718              	.LCFI70:
 1719              		.cfi_def_cfa_register 7
 1720 0006 7860     		str	r0, [r7, #4]
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t freelevel = 0U;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 56


 1721              		.loc 1 1403 12
 1722 0008 0023     		movs	r3, #0
 1723 000a FB60     		str	r3, [r7, #12]
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1724              		.loc 1 1404 24
 1725 000c 7B68     		ldr	r3, [r7, #4]
 1726 000e 93F82030 		ldrb	r3, [r3, #32]
 1727 0012 FB72     		strb	r3, [r7, #11]
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1728              		.loc 1 1406 6
 1729 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1730 0016 012B     		cmp	r3, #1
 1731 0018 02D0     		beq	.L82
 1732              		.loc 1 1406 38 discriminator 1
 1733 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1734 001c 022B     		cmp	r3, #2
 1735 001e 1DD1     		bne	.L83
 1736              	.L82:
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 0 status */
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME0) != 0U)
 1737              		.loc 1 1410 14
 1738 0020 7B68     		ldr	r3, [r7, #4]
 1739 0022 1B68     		ldr	r3, [r3]
 1740              		.loc 1 1410 24
 1741 0024 9B68     		ldr	r3, [r3, #8]
 1742              		.loc 1 1410 30
 1743 0026 03F08063 		and	r3, r3, #67108864
 1744              		.loc 1 1410 8
 1745 002a 002B     		cmp	r3, #0
 1746 002c 02D0     		beq	.L84
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       freelevel++;
 1747              		.loc 1 1412 16
 1748 002e FB68     		ldr	r3, [r7, #12]
 1749 0030 0133     		adds	r3, r3, #1
 1750 0032 FB60     		str	r3, [r7, #12]
 1751              	.L84:
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 1 status */
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME1) != 0U)
 1752              		.loc 1 1416 14
 1753 0034 7B68     		ldr	r3, [r7, #4]
 1754 0036 1B68     		ldr	r3, [r3]
 1755              		.loc 1 1416 24
 1756 0038 9B68     		ldr	r3, [r3, #8]
 1757              		.loc 1 1416 30
 1758 003a 03F00063 		and	r3, r3, #134217728
 1759              		.loc 1 1416 8
 1760 003e 002B     		cmp	r3, #0
 1761 0040 02D0     		beq	.L85
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       freelevel++;
 1762              		.loc 1 1418 16
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 57


 1763 0042 FB68     		ldr	r3, [r7, #12]
 1764 0044 0133     		adds	r3, r3, #1
 1765 0046 FB60     		str	r3, [r7, #12]
 1766              	.L85:
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 2 status */
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME2) != 0U)
 1767              		.loc 1 1422 14
 1768 0048 7B68     		ldr	r3, [r7, #4]
 1769 004a 1B68     		ldr	r3, [r3]
 1770              		.loc 1 1422 24
 1771 004c 9B68     		ldr	r3, [r3, #8]
 1772              		.loc 1 1422 30
 1773 004e 03F08053 		and	r3, r3, #268435456
 1774              		.loc 1 1422 8
 1775 0052 002B     		cmp	r3, #0
 1776 0054 02D0     		beq	.L83
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       freelevel++;
 1777              		.loc 1 1424 16
 1778 0056 FB68     		ldr	r3, [r7, #12]
 1779 0058 0133     		adds	r3, r3, #1
 1780 005a FB60     		str	r3, [r7, #12]
 1781              	.L83:
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return Tx Mailboxes free level */
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return freelevel;
 1782              		.loc 1 1429 10
 1783 005c FB68     		ldr	r3, [r7, #12]
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1784              		.loc 1 1430 1
 1785 005e 1846     		mov	r0, r3
 1786 0060 1437     		adds	r7, r7, #20
 1787              	.LCFI71:
 1788              		.cfi_def_cfa_offset 4
 1789 0062 BD46     		mov	sp, r7
 1790              	.LCFI72:
 1791              		.cfi_def_cfa_register 13
 1792              		@ sp needed
 1793 0064 5DF8047B 		ldr	r7, [sp], #4
 1794              	.LCFI73:
 1795              		.cfi_restore 7
 1796              		.cfi_def_cfa_offset 0
 1797 0068 7047     		bx	lr
 1798              		.cfi_endproc
 1799              	.LFE146:
 1801              		.section	.text.HAL_CAN_IsTxMessagePending,"ax",%progbits
 1802              		.align	1
 1803              		.global	HAL_CAN_IsTxMessagePending
 1804              		.syntax unified
 1805              		.thumb
 1806              		.thumb_func
 1808              	HAL_CAN_IsTxMessagePending:
 1809              	.LFB147:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 58


1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Check if a transmission request is pending on the selected Tx
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         Mailboxes.
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  TxMailboxes List of Tx Mailboxes to check.
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Status
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          - 0 : No pending transmission request on any selected Tx Mailboxes.
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          - 1 : Pending transmission request on at least one of the selected
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *                Tx Mailbox.
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_IsTxMessagePending(const CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1810              		.loc 1 1445 1
 1811              		.cfi_startproc
 1812              		@ args = 0, pretend = 0, frame = 16
 1813              		@ frame_needed = 1, uses_anonymous_args = 0
 1814              		@ link register save eliminated.
 1815 0000 80B4     		push	{r7}
 1816              	.LCFI74:
 1817              		.cfi_def_cfa_offset 4
 1818              		.cfi_offset 7, -4
 1819 0002 85B0     		sub	sp, sp, #20
 1820              	.LCFI75:
 1821              		.cfi_def_cfa_offset 24
 1822 0004 00AF     		add	r7, sp, #0
 1823              	.LCFI76:
 1824              		.cfi_def_cfa_register 7
 1825 0006 7860     		str	r0, [r7, #4]
 1826 0008 3960     		str	r1, [r7]
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t status = 0U;
 1827              		.loc 1 1446 12
 1828 000a 0023     		movs	r3, #0
 1829 000c FB60     		str	r3, [r7, #12]
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1830              		.loc 1 1447 24
 1831 000e 7B68     		ldr	r3, [r7, #4]
 1832 0010 93F82030 		ldrb	r3, [r3, #32]
 1833 0014 FB72     		strb	r3, [r7, #11]
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1834              		.loc 1 1452 6
 1835 0016 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1836 0018 012B     		cmp	r3, #1
 1837 001a 02D0     		beq	.L88
 1838              		.loc 1 1452 38 discriminator 1
 1839 001c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1840 001e 022B     		cmp	r3, #2
 1841 0020 0BD1     		bne	.L89
 1842              	.L88:
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 59


1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check pending transmission request on the selected Tx Mailboxes */
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & (TxMailboxes << CAN_TSR_TME0_Pos)) != (TxMailboxes << CAN_TSR_TME0_P
 1843              		.loc 1 1456 14
 1844 0022 7B68     		ldr	r3, [r7, #4]
 1845 0024 1B68     		ldr	r3, [r3]
 1846              		.loc 1 1456 24
 1847 0026 9A68     		ldr	r2, [r3, #8]
 1848              		.loc 1 1456 45
 1849 0028 3B68     		ldr	r3, [r7]
 1850 002a 9B06     		lsls	r3, r3, #26
 1851              		.loc 1 1456 30
 1852 002c 1A40     		ands	r2, r2, r3
 1853              		.loc 1 1456 83
 1854 002e 3B68     		ldr	r3, [r7]
 1855 0030 9B06     		lsls	r3, r3, #26
 1856              		.loc 1 1456 8
 1857 0032 9A42     		cmp	r2, r3
 1858 0034 01D0     		beq	.L89
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       status = 1U;
 1859              		.loc 1 1458 14
 1860 0036 0123     		movs	r3, #1
 1861 0038 FB60     		str	r3, [r7, #12]
 1862              	.L89:
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return status */
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 1863              		.loc 1 1463 10
 1864 003a FB68     		ldr	r3, [r7, #12]
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1865              		.loc 1 1464 1
 1866 003c 1846     		mov	r0, r3
 1867 003e 1437     		adds	r7, r7, #20
 1868              	.LCFI77:
 1869              		.cfi_def_cfa_offset 4
 1870 0040 BD46     		mov	sp, r7
 1871              	.LCFI78:
 1872              		.cfi_def_cfa_register 13
 1873              		@ sp needed
 1874 0042 5DF8047B 		ldr	r7, [sp], #4
 1875              	.LCFI79:
 1876              		.cfi_restore 7
 1877              		.cfi_def_cfa_offset 0
 1878 0046 7047     		bx	lr
 1879              		.cfi_endproc
 1880              	.LFE147:
 1882              		.section	.text.HAL_CAN_GetTxTimestamp,"ax",%progbits
 1883              		.align	1
 1884              		.global	HAL_CAN_GetTxTimestamp
 1885              		.syntax unified
 1886              		.thumb
 1887              		.thumb_func
 1889              	HAL_CAN_GetTxTimestamp:
 1890              	.LFB148:
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 60


1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return timestamp of Tx message sent, if time triggered communication
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             mode is enabled.
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  TxMailbox Tx Mailbox where the timestamp of message sent will be
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         read.
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be one value of @arg CAN_Tx_Mailboxes.
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Timestamp of message sent from Tx Mailbox.
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetTxTimestamp(const CAN_HandleTypeDef *hcan, uint32_t TxMailbox)
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1891              		.loc 1 1477 1
 1892              		.cfi_startproc
 1893              		@ args = 0, pretend = 0, frame = 32
 1894              		@ frame_needed = 1, uses_anonymous_args = 0
 1895              		@ link register save eliminated.
 1896 0000 80B4     		push	{r7}
 1897              	.LCFI80:
 1898              		.cfi_def_cfa_offset 4
 1899              		.cfi_offset 7, -4
 1900 0002 89B0     		sub	sp, sp, #36
 1901              	.LCFI81:
 1902              		.cfi_def_cfa_offset 40
 1903 0004 00AF     		add	r7, sp, #0
 1904              	.LCFI82:
 1905              		.cfi_def_cfa_register 7
 1906 0006 7860     		str	r0, [r7, #4]
 1907 0008 3960     		str	r1, [r7]
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t timestamp = 0U;
 1908              		.loc 1 1478 12
 1909 000a 0023     		movs	r3, #0
 1910 000c FB61     		str	r3, [r7, #28]
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t transmitmailbox;
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1911              		.loc 1 1480 24
 1912 000e 7B68     		ldr	r3, [r7, #4]
 1913 0010 93F82030 		ldrb	r3, [r3, #32]
 1914 0014 FB76     		strb	r3, [r7, #27]
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX(TxMailbox));
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1915              		.loc 1 1485 6
 1916 0016 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1917 0018 012B     		cmp	r3, #1
 1918 001a 02D0     		beq	.L92
 1919              		.loc 1 1485 38 discriminator 1
 1920 001c FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1921 001e 022B     		cmp	r3, #2
 1922 0020 1CD1     		bne	.L93
 1923              	.L92:
 1924 0022 3B68     		ldr	r3, [r7]
 1925 0024 FB60     		str	r3, [r7, #12]
 1926              	.LBB6:
 1927              	.LBB7:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 61


 1928              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 62


  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 63


 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 64


 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 65


 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 66


 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 67


 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 1929              		.loc 2 380 4
 1930 0026 FB68     		ldr	r3, [r7, #12]
 1931              		.syntax unified
 1932              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1933 0028 93FAA3F3 		rbit r3, r3
 1934              	@ 0 "" 2
 1935              		.thumb
 1936              		.syntax unified
 1937 002c BB60     		str	r3, [r7, #8]
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 68


 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 1938              		.loc 2 393 10
 1939 002e BB68     		ldr	r3, [r7, #8]
 1940 0030 3B61     		str	r3, [r7, #16]
 1941              	.LBE7:
 1942              	.LBE6:
 1943              	.LBB8:
 1944              	.LBB9:
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 1945              		.loc 2 414 6
 1946 0032 3B69     		ldr	r3, [r7, #16]
 1947 0034 002B     		cmp	r3, #0
 1948 0036 01D1     		bne	.L95
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 1949              		.loc 2 416 12
 1950 0038 2023     		movs	r3, #32
 1951 003a 03E0     		b	.L96
 1952              	.L95:
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 1953              		.loc 2 418 10
 1954 003c 3B69     		ldr	r3, [r7, #16]
 1955 003e B3FA83F3 		clz	r3, r3
 1956              		.loc 2 418 10 is_stmt 0 discriminator 1
 1957 0042 DBB2     		uxtb	r3, r3
 1958              	.L96:
 1959              	.LBE9:
 1960              	.LBE8:
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Select the Tx mailbox */
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     transmitmailbox = POSITION_VAL(TxMailbox);
 1961              		.loc 1 1489 21 is_stmt 1 discriminator 2
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 69


 1962 0044 7B61     		str	r3, [r7, #20]
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get timestamp */
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     timestamp = (hcan->Instance->sTxMailBox[transmitmailbox].TDTR & CAN_TDT0R_TIME) >> CAN_TDT0R_TI
 1963              		.loc 1 1492 22
 1964 0046 7B68     		ldr	r3, [r7, #4]
 1965 0048 1A68     		ldr	r2, [r3]
 1966              		.loc 1 1492 61
 1967 004a 7B69     		ldr	r3, [r7, #20]
 1968 004c 1833     		adds	r3, r3, #24
 1969 004e 1B01     		lsls	r3, r3, #4
 1970 0050 1344     		add	r3, r3, r2
 1971 0052 0433     		adds	r3, r3, #4
 1972 0054 1B68     		ldr	r3, [r3]
 1973              		.loc 1 1492 85
 1974 0056 1B0C     		lsrs	r3, r3, #16
 1975              		.loc 1 1492 15
 1976 0058 9BB2     		uxth	r3, r3
 1977 005a FB61     		str	r3, [r7, #28]
 1978              	.L93:
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return the timestamp */
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return timestamp;
 1979              		.loc 1 1496 10
 1980 005c FB69     		ldr	r3, [r7, #28]
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1981              		.loc 1 1497 1
 1982 005e 1846     		mov	r0, r3
 1983 0060 2437     		adds	r7, r7, #36
 1984              	.LCFI83:
 1985              		.cfi_def_cfa_offset 4
 1986 0062 BD46     		mov	sp, r7
 1987              	.LCFI84:
 1988              		.cfi_def_cfa_register 13
 1989              		@ sp needed
 1990 0064 5DF8047B 		ldr	r7, [sp], #4
 1991              	.LCFI85:
 1992              		.cfi_restore 7
 1993              		.cfi_def_cfa_offset 0
 1994 0068 7047     		bx	lr
 1995              		.cfi_endproc
 1996              	.LFE148:
 1998              		.section	.text.HAL_CAN_GetRxMessage,"ax",%progbits
 1999              		.align	1
 2000              		.global	HAL_CAN_GetRxMessage
 2001              		.syntax unified
 2002              		.thumb
 2003              		.thumb_func
 2005              	HAL_CAN_GetRxMessage:
 2006              	.LFB149:
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Get an CAN frame from the Rx FIFO zone into the message RAM.
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  RxFifo Fifo number of the received message to be read.
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 70


1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  pHeader pointer to a CAN_RxHeaderTypeDef structure where the header
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         of the Rx frame will be stored.
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  aData array where the payload of the Rx frame will be stored.
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_GetRxMessage(CAN_HandleTypeDef *hcan, uint32_t RxFifo,
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                        CAN_RxHeaderTypeDef *pHeader, uint8_t aData[])
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2007              		.loc 1 1512 1
 2008              		.cfi_startproc
 2009              		@ args = 0, pretend = 0, frame = 24
 2010              		@ frame_needed = 1, uses_anonymous_args = 0
 2011              		@ link register save eliminated.
 2012 0000 80B4     		push	{r7}
 2013              	.LCFI86:
 2014              		.cfi_def_cfa_offset 4
 2015              		.cfi_offset 7, -4
 2016 0002 87B0     		sub	sp, sp, #28
 2017              	.LCFI87:
 2018              		.cfi_def_cfa_offset 32
 2019 0004 00AF     		add	r7, sp, #0
 2020              	.LCFI88:
 2021              		.cfi_def_cfa_register 7
 2022 0006 F860     		str	r0, [r7, #12]
 2023 0008 B960     		str	r1, [r7, #8]
 2024 000a 7A60     		str	r2, [r7, #4]
 2025 000c 3B60     		str	r3, [r7]
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2026              		.loc 1 1513 24
 2027 000e FB68     		ldr	r3, [r7, #12]
 2028 0010 93F82030 		ldrb	r3, [r3, #32]
 2029 0014 FB75     		strb	r3, [r7, #23]
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2030              		.loc 1 1517 6
 2031 0016 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2032 0018 012B     		cmp	r3, #1
 2033 001a 03D0     		beq	.L99
 2034              		.loc 1 1517 38 discriminator 1
 2035 001c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2036 001e 022B     		cmp	r3, #2
 2037 0020 40F00381 		bne	.L100
 2038              	.L99:
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the Rx FIFO */
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 2039              		.loc 1 1521 8
 2040 0024 BB68     		ldr	r3, [r7, #8]
 2041 0026 002B     		cmp	r3, #0
 2042 0028 0ED1     		bne	.L101
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check that the Rx FIFO 0 is not empty */
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) == 0U)
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 71


 2043              		.loc 1 1524 16
 2044 002a FB68     		ldr	r3, [r7, #12]
 2045 002c 1B68     		ldr	r3, [r3]
 2046              		.loc 1 1524 26
 2047 002e DB68     		ldr	r3, [r3, #12]
 2048              		.loc 1 1524 33
 2049 0030 03F00303 		and	r3, r3, #3
 2050              		.loc 1 1524 10
 2051 0034 002B     		cmp	r3, #0
 2052 0036 16D1     		bne	.L102
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 2053              		.loc 1 1527 13
 2054 0038 FB68     		ldr	r3, [r7, #12]
 2055 003a 5B6A     		ldr	r3, [r3, #36]
 2056              		.loc 1 1527 25
 2057 003c 43F40012 		orr	r2, r3, #2097152
 2058 0040 FB68     		ldr	r3, [r7, #12]
 2059 0042 5A62     		str	r2, [r3, #36]
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
 2060              		.loc 1 1529 16
 2061 0044 0123     		movs	r3, #1
 2062 0046 F7E0     		b	.L103
 2063              	.L101:
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check that the Rx FIFO 1 is not empty */
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) == 0U)
 2064              		.loc 1 1535 16
 2065 0048 FB68     		ldr	r3, [r7, #12]
 2066 004a 1B68     		ldr	r3, [r3]
 2067              		.loc 1 1535 26
 2068 004c 1B69     		ldr	r3, [r3, #16]
 2069              		.loc 1 1535 33
 2070 004e 03F00303 		and	r3, r3, #3
 2071              		.loc 1 1535 10
 2072 0052 002B     		cmp	r3, #0
 2073 0054 07D1     		bne	.L102
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 2074              		.loc 1 1538 13
 2075 0056 FB68     		ldr	r3, [r7, #12]
 2076 0058 5B6A     		ldr	r3, [r3, #36]
 2077              		.loc 1 1538 25
 2078 005a 43F40012 		orr	r2, r3, #2097152
 2079 005e FB68     		ldr	r3, [r7, #12]
 2080 0060 5A62     		str	r2, [r3, #36]
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
 2081              		.loc 1 1540 16
 2082 0062 0123     		movs	r3, #1
 2083 0064 E8E0     		b	.L103
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 72


 2084              	.L102:
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get the header */
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     pHeader->IDE = CAN_RI0R_IDE & hcan->Instance->sFIFOMailBox[RxFifo].RIR;
 2085              		.loc 1 1545 39
 2086 0066 FB68     		ldr	r3, [r7, #12]
 2087 0068 1A68     		ldr	r2, [r3]
 2088              		.loc 1 1545 71
 2089 006a BB68     		ldr	r3, [r7, #8]
 2090 006c 1B33     		adds	r3, r3, #27
 2091 006e 1B01     		lsls	r3, r3, #4
 2092 0070 1344     		add	r3, r3, r2
 2093 0072 1B68     		ldr	r3, [r3]
 2094              		.loc 1 1545 33
 2095 0074 03F00402 		and	r2, r3, #4
 2096              		.loc 1 1545 18
 2097 0078 7B68     		ldr	r3, [r7, #4]
 2098 007a 9A60     		str	r2, [r3, #8]
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 2099              		.loc 1 1546 16
 2100 007c 7B68     		ldr	r3, [r7, #4]
 2101 007e 9B68     		ldr	r3, [r3, #8]
 2102              		.loc 1 1546 8
 2103 0080 002B     		cmp	r3, #0
 2104 0082 0CD1     		bne	.L104
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       pHeader->StdId = (CAN_RI0R_STID & hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_TI0R_STID_
 2105              		.loc 1 1548 45
 2106 0084 FB68     		ldr	r3, [r7, #12]
 2107 0086 1A68     		ldr	r2, [r3]
 2108              		.loc 1 1548 77
 2109 0088 BB68     		ldr	r3, [r7, #8]
 2110 008a 1B33     		adds	r3, r3, #27
 2111 008c 1B01     		lsls	r3, r3, #4
 2112 008e 1344     		add	r3, r3, r2
 2113 0090 1B68     		ldr	r3, [r3]
 2114              		.loc 1 1548 83
 2115 0092 5B0D     		lsrs	r3, r3, #21
 2116 0094 C3F30A02 		ubfx	r2, r3, #0, #11
 2117              		.loc 1 1548 22
 2118 0098 7B68     		ldr	r3, [r7, #4]
 2119 009a 1A60     		str	r2, [r3]
 2120 009c 0BE0     		b	.L105
 2121              	.L104:
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       pHeader->ExtId = ((CAN_RI0R_EXID | CAN_RI0R_STID) &
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 2122              		.loc 1 1553 29
 2123 009e FB68     		ldr	r3, [r7, #12]
 2124 00a0 1A68     		ldr	r2, [r3]
 2125              		.loc 1 1553 61
 2126 00a2 BB68     		ldr	r3, [r7, #8]
 2127 00a4 1B33     		adds	r3, r3, #27
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 73


 2128 00a6 1B01     		lsls	r3, r3, #4
 2129 00a8 1344     		add	r3, r3, r2
 2130 00aa 1B68     		ldr	r3, [r3]
 2131              		.loc 1 1553 67
 2132 00ac DB08     		lsrs	r3, r3, #3
 2133 00ae 23F06042 		bic	r2, r3, #-536870912
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 2134              		.loc 1 1552 22
 2135 00b2 7B68     		ldr	r3, [r7, #4]
 2136 00b4 5A60     		str	r2, [r3, #4]
 2137              	.L105:
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     pHeader->RTR = (CAN_RI0R_RTR & hcan->Instance->sFIFOMailBox[RxFifo].RIR);
 2138              		.loc 1 1555 40
 2139 00b6 FB68     		ldr	r3, [r7, #12]
 2140 00b8 1A68     		ldr	r2, [r3]
 2141              		.loc 1 1555 72
 2142 00ba BB68     		ldr	r3, [r7, #8]
 2143 00bc 1B33     		adds	r3, r3, #27
 2144 00be 1B01     		lsls	r3, r3, #4
 2145 00c0 1344     		add	r3, r3, r2
 2146 00c2 1B68     		ldr	r3, [r3]
 2147              		.loc 1 1555 34
 2148 00c4 03F00202 		and	r2, r3, #2
 2149              		.loc 1 1555 18
 2150 00c8 7B68     		ldr	r3, [r7, #4]
 2151 00ca DA60     		str	r2, [r3, #12]
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (((CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos) >= 8U)
 2152              		.loc 1 1556 31
 2153 00cc FB68     		ldr	r3, [r7, #12]
 2154 00ce 1A68     		ldr	r2, [r3]
 2155              		.loc 1 1556 63
 2156 00d0 BB68     		ldr	r3, [r7, #8]
 2157 00d2 1B33     		adds	r3, r3, #27
 2158 00d4 1B01     		lsls	r3, r3, #4
 2159 00d6 1344     		add	r3, r3, r2
 2160 00d8 0433     		adds	r3, r3, #4
 2161 00da 1B68     		ldr	r3, [r3]
 2162              		.loc 1 1556 92
 2163 00dc 03F00803 		and	r3, r3, #8
 2164              		.loc 1 1556 8
 2165 00e0 002B     		cmp	r3, #0
 2166 00e2 03D0     		beq	.L106
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Truncate DLC to 8 if received field is over range */
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       pHeader->DLC = 8U;
 2167              		.loc 1 1559 20
 2168 00e4 7B68     		ldr	r3, [r7, #4]
 2169 00e6 0822     		movs	r2, #8
 2170 00e8 1A61     		str	r2, [r3, #16]
 2171 00ea 0BE0     		b	.L107
 2172              	.L106:
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_P
 2173              		.loc 1 1563 43
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 74


 2174 00ec FB68     		ldr	r3, [r7, #12]
 2175 00ee 1A68     		ldr	r2, [r3]
 2176              		.loc 1 1563 75
 2177 00f0 BB68     		ldr	r3, [r7, #8]
 2178 00f2 1B33     		adds	r3, r3, #27
 2179 00f4 1B01     		lsls	r3, r3, #4
 2180 00f6 1344     		add	r3, r3, r2
 2181 00f8 0433     		adds	r3, r3, #4
 2182 00fa 1B68     		ldr	r3, [r3]
 2183              		.loc 1 1563 82
 2184 00fc 03F00F02 		and	r2, r3, #15
 2185              		.loc 1 1563 20
 2186 0100 7B68     		ldr	r3, [r7, #4]
 2187 0102 1A61     		str	r2, [r3, #16]
 2188              	.L107:
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
 2189              		.loc 1 1565 54
 2190 0104 FB68     		ldr	r3, [r7, #12]
 2191 0106 1A68     		ldr	r2, [r3]
 2192              		.loc 1 1565 86
 2193 0108 BB68     		ldr	r3, [r7, #8]
 2194 010a 1B33     		adds	r3, r3, #27
 2195 010c 1B01     		lsls	r3, r3, #4
 2196 010e 1344     		add	r3, r3, r2
 2197 0110 0433     		adds	r3, r3, #4
 2198 0112 1B68     		ldr	r3, [r3]
 2199              		.loc 1 1565 93
 2200 0114 1B0A     		lsrs	r3, r3, #8
 2201 0116 DAB2     		uxtb	r2, r3
 2202              		.loc 1 1565 31
 2203 0118 7B68     		ldr	r3, [r7, #4]
 2204 011a 9A61     		str	r2, [r3, #24]
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 2205              		.loc 1 1566 48
 2206 011c FB68     		ldr	r3, [r7, #12]
 2207 011e 1A68     		ldr	r2, [r3]
 2208              		.loc 1 1566 80
 2209 0120 BB68     		ldr	r3, [r7, #8]
 2210 0122 1B33     		adds	r3, r3, #27
 2211 0124 1B01     		lsls	r3, r3, #4
 2212 0126 1344     		add	r3, r3, r2
 2213 0128 0433     		adds	r3, r3, #4
 2214 012a 1B68     		ldr	r3, [r3]
 2215              		.loc 1 1566 87
 2216 012c 1B0C     		lsrs	r3, r3, #16
 2217 012e 9AB2     		uxth	r2, r3
 2218              		.loc 1 1566 24
 2219 0130 7B68     		ldr	r3, [r7, #4]
 2220 0132 5A61     		str	r2, [r3, #20]
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get the data */
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[0] = (uint8_t)((CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2221              		.loc 1 1569 49
 2222 0134 FB68     		ldr	r3, [r7, #12]
 2223 0136 1A68     		ldr	r2, [r3]
 2224              		.loc 1 1569 81
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 75


 2225 0138 BB68     		ldr	r3, [r7, #8]
 2226 013a 1B01     		lsls	r3, r3, #4
 2227 013c 1344     		add	r3, r3, r2
 2228 013e 03F5DC73 		add	r3, r3, #440
 2229 0142 1B68     		ldr	r3, [r3]
 2230              		.loc 1 1569 16
 2231 0144 DAB2     		uxtb	r2, r3
 2232              		.loc 1 1569 14
 2233 0146 3B68     		ldr	r3, [r7]
 2234 0148 1A70     		strb	r2, [r3]
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2235              		.loc 1 1570 49
 2236 014a FB68     		ldr	r3, [r7, #12]
 2237 014c 1A68     		ldr	r2, [r3]
 2238              		.loc 1 1570 81
 2239 014e BB68     		ldr	r3, [r7, #8]
 2240 0150 1B01     		lsls	r3, r3, #4
 2241 0152 1344     		add	r3, r3, r2
 2242 0154 03F5DC73 		add	r3, r3, #440
 2243 0158 1B68     		ldr	r3, [r3]
 2244              		.loc 1 1570 88
 2245 015a 1A0A     		lsrs	r2, r3, #8
 2246              		.loc 1 1570 10
 2247 015c 3B68     		ldr	r3, [r7]
 2248 015e 0133     		adds	r3, r3, #1
 2249              		.loc 1 1570 16
 2250 0160 D2B2     		uxtb	r2, r2
 2251              		.loc 1 1570 14
 2252 0162 1A70     		strb	r2, [r3]
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2253              		.loc 1 1571 49
 2254 0164 FB68     		ldr	r3, [r7, #12]
 2255 0166 1A68     		ldr	r2, [r3]
 2256              		.loc 1 1571 81
 2257 0168 BB68     		ldr	r3, [r7, #8]
 2258 016a 1B01     		lsls	r3, r3, #4
 2259 016c 1344     		add	r3, r3, r2
 2260 016e 03F5DC73 		add	r3, r3, #440
 2261 0172 1B68     		ldr	r3, [r3]
 2262              		.loc 1 1571 88
 2263 0174 1A0C     		lsrs	r2, r3, #16
 2264              		.loc 1 1571 10
 2265 0176 3B68     		ldr	r3, [r7]
 2266 0178 0233     		adds	r3, r3, #2
 2267              		.loc 1 1571 16
 2268 017a D2B2     		uxtb	r2, r2
 2269              		.loc 1 1571 14
 2270 017c 1A70     		strb	r2, [r3]
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2271              		.loc 1 1572 49
 2272 017e FB68     		ldr	r3, [r7, #12]
 2273 0180 1A68     		ldr	r2, [r3]
 2274              		.loc 1 1572 81
 2275 0182 BB68     		ldr	r3, [r7, #8]
 2276 0184 1B01     		lsls	r3, r3, #4
 2277 0186 1344     		add	r3, r3, r2
 2278 0188 03F5DC73 		add	r3, r3, #440
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 76


 2279 018c 1B68     		ldr	r3, [r3]
 2280              		.loc 1 1572 88
 2281 018e 1A0E     		lsrs	r2, r3, #24
 2282              		.loc 1 1572 10
 2283 0190 3B68     		ldr	r3, [r7]
 2284 0192 0333     		adds	r3, r3, #3
 2285              		.loc 1 1572 16
 2286 0194 D2B2     		uxtb	r2, r2
 2287              		.loc 1 1572 14
 2288 0196 1A70     		strb	r2, [r3]
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2289              		.loc 1 1573 49
 2290 0198 FB68     		ldr	r3, [r7, #12]
 2291 019a 1A68     		ldr	r2, [r3]
 2292              		.loc 1 1573 81
 2293 019c BB68     		ldr	r3, [r7, #8]
 2294 019e 1B01     		lsls	r3, r3, #4
 2295 01a0 1344     		add	r3, r3, r2
 2296 01a2 03F5DE73 		add	r3, r3, #444
 2297 01a6 1A68     		ldr	r2, [r3]
 2298              		.loc 1 1573 10
 2299 01a8 3B68     		ldr	r3, [r7]
 2300 01aa 0433     		adds	r3, r3, #4
 2301              		.loc 1 1573 16
 2302 01ac D2B2     		uxtb	r2, r2
 2303              		.loc 1 1573 14
 2304 01ae 1A70     		strb	r2, [r3]
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2305              		.loc 1 1574 49
 2306 01b0 FB68     		ldr	r3, [r7, #12]
 2307 01b2 1A68     		ldr	r2, [r3]
 2308              		.loc 1 1574 81
 2309 01b4 BB68     		ldr	r3, [r7, #8]
 2310 01b6 1B01     		lsls	r3, r3, #4
 2311 01b8 1344     		add	r3, r3, r2
 2312 01ba 03F5DE73 		add	r3, r3, #444
 2313 01be 1B68     		ldr	r3, [r3]
 2314              		.loc 1 1574 88
 2315 01c0 1A0A     		lsrs	r2, r3, #8
 2316              		.loc 1 1574 10
 2317 01c2 3B68     		ldr	r3, [r7]
 2318 01c4 0533     		adds	r3, r3, #5
 2319              		.loc 1 1574 16
 2320 01c6 D2B2     		uxtb	r2, r2
 2321              		.loc 1 1574 14
 2322 01c8 1A70     		strb	r2, [r3]
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2323              		.loc 1 1575 49
 2324 01ca FB68     		ldr	r3, [r7, #12]
 2325 01cc 1A68     		ldr	r2, [r3]
 2326              		.loc 1 1575 81
 2327 01ce BB68     		ldr	r3, [r7, #8]
 2328 01d0 1B01     		lsls	r3, r3, #4
 2329 01d2 1344     		add	r3, r3, r2
 2330 01d4 03F5DE73 		add	r3, r3, #444
 2331 01d8 1B68     		ldr	r3, [r3]
 2332              		.loc 1 1575 88
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 77


 2333 01da 1A0C     		lsrs	r2, r3, #16
 2334              		.loc 1 1575 10
 2335 01dc 3B68     		ldr	r3, [r7]
 2336 01de 0633     		adds	r3, r3, #6
 2337              		.loc 1 1575 16
 2338 01e0 D2B2     		uxtb	r2, r2
 2339              		.loc 1 1575 14
 2340 01e2 1A70     		strb	r2, [r3]
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2341              		.loc 1 1576 49
 2342 01e4 FB68     		ldr	r3, [r7, #12]
 2343 01e6 1A68     		ldr	r2, [r3]
 2344              		.loc 1 1576 81
 2345 01e8 BB68     		ldr	r3, [r7, #8]
 2346 01ea 1B01     		lsls	r3, r3, #4
 2347 01ec 1344     		add	r3, r3, r2
 2348 01ee 03F5DE73 		add	r3, r3, #444
 2349 01f2 1B68     		ldr	r3, [r3]
 2350              		.loc 1 1576 88
 2351 01f4 1A0E     		lsrs	r2, r3, #24
 2352              		.loc 1 1576 10
 2353 01f6 3B68     		ldr	r3, [r7]
 2354 01f8 0733     		adds	r3, r3, #7
 2355              		.loc 1 1576 16
 2356 01fa D2B2     		uxtb	r2, r2
 2357              		.loc 1 1576 14
 2358 01fc 1A70     		strb	r2, [r3]
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Release the FIFO */
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 2359              		.loc 1 1579 8
 2360 01fe BB68     		ldr	r3, [r7, #8]
 2361 0200 002B     		cmp	r3, #0
 2362 0202 08D1     		bne	.L108
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Release RX FIFO 0 */
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->RF0R, CAN_RF0R_RFOM0);
 2363              		.loc 1 1582 7
 2364 0204 FB68     		ldr	r3, [r7, #12]
 2365 0206 1B68     		ldr	r3, [r3]
 2366 0208 DA68     		ldr	r2, [r3, #12]
 2367 020a FB68     		ldr	r3, [r7, #12]
 2368 020c 1B68     		ldr	r3, [r3]
 2369 020e 42F02002 		orr	r2, r2, #32
 2370 0212 DA60     		str	r2, [r3, #12]
 2371 0214 07E0     		b	.L109
 2372              	.L108:
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Release RX FIFO 1 */
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->RF1R, CAN_RF1R_RFOM1);
 2373              		.loc 1 1587 7
 2374 0216 FB68     		ldr	r3, [r7, #12]
 2375 0218 1B68     		ldr	r3, [r3]
 2376 021a 1A69     		ldr	r2, [r3, #16]
 2377 021c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 78


 2378 021e 1B68     		ldr	r3, [r3]
 2379 0220 42F02002 		orr	r2, r2, #32
 2380 0224 1A61     		str	r2, [r3, #16]
 2381              	.L109:
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 2382              		.loc 1 1591 12
 2383 0226 0023     		movs	r3, #0
 2384 0228 06E0     		b	.L103
 2385              	.L100:
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2386              		.loc 1 1596 9
 2387 022a FB68     		ldr	r3, [r7, #12]
 2388 022c 5B6A     		ldr	r3, [r3, #36]
 2389              		.loc 1 1596 21
 2390 022e 43F48022 		orr	r2, r3, #262144
 2391 0232 FB68     		ldr	r3, [r7, #12]
 2392 0234 5A62     		str	r2, [r3, #36]
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 2393              		.loc 1 1598 12
 2394 0236 0123     		movs	r3, #1
 2395              	.L103:
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2396              		.loc 1 1600 1
 2397 0238 1846     		mov	r0, r3
 2398 023a 1C37     		adds	r7, r7, #28
 2399              	.LCFI89:
 2400              		.cfi_def_cfa_offset 4
 2401 023c BD46     		mov	sp, r7
 2402              	.LCFI90:
 2403              		.cfi_def_cfa_register 13
 2404              		@ sp needed
 2405 023e 5DF8047B 		ldr	r7, [sp], #4
 2406              	.LCFI91:
 2407              		.cfi_restore 7
 2408              		.cfi_def_cfa_offset 0
 2409 0242 7047     		bx	lr
 2410              		.cfi_endproc
 2411              	.LFE149:
 2413              		.section	.text.HAL_CAN_GetRxFifoFillLevel,"ax",%progbits
 2414              		.align	1
 2415              		.global	HAL_CAN_GetRxFifoFillLevel
 2416              		.syntax unified
 2417              		.thumb
 2418              		.thumb_func
 2420              	HAL_CAN_GetRxFifoFillLevel:
 2421              	.LFB150:
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 79


1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return Rx FIFO fill level.
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  RxFifo Rx FIFO.
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Number of messages available in Rx FIFO.
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetRxFifoFillLevel(const CAN_HandleTypeDef *hcan, uint32_t RxFifo)
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2422              		.loc 1 1611 1
 2423              		.cfi_startproc
 2424              		@ args = 0, pretend = 0, frame = 16
 2425              		@ frame_needed = 1, uses_anonymous_args = 0
 2426              		@ link register save eliminated.
 2427 0000 80B4     		push	{r7}
 2428              	.LCFI92:
 2429              		.cfi_def_cfa_offset 4
 2430              		.cfi_offset 7, -4
 2431 0002 85B0     		sub	sp, sp, #20
 2432              	.LCFI93:
 2433              		.cfi_def_cfa_offset 24
 2434 0004 00AF     		add	r7, sp, #0
 2435              	.LCFI94:
 2436              		.cfi_def_cfa_register 7
 2437 0006 7860     		str	r0, [r7, #4]
 2438 0008 3960     		str	r1, [r7]
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t filllevel = 0U;
 2439              		.loc 1 1612 12
 2440 000a 0023     		movs	r3, #0
 2441 000c FB60     		str	r3, [r7, #12]
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2442              		.loc 1 1613 24
 2443 000e 7B68     		ldr	r3, [r7, #4]
 2444 0010 93F82030 		ldrb	r3, [r3, #32]
 2445 0014 FB72     		strb	r3, [r7, #11]
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2446              		.loc 1 1618 6
 2447 0016 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2448 0018 012B     		cmp	r3, #1
 2449 001a 02D0     		beq	.L111
 2450              		.loc 1 1618 38 discriminator 1
 2451 001c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2452 001e 022B     		cmp	r3, #2
 2453 0020 0FD1     		bne	.L112
 2454              	.L111:
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0)
 2455              		.loc 1 1621 8
 2456 0022 3B68     		ldr	r3, [r7]
 2457 0024 002B     		cmp	r3, #0
 2458 0026 06D1     		bne	.L113
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 80


1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       filllevel = hcan->Instance->RF0R & CAN_RF0R_FMP0;
 2459              		.loc 1 1623 23
 2460 0028 7B68     		ldr	r3, [r7, #4]
 2461 002a 1B68     		ldr	r3, [r3]
 2462              		.loc 1 1623 33
 2463 002c DB68     		ldr	r3, [r3, #12]
 2464              		.loc 1 1623 17
 2465 002e 03F00303 		and	r3, r3, #3
 2466 0032 FB60     		str	r3, [r7, #12]
 2467 0034 05E0     		b	.L112
 2468              	.L113:
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else /* RxFifo == CAN_RX_FIFO1 */
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       filllevel = hcan->Instance->RF1R & CAN_RF1R_FMP1;
 2469              		.loc 1 1627 23
 2470 0036 7B68     		ldr	r3, [r7, #4]
 2471 0038 1B68     		ldr	r3, [r3]
 2472              		.loc 1 1627 33
 2473 003a 1B69     		ldr	r3, [r3, #16]
 2474              		.loc 1 1627 17
 2475 003c 03F00303 		and	r3, r3, #3
 2476 0040 FB60     		str	r3, [r7, #12]
 2477              	.L112:
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return Rx FIFO fill level */
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return filllevel;
 2478              		.loc 1 1632 10
 2479 0042 FB68     		ldr	r3, [r7, #12]
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2480              		.loc 1 1633 1
 2481 0044 1846     		mov	r0, r3
 2482 0046 1437     		adds	r7, r7, #20
 2483              	.LCFI95:
 2484              		.cfi_def_cfa_offset 4
 2485 0048 BD46     		mov	sp, r7
 2486              	.LCFI96:
 2487              		.cfi_def_cfa_register 13
 2488              		@ sp needed
 2489 004a 5DF8047B 		ldr	r7, [sp], #4
 2490              	.LCFI97:
 2491              		.cfi_restore 7
 2492              		.cfi_def_cfa_offset 0
 2493 004e 7047     		bx	lr
 2494              		.cfi_endproc
 2495              	.LFE150:
 2497              		.section	.text.HAL_CAN_ActivateNotification,"ax",%progbits
 2498              		.align	1
 2499              		.global	HAL_CAN_ActivateNotification
 2500              		.syntax unified
 2501              		.thumb
 2502              		.thumb_func
 2504              	HAL_CAN_ActivateNotification:
 2505              	.LFB151:
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 81


1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group4 Interrupts management
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief    Interrupts management
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                        ##### Interrupts management #####
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ActivateNotification      : Enable interrupts
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_DeactivateNotification    : Disable interrupts
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_IRQHandler                : Handles CAN interrupt request
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Enable interrupts.
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  ActiveITs indicates which interrupts will be enabled.
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ActivateNotification(CAN_HandleTypeDef *hcan, uint32_t ActiveITs)
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2506              		.loc 1 1664 1
 2507              		.cfi_startproc
 2508              		@ args = 0, pretend = 0, frame = 16
 2509              		@ frame_needed = 1, uses_anonymous_args = 0
 2510              		@ link register save eliminated.
 2511 0000 80B4     		push	{r7}
 2512              	.LCFI98:
 2513              		.cfi_def_cfa_offset 4
 2514              		.cfi_offset 7, -4
 2515 0002 85B0     		sub	sp, sp, #20
 2516              	.LCFI99:
 2517              		.cfi_def_cfa_offset 24
 2518 0004 00AF     		add	r7, sp, #0
 2519              	.LCFI100:
 2520              		.cfi_def_cfa_register 7
 2521 0006 7860     		str	r0, [r7, #4]
 2522 0008 3960     		str	r1, [r7]
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2523              		.loc 1 1665 24
 2524 000a 7B68     		ldr	r3, [r7, #4]
 2525 000c 93F82030 		ldrb	r3, [r3, #32]
 2526 0010 FB73     		strb	r3, [r7, #15]
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_IT(ActiveITs));
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 82


 2527              		.loc 1 1670 6
 2528 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2529 0014 012B     		cmp	r3, #1
 2530 0016 02D0     		beq	.L116
 2531              		.loc 1 1670 38 discriminator 1
 2532 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2533 001a 022B     		cmp	r3, #2
 2534 001c 09D1     		bne	.L117
 2535              	.L116:
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Enable the selected interrupts */
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, ActiveITs);
 2536              		.loc 1 1674 5
 2537 001e 7B68     		ldr	r3, [r7, #4]
 2538 0020 1B68     		ldr	r3, [r3]
 2539 0022 5969     		ldr	r1, [r3, #20]
 2540 0024 7B68     		ldr	r3, [r7, #4]
 2541 0026 1B68     		ldr	r3, [r3]
 2542 0028 3A68     		ldr	r2, [r7]
 2543 002a 0A43     		orrs	r2, r2, r1
 2544 002c 5A61     		str	r2, [r3, #20]
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 2545              		.loc 1 1677 12
 2546 002e 0023     		movs	r3, #0
 2547 0030 06E0     		b	.L118
 2548              	.L117:
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2549              		.loc 1 1682 9
 2550 0032 7B68     		ldr	r3, [r7, #4]
 2551 0034 5B6A     		ldr	r3, [r3, #36]
 2552              		.loc 1 1682 21
 2553 0036 43F48022 		orr	r2, r3, #262144
 2554 003a 7B68     		ldr	r3, [r7, #4]
 2555 003c 5A62     		str	r2, [r3, #36]
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 2556              		.loc 1 1684 12
 2557 003e 0123     		movs	r3, #1
 2558              	.L118:
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2559              		.loc 1 1686 1
 2560 0040 1846     		mov	r0, r3
 2561 0042 1437     		adds	r7, r7, #20
 2562              	.LCFI101:
 2563              		.cfi_def_cfa_offset 4
 2564 0044 BD46     		mov	sp, r7
 2565              	.LCFI102:
 2566              		.cfi_def_cfa_register 13
 2567              		@ sp needed
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 83


 2568 0046 5DF8047B 		ldr	r7, [sp], #4
 2569              	.LCFI103:
 2570              		.cfi_restore 7
 2571              		.cfi_def_cfa_offset 0
 2572 004a 7047     		bx	lr
 2573              		.cfi_endproc
 2574              	.LFE151:
 2576              		.section	.text.HAL_CAN_DeactivateNotification,"ax",%progbits
 2577              		.align	1
 2578              		.global	HAL_CAN_DeactivateNotification
 2579              		.syntax unified
 2580              		.thumb
 2581              		.thumb_func
 2583              	HAL_CAN_DeactivateNotification:
 2584              	.LFB152:
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Disable interrupts.
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  InactiveITs indicates which interrupts will be disabled.
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeactivateNotification(CAN_HandleTypeDef *hcan, uint32_t InactiveITs)
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2585              		.loc 1 1697 1
 2586              		.cfi_startproc
 2587              		@ args = 0, pretend = 0, frame = 16
 2588              		@ frame_needed = 1, uses_anonymous_args = 0
 2589              		@ link register save eliminated.
 2590 0000 80B4     		push	{r7}
 2591              	.LCFI104:
 2592              		.cfi_def_cfa_offset 4
 2593              		.cfi_offset 7, -4
 2594 0002 85B0     		sub	sp, sp, #20
 2595              	.LCFI105:
 2596              		.cfi_def_cfa_offset 24
 2597 0004 00AF     		add	r7, sp, #0
 2598              	.LCFI106:
 2599              		.cfi_def_cfa_register 7
 2600 0006 7860     		str	r0, [r7, #4]
 2601 0008 3960     		str	r1, [r7]
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2602              		.loc 1 1698 24
 2603 000a 7B68     		ldr	r3, [r7, #4]
 2604 000c 93F82030 		ldrb	r3, [r3, #32]
 2605 0010 FB73     		strb	r3, [r7, #15]
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_IT(InactiveITs));
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2606              		.loc 1 1703 6
 2607 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2608 0014 012B     		cmp	r3, #1
 2609 0016 02D0     		beq	.L120
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 84


 2610              		.loc 1 1703 38 discriminator 1
 2611 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2612 001a 022B     		cmp	r3, #2
 2613 001c 0AD1     		bne	.L121
 2614              	.L120:
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Disable the selected interrupts */
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, InactiveITs);
 2615              		.loc 1 1707 5
 2616 001e 7B68     		ldr	r3, [r7, #4]
 2617 0020 1B68     		ldr	r3, [r3]
 2618 0022 5969     		ldr	r1, [r3, #20]
 2619 0024 3B68     		ldr	r3, [r7]
 2620 0026 DA43     		mvns	r2, r3
 2621 0028 7B68     		ldr	r3, [r7, #4]
 2622 002a 1B68     		ldr	r3, [r3]
 2623 002c 0A40     		ands	r2, r2, r1
 2624 002e 5A61     		str	r2, [r3, #20]
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 2625              		.loc 1 1710 12
 2626 0030 0023     		movs	r3, #0
 2627 0032 06E0     		b	.L122
 2628              	.L121:
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2629              		.loc 1 1715 9
 2630 0034 7B68     		ldr	r3, [r7, #4]
 2631 0036 5B6A     		ldr	r3, [r3, #36]
 2632              		.loc 1 1715 21
 2633 0038 43F48022 		orr	r2, r3, #262144
 2634 003c 7B68     		ldr	r3, [r7, #4]
 2635 003e 5A62     		str	r2, [r3, #36]
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 2636              		.loc 1 1717 12
 2637 0040 0123     		movs	r3, #1
 2638              	.L122:
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2639              		.loc 1 1719 1
 2640 0042 1846     		mov	r0, r3
 2641 0044 1437     		adds	r7, r7, #20
 2642              	.LCFI107:
 2643              		.cfi_def_cfa_offset 4
 2644 0046 BD46     		mov	sp, r7
 2645              	.LCFI108:
 2646              		.cfi_def_cfa_register 13
 2647              		@ sp needed
 2648 0048 5DF8047B 		ldr	r7, [sp], #4
 2649              	.LCFI109:
 2650              		.cfi_restore 7
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 85


 2651              		.cfi_def_cfa_offset 0
 2652 004c 7047     		bx	lr
 2653              		.cfi_endproc
 2654              	.LFE152:
 2656              		.section	.text.HAL_CAN_IRQHandler,"ax",%progbits
 2657              		.align	1
 2658              		.global	HAL_CAN_IRQHandler
 2659              		.syntax unified
 2660              		.thumb
 2661              		.thumb_func
 2663              	HAL_CAN_IRQHandler:
 2664              	.LFB153:
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Handles CAN interrupt request
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** void HAL_CAN_IRQHandler(CAN_HandleTypeDef *hcan)
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2665              		.loc 1 1728 1
 2666              		.cfi_startproc
 2667              		@ args = 0, pretend = 0, frame = 40
 2668              		@ frame_needed = 1, uses_anonymous_args = 0
 2669 0000 80B5     		push	{r7, lr}
 2670              	.LCFI110:
 2671              		.cfi_def_cfa_offset 8
 2672              		.cfi_offset 7, -8
 2673              		.cfi_offset 14, -4
 2674 0002 8AB0     		sub	sp, sp, #40
 2675              	.LCFI111:
 2676              		.cfi_def_cfa_offset 48
 2677 0004 00AF     		add	r7, sp, #0
 2678              	.LCFI112:
 2679              		.cfi_def_cfa_register 7
 2680 0006 7860     		str	r0, [r7, #4]
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2681              		.loc 1 1729 12
 2682 0008 0023     		movs	r3, #0
 2683 000a 7B62     		str	r3, [r7, #36]
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2684              		.loc 1 1730 25
 2685 000c 7B68     		ldr	r3, [r7, #4]
 2686 000e 1B68     		ldr	r3, [r3]
 2687              		.loc 1 1730 12
 2688 0010 5B69     		ldr	r3, [r3, #20]
 2689 0012 3B62     		str	r3, [r7, #32]
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2690              		.loc 1 1731 23
 2691 0014 7B68     		ldr	r3, [r7, #4]
 2692 0016 1B68     		ldr	r3, [r3]
 2693              		.loc 1 1731 12
 2694 0018 5B68     		ldr	r3, [r3, #4]
 2695 001a FB61     		str	r3, [r7, #28]
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 2696              		.loc 1 1732 23
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 86


 2697 001c 7B68     		ldr	r3, [r7, #4]
 2698 001e 1B68     		ldr	r3, [r3]
 2699              		.loc 1 1732 12
 2700 0020 9B68     		ldr	r3, [r3, #8]
 2701 0022 BB61     		str	r3, [r7, #24]
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 2702              		.loc 1 1733 24
 2703 0024 7B68     		ldr	r3, [r7, #4]
 2704 0026 1B68     		ldr	r3, [r3]
 2705              		.loc 1 1733 12
 2706 0028 DB68     		ldr	r3, [r3, #12]
 2707 002a 7B61     		str	r3, [r7, #20]
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2708              		.loc 1 1734 24
 2709 002c 7B68     		ldr	r3, [r7, #4]
 2710 002e 1B68     		ldr	r3, [r3]
 2711              		.loc 1 1734 12
 2712 0030 1B69     		ldr	r3, [r3, #16]
 2713 0032 3B61     		str	r3, [r7, #16]
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2714              		.loc 1 1735 23
 2715 0034 7B68     		ldr	r3, [r7, #4]
 2716 0036 1B68     		ldr	r3, [r3]
 2717              		.loc 1 1735 12
 2718 0038 9B69     		ldr	r3, [r3, #24]
 2719 003a FB60     		str	r3, [r7, #12]
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Transmit Mailbox empty interrupt management *****************************/
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
 2720              		.loc 1 1738 19
 2721 003c 3B6A     		ldr	r3, [r7, #32]
 2722 003e 03F00103 		and	r3, r3, #1
 2723              		.loc 1 1738 6
 2724 0042 002B     		cmp	r3, #0
 2725 0044 7CD0     		beq	.L124
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Transmit Mailbox 0 management *****************************************/
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP0) != 0U)
 2726              		.loc 1 1741 19
 2727 0046 BB69     		ldr	r3, [r7, #24]
 2728 0048 03F00103 		and	r3, r3, #1
 2729              		.loc 1 1741 8
 2730 004c 002B     		cmp	r3, #0
 2731 004e 23D0     		beq	.L125
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK0,ALST0,TERR0 bits) */
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
 2732              		.loc 1 1744 7
 2733 0050 7B68     		ldr	r3, [r7, #4]
 2734 0052 1B68     		ldr	r3, [r3]
 2735 0054 0122     		movs	r2, #1
 2736 0056 9A60     		str	r2, [r3, #8]
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK0) != 0U)
 2737              		.loc 1 1746 21
 2738 0058 BB69     		ldr	r3, [r7, #24]
 2739 005a 03F00203 		and	r3, r3, #2
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 87


 2740              		.loc 1 1746 10
 2741 005e 002B     		cmp	r3, #0
 2742 0060 03D0     		beq	.L126
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Transmission Mailbox 0 complete callback */
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call registered callback*/
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback(hcan);
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         HAL_CAN_TxMailbox0CompleteCallback(hcan);
 2743              		.loc 1 1754 9
 2744 0062 7868     		ldr	r0, [r7, #4]
 2745 0064 FFF7FEFF 		bl	HAL_CAN_TxMailbox0CompleteCallback
 2746 0068 16E0     		b	.L125
 2747              	.L126:
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       else
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST0) != 0U)
 2748              		.loc 1 1759 23
 2749 006a BB69     		ldr	r3, [r7, #24]
 2750 006c 03F00403 		and	r3, r3, #4
 2751              		.loc 1 1759 12
 2752 0070 002B     		cmp	r3, #0
 2753 0072 04D0     		beq	.L127
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST0;
 2754              		.loc 1 1762 21
 2755 0074 7B6A     		ldr	r3, [r7, #36]
 2756 0076 43F40063 		orr	r3, r3, #2048
 2757 007a 7B62     		str	r3, [r7, #36]
 2758 007c 0CE0     		b	.L125
 2759              	.L127:
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR0) != 0U)
 2760              		.loc 1 1764 28
 2761 007e BB69     		ldr	r3, [r7, #24]
 2762 0080 03F00803 		and	r3, r3, #8
 2763              		.loc 1 1764 17
 2764 0084 002B     		cmp	r3, #0
 2765 0086 04D0     		beq	.L128
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR0;
 2766              		.loc 1 1767 21
 2767 0088 7B6A     		ldr	r3, [r7, #36]
 2768 008a 43F48053 		orr	r3, r3, #4096
 2769 008e 7B62     		str	r3, [r7, #36]
 2770 0090 02E0     		b	.L125
 2771              	.L128:
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Transmission Mailbox 0 abort callback */
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 88


1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call registered callback*/
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           hcan->TxMailbox0AbortCallback(hcan);
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_TxMailbox0AbortCallback(hcan);
 2772              		.loc 1 1777 11
 2773 0092 7868     		ldr	r0, [r7, #4]
 2774 0094 FFF7FEFF 		bl	HAL_CAN_TxMailbox0AbortCallback
 2775              	.L125:
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Transmit Mailbox 1 management *****************************************/
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP1) != 0U)
 2776              		.loc 1 1784 19
 2777 0098 BB69     		ldr	r3, [r7, #24]
 2778 009a 03F48073 		and	r3, r3, #256
 2779              		.loc 1 1784 8
 2780 009e 002B     		cmp	r3, #0
 2781 00a0 24D0     		beq	.L129
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK1,ALST1,TERR1 bits) */
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
 2782              		.loc 1 1787 7
 2783 00a2 7B68     		ldr	r3, [r7, #4]
 2784 00a4 1B68     		ldr	r3, [r3]
 2785 00a6 4FF48072 		mov	r2, #256
 2786 00aa 9A60     		str	r2, [r3, #8]
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK1) != 0U)
 2787              		.loc 1 1789 21
 2788 00ac BB69     		ldr	r3, [r7, #24]
 2789 00ae 03F40073 		and	r3, r3, #512
 2790              		.loc 1 1789 10
 2791 00b2 002B     		cmp	r3, #0
 2792 00b4 03D0     		beq	.L130
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Transmission Mailbox 1 complete callback */
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call registered callback*/
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback(hcan);
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         HAL_CAN_TxMailbox1CompleteCallback(hcan);
 2793              		.loc 1 1797 9
 2794 00b6 7868     		ldr	r0, [r7, #4]
 2795 00b8 FFF7FEFF 		bl	HAL_CAN_TxMailbox1CompleteCallback
 2796 00bc 16E0     		b	.L129
 2797              	.L130:
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       else
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST1) != 0U)
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 89


 2798              		.loc 1 1802 23
 2799 00be BB69     		ldr	r3, [r7, #24]
 2800 00c0 03F48063 		and	r3, r3, #1024
 2801              		.loc 1 1802 12
 2802 00c4 002B     		cmp	r3, #0
 2803 00c6 04D0     		beq	.L131
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST1;
 2804              		.loc 1 1805 21
 2805 00c8 7B6A     		ldr	r3, [r7, #36]
 2806 00ca 43F40053 		orr	r3, r3, #8192
 2807 00ce 7B62     		str	r3, [r7, #36]
 2808 00d0 0CE0     		b	.L129
 2809              	.L131:
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR1) != 0U)
 2810              		.loc 1 1807 28
 2811 00d2 BB69     		ldr	r3, [r7, #24]
 2812 00d4 03F40063 		and	r3, r3, #2048
 2813              		.loc 1 1807 17
 2814 00d8 002B     		cmp	r3, #0
 2815 00da 04D0     		beq	.L132
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR1;
 2816              		.loc 1 1810 21
 2817 00dc 7B6A     		ldr	r3, [r7, #36]
 2818 00de 43F48043 		orr	r3, r3, #16384
 2819 00e2 7B62     		str	r3, [r7, #36]
 2820 00e4 02E0     		b	.L129
 2821              	.L132:
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Transmission Mailbox 1 abort callback */
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call registered callback*/
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           hcan->TxMailbox1AbortCallback(hcan);
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_TxMailbox1AbortCallback(hcan);
 2822              		.loc 1 1820 11
 2823 00e6 7868     		ldr	r0, [r7, #4]
 2824 00e8 FFF7FEFF 		bl	HAL_CAN_TxMailbox1AbortCallback
 2825              	.L129:
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Transmit Mailbox 2 management *****************************************/
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP2) != 0U)
 2826              		.loc 1 1827 19
 2827 00ec BB69     		ldr	r3, [r7, #24]
 2828 00ee 03F48033 		and	r3, r3, #65536
 2829              		.loc 1 1827 8
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 90


 2830 00f2 002B     		cmp	r3, #0
 2831 00f4 24D0     		beq	.L124
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK2,ALST2,TERR2 bits) */
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
 2832              		.loc 1 1830 7
 2833 00f6 7B68     		ldr	r3, [r7, #4]
 2834 00f8 1B68     		ldr	r3, [r3]
 2835 00fa 4FF48032 		mov	r2, #65536
 2836 00fe 9A60     		str	r2, [r3, #8]
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK2) != 0U)
 2837              		.loc 1 1832 21
 2838 0100 BB69     		ldr	r3, [r7, #24]
 2839 0102 03F40033 		and	r3, r3, #131072
 2840              		.loc 1 1832 10
 2841 0106 002B     		cmp	r3, #0
 2842 0108 03D0     		beq	.L133
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Transmission Mailbox 2 complete callback */
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call registered callback*/
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback(hcan);
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         HAL_CAN_TxMailbox2CompleteCallback(hcan);
 2843              		.loc 1 1840 9
 2844 010a 7868     		ldr	r0, [r7, #4]
 2845 010c FFF7FEFF 		bl	HAL_CAN_TxMailbox2CompleteCallback
 2846 0110 16E0     		b	.L124
 2847              	.L133:
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       else
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST2) != 0U)
 2848              		.loc 1 1845 23
 2849 0112 BB69     		ldr	r3, [r7, #24]
 2850 0114 03F48023 		and	r3, r3, #262144
 2851              		.loc 1 1845 12
 2852 0118 002B     		cmp	r3, #0
 2853 011a 04D0     		beq	.L134
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST2;
 2854              		.loc 1 1848 21
 2855 011c 7B6A     		ldr	r3, [r7, #36]
 2856 011e 43F40043 		orr	r3, r3, #32768
 2857 0122 7B62     		str	r3, [r7, #36]
 2858 0124 0CE0     		b	.L124
 2859              	.L134:
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR2) != 0U)
 2860              		.loc 1 1850 28
 2861 0126 BB69     		ldr	r3, [r7, #24]
 2862 0128 03F40023 		and	r3, r3, #524288
 2863              		.loc 1 1850 17
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 91


 2864 012c 002B     		cmp	r3, #0
 2865 012e 04D0     		beq	.L135
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR2;
 2866              		.loc 1 1853 21
 2867 0130 7B6A     		ldr	r3, [r7, #36]
 2868 0132 43F48033 		orr	r3, r3, #65536
 2869 0136 7B62     		str	r3, [r7, #36]
 2870 0138 02E0     		b	.L124
 2871              	.L135:
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Transmission Mailbox 2 abort callback */
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call registered callback*/
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           hcan->TxMailbox2AbortCallback(hcan);
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_TxMailbox2AbortCallback(hcan);
 2872              		.loc 1 1863 11
 2873 013a 7868     		ldr	r0, [r7, #4]
 2874 013c FFF7FEFF 		bl	HAL_CAN_TxMailbox2AbortCallback
 2875              	.L124:
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 0 overrun interrupt management *****************************/
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_OVERRUN) != 0U)
 2876              		.loc 1 1871 19
 2877 0140 3B6A     		ldr	r3, [r7, #32]
 2878 0142 03F00803 		and	r3, r3, #8
 2879              		.loc 1 1871 6
 2880 0146 002B     		cmp	r3, #0
 2881 0148 0CD0     		beq	.L136
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FOVR0) != 0U)
 2882              		.loc 1 1873 20
 2883 014a 7B69     		ldr	r3, [r7, #20]
 2884 014c 03F01003 		and	r3, r3, #16
 2885              		.loc 1 1873 8
 2886 0150 002B     		cmp	r3, #0
 2887 0152 07D0     		beq	.L136
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 0 overrun error */
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV0;
 2888              		.loc 1 1876 17
 2889 0154 7B6A     		ldr	r3, [r7, #36]
 2890 0156 43F40073 		orr	r3, r3, #512
 2891 015a 7B62     		str	r3, [r7, #36]
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO0 Overrun Flag */
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 92


 2892              		.loc 1 1879 7
 2893 015c 7B68     		ldr	r3, [r7, #4]
 2894 015e 1B68     		ldr	r3, [r3]
 2895 0160 1022     		movs	r2, #16
 2896 0162 DA60     		str	r2, [r3, #12]
 2897              	.L136:
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 0 full interrupt management ********************************/
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_FULL) != 0U)
 2898              		.loc 1 1884 19
 2899 0164 3B6A     		ldr	r3, [r7, #32]
 2900 0166 03F00403 		and	r3, r3, #4
 2901              		.loc 1 1884 6
 2902 016a 002B     		cmp	r3, #0
 2903 016c 0BD0     		beq	.L137
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FULL0) != 0U)
 2904              		.loc 1 1886 20
 2905 016e 7B69     		ldr	r3, [r7, #20]
 2906 0170 03F00803 		and	r3, r3, #8
 2907              		.loc 1 1886 8
 2908 0174 002B     		cmp	r3, #0
 2909 0176 06D0     		beq	.L137
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO 0 full Flag */
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF0);
 2910              		.loc 1 1889 7
 2911 0178 7B68     		ldr	r3, [r7, #4]
 2912 017a 1B68     		ldr	r3, [r3]
 2913 017c 0822     		movs	r2, #8
 2914 017e DA60     		str	r2, [r3, #12]
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 0 full Callback */
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo0FullCallback(hcan);
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo0FullCallback(hcan);
 2915              		.loc 1 1897 7
 2916 0180 7868     		ldr	r0, [r7, #4]
 2917 0182 FFF7FEFF 		bl	HAL_CAN_RxFifo0FullCallback
 2918              	.L137:
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 0 message pending interrupt management *********************/
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_MSG_PENDING) != 0U)
 2919              		.loc 1 1903 19
 2920 0186 3B6A     		ldr	r3, [r7, #32]
 2921 0188 03F00203 		and	r3, r3, #2
 2922              		.loc 1 1903 6
 2923 018c 002B     		cmp	r3, #0
 2924 018e 09D0     		beq	.L138
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 93


1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check if message is still pending */
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) != 0U)
 2925              		.loc 1 1906 14
 2926 0190 7B68     		ldr	r3, [r7, #4]
 2927 0192 1B68     		ldr	r3, [r3]
 2928              		.loc 1 1906 24
 2929 0194 DB68     		ldr	r3, [r3, #12]
 2930              		.loc 1 1906 31
 2931 0196 03F00303 		and	r3, r3, #3
 2932              		.loc 1 1906 8
 2933 019a 002B     		cmp	r3, #0
 2934 019c 02D0     		beq	.L138
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 0 message pending Callback */
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo0MsgPendingCallback(hcan);
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo0MsgPendingCallback(hcan);
 2935              		.loc 1 1914 7
 2936 019e 7868     		ldr	r0, [r7, #4]
 2937 01a0 FFF7FEFF 		bl	HAL_CAN_RxFifo0MsgPendingCallback
 2938              	.L138:
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 1 overrun interrupt management *****************************/
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_OVERRUN) != 0U)
 2939              		.loc 1 1920 19
 2940 01a4 3B6A     		ldr	r3, [r7, #32]
 2941 01a6 03F04003 		and	r3, r3, #64
 2942              		.loc 1 1920 6
 2943 01aa 002B     		cmp	r3, #0
 2944 01ac 0CD0     		beq	.L139
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FOVR1) != 0U)
 2945              		.loc 1 1922 20
 2946 01ae 3B69     		ldr	r3, [r7, #16]
 2947 01b0 03F01003 		and	r3, r3, #16
 2948              		.loc 1 1922 8
 2949 01b4 002B     		cmp	r3, #0
 2950 01b6 07D0     		beq	.L139
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 1 overrun error */
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV1;
 2951              		.loc 1 1925 17
 2952 01b8 7B6A     		ldr	r3, [r7, #36]
 2953 01ba 43F48063 		orr	r3, r3, #1024
 2954 01be 7B62     		str	r3, [r7, #36]
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO1 Overrun Flag */
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
 2955              		.loc 1 1928 7
 2956 01c0 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 94


 2957 01c2 1B68     		ldr	r3, [r3]
 2958 01c4 1022     		movs	r2, #16
 2959 01c6 1A61     		str	r2, [r3, #16]
 2960              	.L139:
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 1 full interrupt management ********************************/
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_FULL) != 0U)
 2961              		.loc 1 1933 19
 2962 01c8 3B6A     		ldr	r3, [r7, #32]
 2963 01ca 03F02003 		and	r3, r3, #32
 2964              		.loc 1 1933 6
 2965 01ce 002B     		cmp	r3, #0
 2966 01d0 0BD0     		beq	.L140
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FULL1) != 0U)
 2967              		.loc 1 1935 20
 2968 01d2 3B69     		ldr	r3, [r7, #16]
 2969 01d4 03F00803 		and	r3, r3, #8
 2970              		.loc 1 1935 8
 2971 01d8 002B     		cmp	r3, #0
 2972 01da 06D0     		beq	.L140
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO 1 full Flag */
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF1);
 2973              		.loc 1 1938 7
 2974 01dc 7B68     		ldr	r3, [r7, #4]
 2975 01de 1B68     		ldr	r3, [r3]
 2976 01e0 0822     		movs	r2, #8
 2977 01e2 1A61     		str	r2, [r3, #16]
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 1 full Callback */
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo1FullCallback(hcan);
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo1FullCallback(hcan);
 2978              		.loc 1 1946 7
 2979 01e4 7868     		ldr	r0, [r7, #4]
 2980 01e6 FFF7FEFF 		bl	HAL_CAN_RxFifo1FullCallback
 2981              	.L140:
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 1 message pending interrupt management *********************/
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_MSG_PENDING) != 0U)
 2982              		.loc 1 1952 19
 2983 01ea 3B6A     		ldr	r3, [r7, #32]
 2984 01ec 03F01003 		and	r3, r3, #16
 2985              		.loc 1 1952 6
 2986 01f0 002B     		cmp	r3, #0
 2987 01f2 09D0     		beq	.L141
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check if message is still pending */
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 95


1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) != 0U)
 2988              		.loc 1 1955 14
 2989 01f4 7B68     		ldr	r3, [r7, #4]
 2990 01f6 1B68     		ldr	r3, [r3]
 2991              		.loc 1 1955 24
 2992 01f8 1B69     		ldr	r3, [r3, #16]
 2993              		.loc 1 1955 31
 2994 01fa 03F00303 		and	r3, r3, #3
 2995              		.loc 1 1955 8
 2996 01fe 002B     		cmp	r3, #0
 2997 0200 02D0     		beq	.L141
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 1 message pending Callback */
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo1MsgPendingCallback(hcan);
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo1MsgPendingCallback(hcan);
 2998              		.loc 1 1963 7
 2999 0202 7868     		ldr	r0, [r7, #4]
 3000 0204 FFF7FEFF 		bl	HAL_CAN_RxFifo1MsgPendingCallback
 3001              	.L141:
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Sleep interrupt management *********************************************/
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_SLEEP_ACK) != 0U)
 3002              		.loc 1 1969 19
 3003 0208 3B6A     		ldr	r3, [r7, #32]
 3004 020a 03F40033 		and	r3, r3, #131072
 3005              		.loc 1 1969 6
 3006 020e 002B     		cmp	r3, #0
 3007 0210 0BD0     		beq	.L142
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((msrflags & CAN_MSR_SLAKI) != 0U)
 3008              		.loc 1 1971 19
 3009 0212 FB69     		ldr	r3, [r7, #28]
 3010 0214 03F01003 		and	r3, r3, #16
 3011              		.loc 1 1971 8
 3012 0218 002B     		cmp	r3, #0
 3013 021a 06D0     		beq	.L142
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear Sleep interrupt Flag */
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_SLAKI);
 3014              		.loc 1 1974 7
 3015 021c 7B68     		ldr	r3, [r7, #4]
 3016 021e 1B68     		ldr	r3, [r3]
 3017 0220 1022     		movs	r2, #16
 3018 0222 5A60     		str	r2, [r3, #4]
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Sleep Callback */
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->SleepCallback(hcan);
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 96


1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_SleepCallback(hcan);
 3019              		.loc 1 1982 7
 3020 0224 7868     		ldr	r0, [r7, #4]
 3021 0226 FFF7FEFF 		bl	HAL_CAN_SleepCallback
 3022              	.L142:
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* WakeUp interrupt management *********************************************/
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_WAKEUP) != 0U)
 3023              		.loc 1 1988 19
 3024 022a 3B6A     		ldr	r3, [r7, #32]
 3025 022c 03F48033 		and	r3, r3, #65536
 3026              		.loc 1 1988 6
 3027 0230 002B     		cmp	r3, #0
 3028 0232 0BD0     		beq	.L143
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((msrflags & CAN_MSR_WKUI) != 0U)
 3029              		.loc 1 1990 19
 3030 0234 FB69     		ldr	r3, [r7, #28]
 3031 0236 03F00803 		and	r3, r3, #8
 3032              		.loc 1 1990 8
 3033 023a 002B     		cmp	r3, #0
 3034 023c 06D0     		beq	.L143
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear WakeUp Flag */
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_WKU);
 3035              		.loc 1 1993 7
 3036 023e 7B68     		ldr	r3, [r7, #4]
 3037 0240 1B68     		ldr	r3, [r3]
 3038 0242 0822     		movs	r2, #8
 3039 0244 5A60     		str	r2, [r3, #4]
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* WakeUp Callback */
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->WakeUpFromRxMsgCallback(hcan);
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_WakeUpFromRxMsgCallback(hcan);
 3040              		.loc 1 2001 7
 3041 0246 7868     		ldr	r0, [r7, #4]
 3042 0248 FFF7FEFF 		bl	HAL_CAN_WakeUpFromRxMsgCallback
 3043              	.L143:
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Error interrupts management *********************************************/
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_ERROR) != 0U)
 3044              		.loc 1 2007 19
 3045 024c 3B6A     		ldr	r3, [r7, #32]
 3046 024e 03F40043 		and	r3, r3, #32768
 3047              		.loc 1 2007 6
 3048 0252 002B     		cmp	r3, #0
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 97


 3049 0254 7BD0     		beq	.L144
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((msrflags & CAN_MSR_ERRI) != 0U)
 3050              		.loc 1 2009 19
 3051 0256 FB69     		ldr	r3, [r7, #28]
 3052 0258 03F00403 		and	r3, r3, #4
 3053              		.loc 1 2009 8
 3054 025c 002B     		cmp	r3, #0
 3055 025e 72D0     		beq	.L145
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check Error Warning Flag */
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_WARNING) != 0U) &&
 3056              		.loc 1 2012 24
 3057 0260 3B6A     		ldr	r3, [r7, #32]
 3058 0262 03F48073 		and	r3, r3, #256
 3059              		.loc 1 2012 10
 3060 0266 002B     		cmp	r3, #0
 3061 0268 08D0     		beq	.L146
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 3062              		.loc 1 2013 22
 3063 026a FB68     		ldr	r3, [r7, #12]
 3064 026c 03F00103 		and	r3, r3, #1
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 3065              		.loc 1 2012 55 discriminator 1
 3066 0270 002B     		cmp	r3, #0
 3067 0272 03D0     		beq	.L146
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Set CAN error code to Error Warning */
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EWG;
 3068              		.loc 1 2016 19
 3069 0274 7B6A     		ldr	r3, [r7, #36]
 3070 0276 43F00103 		orr	r3, r3, #1
 3071 027a 7B62     		str	r3, [r7, #36]
 3072              	.L146:
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* No need for clear of Error Warning Flag as read-only */
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check Error Passive Flag */
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_PASSIVE) != 0U) &&
 3073              		.loc 1 2022 24
 3074 027c 3B6A     		ldr	r3, [r7, #32]
 3075 027e 03F40073 		and	r3, r3, #512
 3076              		.loc 1 2022 10
 3077 0282 002B     		cmp	r3, #0
 3078 0284 08D0     		beq	.L147
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 3079              		.loc 1 2023 22
 3080 0286 FB68     		ldr	r3, [r7, #12]
 3081 0288 03F00203 		and	r3, r3, #2
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 3082              		.loc 1 2022 55 discriminator 1
 3083 028c 002B     		cmp	r3, #0
 3084 028e 03D0     		beq	.L147
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Set CAN error code to Error Passive */
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EPV;
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 98


 3085              		.loc 1 2026 19
 3086 0290 7B6A     		ldr	r3, [r7, #36]
 3087 0292 43F00203 		orr	r3, r3, #2
 3088 0296 7B62     		str	r3, [r7, #36]
 3089              	.L147:
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* No need for clear of Error Passive Flag as read-only */
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check Bus-off Flag */
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_BUSOFF) != 0U) &&
 3090              		.loc 1 2032 24
 3091 0298 3B6A     		ldr	r3, [r7, #32]
 3092 029a 03F48063 		and	r3, r3, #1024
 3093              		.loc 1 2032 10
 3094 029e 002B     		cmp	r3, #0
 3095 02a0 08D0     		beq	.L148
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 3096              		.loc 1 2033 22
 3097 02a2 FB68     		ldr	r3, [r7, #12]
 3098 02a4 03F00403 		and	r3, r3, #4
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 3099              		.loc 1 2032 48 discriminator 1
 3100 02a8 002B     		cmp	r3, #0
 3101 02aa 03D0     		beq	.L148
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Set CAN error code to Bus-Off */
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_BOF;
 3102              		.loc 1 2036 19
 3103 02ac 7B6A     		ldr	r3, [r7, #36]
 3104 02ae 43F00403 		orr	r3, r3, #4
 3105 02b2 7B62     		str	r3, [r7, #36]
 3106              	.L148:
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* No need for clear of Error Bus-Off as read-only */
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check Last Error Code Flag */
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_LAST_ERROR_CODE) != 0U) &&
 3107              		.loc 1 2042 24
 3108 02b4 3B6A     		ldr	r3, [r7, #32]
 3109 02b6 03F40063 		and	r3, r3, #2048
 3110              		.loc 1 2042 10
 3111 02ba 002B     		cmp	r3, #0
 3112 02bc 43D0     		beq	.L145
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 3113              		.loc 1 2043 22
 3114 02be FB68     		ldr	r3, [r7, #12]
 3115 02c0 03F07003 		and	r3, r3, #112
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 3116              		.loc 1 2042 57 discriminator 1
 3117 02c4 002B     		cmp	r3, #0
 3118 02c6 3ED0     		beq	.L145
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         switch (esrflags & CAN_ESR_LEC)
 3119              		.loc 1 2045 26
 3120 02c8 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 99


 3121 02ca 03F07003 		and	r3, r3, #112
 3122              		.loc 1 2045 9
 3123 02ce 602B     		cmp	r3, #96
 3124 02d0 2BD0     		beq	.L149
 3125 02d2 602B     		cmp	r3, #96
 3126 02d4 2ED8     		bhi	.L158
 3127 02d6 502B     		cmp	r3, #80
 3128 02d8 22D0     		beq	.L151
 3129 02da 502B     		cmp	r3, #80
 3130 02dc 2AD8     		bhi	.L158
 3131 02de 402B     		cmp	r3, #64
 3132 02e0 19D0     		beq	.L152
 3133 02e2 402B     		cmp	r3, #64
 3134 02e4 26D8     		bhi	.L158
 3135 02e6 302B     		cmp	r3, #48
 3136 02e8 10D0     		beq	.L153
 3137 02ea 302B     		cmp	r3, #48
 3138 02ec 22D8     		bhi	.L158
 3139 02ee 102B     		cmp	r3, #16
 3140 02f0 02D0     		beq	.L154
 3141 02f2 202B     		cmp	r3, #32
 3142 02f4 05D0     		beq	.L155
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_0):
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Stuff error */
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_STF;
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1):
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Form error */
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_FOR;
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Acknowledgement error */
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_ACK;
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2):
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Bit recessive error */
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BR;
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Bit Dominant error */
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BD;
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to CRC error */
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_CRC;
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           default:
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 3143              		.loc 1 2072 13
 3144 02f6 1DE0     		b	.L158
 3145              	.L154:
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 3146              		.loc 1 2049 23
 3147 02f8 7B6A     		ldr	r3, [r7, #36]
 3148 02fa 43F00803 		orr	r3, r3, #8
 3149 02fe 7B62     		str	r3, [r7, #36]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 100


2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1):
 3150              		.loc 1 2050 13
 3151 0300 19E0     		b	.L156
 3152              	.L155:
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 3153              		.loc 1 2053 23
 3154 0302 7B6A     		ldr	r3, [r7, #36]
 3155 0304 43F01003 		orr	r3, r3, #16
 3156 0308 7B62     		str	r3, [r7, #36]
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
 3157              		.loc 1 2054 13
 3158 030a 14E0     		b	.L156
 3159              	.L153:
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 3160              		.loc 1 2057 23
 3161 030c 7B6A     		ldr	r3, [r7, #36]
 3162 030e 43F02003 		orr	r3, r3, #32
 3163 0312 7B62     		str	r3, [r7, #36]
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2):
 3164              		.loc 1 2058 13
 3165 0314 0FE0     		b	.L156
 3166              	.L152:
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 3167              		.loc 1 2061 23
 3168 0316 7B6A     		ldr	r3, [r7, #36]
 3169 0318 43F04003 		orr	r3, r3, #64
 3170 031c 7B62     		str	r3, [r7, #36]
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
 3171              		.loc 1 2062 13
 3172 031e 0AE0     		b	.L156
 3173              	.L151:
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 3174              		.loc 1 2065 23
 3175 0320 7B6A     		ldr	r3, [r7, #36]
 3176 0322 43F08003 		orr	r3, r3, #128
 3177 0326 7B62     		str	r3, [r7, #36]
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
 3178              		.loc 1 2066 13
 3179 0328 05E0     		b	.L156
 3180              	.L149:
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 3181              		.loc 1 2069 23
 3182 032a 7B6A     		ldr	r3, [r7, #36]
 3183 032c 43F48073 		orr	r3, r3, #256
 3184 0330 7B62     		str	r3, [r7, #36]
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           default:
 3185              		.loc 1 2070 13
 3186 0332 00E0     		b	.L156
 3187              	.L158:
 3188              		.loc 1 2072 13
 3189 0334 00BF     		nop
 3190              	.L156:
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Clear Last error code Flag */
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
 3191              		.loc 1 2076 9
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 101


 3192 0336 7B68     		ldr	r3, [r7, #4]
 3193 0338 1B68     		ldr	r3, [r3]
 3194 033a 9A69     		ldr	r2, [r3, #24]
 3195 033c 7B68     		ldr	r3, [r7, #4]
 3196 033e 1B68     		ldr	r3, [r3]
 3197 0340 22F07002 		bic	r2, r2, #112
 3198 0344 9A61     		str	r2, [r3, #24]
 3199              	.L145:
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Clear ERRI Flag */
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_ERRI);
 3200              		.loc 1 2081 5
 3201 0346 7B68     		ldr	r3, [r7, #4]
 3202 0348 1B68     		ldr	r3, [r3]
 3203 034a 0422     		movs	r2, #4
 3204 034c 5A60     		str	r2, [r3, #4]
 3205              	.L144:
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Call the Error call Back in case of Errors */
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (errorcode != HAL_CAN_ERROR_NONE)
 3206              		.loc 1 2085 6
 3207 034e 7B6A     		ldr	r3, [r7, #36]
 3208 0350 002B     		cmp	r3, #0
 3209 0352 08D0     		beq	.L159
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code in handle */
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= errorcode;
 3210              		.loc 1 2088 9
 3211 0354 7B68     		ldr	r3, [r7, #4]
 3212 0356 5A6A     		ldr	r2, [r3, #36]
 3213              		.loc 1 2088 21
 3214 0358 7B6A     		ldr	r3, [r7, #36]
 3215 035a 1A43     		orrs	r2, r2, r3
 3216 035c 7B68     		ldr	r3, [r7, #4]
 3217 035e 5A62     		str	r2, [r3, #36]
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Call Error callback function */
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Call registered callback*/
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCallback(hcan);
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Call weak (surcharged) callback */
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     HAL_CAN_ErrorCallback(hcan);
 3218              		.loc 1 2096 5
 3219 0360 7868     		ldr	r0, [r7, #4]
 3220 0362 FFF7FEFF 		bl	HAL_CAN_ErrorCallback
 3221              	.L159:
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3222              		.loc 1 2099 1
 3223 0366 00BF     		nop
 3224 0368 2837     		adds	r7, r7, #40
 3225              	.LCFI113:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 102


 3226              		.cfi_def_cfa_offset 8
 3227 036a BD46     		mov	sp, r7
 3228              	.LCFI114:
 3229              		.cfi_def_cfa_register 13
 3230              		@ sp needed
 3231 036c 80BD     		pop	{r7, pc}
 3232              		.cfi_endproc
 3233              	.LFE153:
 3235              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
 3236              		.align	1
 3237              		.weak	HAL_CAN_TxMailbox0CompleteCallback
 3238              		.syntax unified
 3239              		.thumb
 3240              		.thumb_func
 3242              	HAL_CAN_TxMailbox0CompleteCallback:
 3243              	.LFB154:
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group5 Callback functions
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief   CAN Callback functions
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                           ##### Callback functions #####
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     This subsection provides the following callback functions:
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0CompleteCallback
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1CompleteCallback
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2CompleteCallback
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0AbortCallback
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1AbortCallback
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2AbortCallback
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo0MsgPendingCallback
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo0FullCallback
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo1MsgPendingCallback
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo1FullCallback
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_SleepCallback
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_WakeUpFromRxMsgCallback
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ErrorCallback
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 0 complete callback.
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan)
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3244              		.loc 1 2139 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 103


 3245              		.cfi_startproc
 3246              		@ args = 0, pretend = 0, frame = 8
 3247              		@ frame_needed = 1, uses_anonymous_args = 0
 3248              		@ link register save eliminated.
 3249 0000 80B4     		push	{r7}
 3250              	.LCFI115:
 3251              		.cfi_def_cfa_offset 4
 3252              		.cfi_offset 7, -4
 3253 0002 83B0     		sub	sp, sp, #12
 3254              	.LCFI116:
 3255              		.cfi_def_cfa_offset 16
 3256 0004 00AF     		add	r7, sp, #0
 3257              	.LCFI117:
 3258              		.cfi_def_cfa_register 7
 3259 0006 7860     		str	r0, [r7, #4]
2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox0CompleteCallback could be implemented in the
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3260              		.loc 1 2147 1
 3261 0008 00BF     		nop
 3262 000a 0C37     		adds	r7, r7, #12
 3263              	.LCFI118:
 3264              		.cfi_def_cfa_offset 4
 3265 000c BD46     		mov	sp, r7
 3266              	.LCFI119:
 3267              		.cfi_def_cfa_register 13
 3268              		@ sp needed
 3269 000e 5DF8047B 		ldr	r7, [sp], #4
 3270              	.LCFI120:
 3271              		.cfi_restore 7
 3272              		.cfi_def_cfa_offset 0
 3273 0012 7047     		bx	lr
 3274              		.cfi_endproc
 3275              	.LFE154:
 3277              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
 3278              		.align	1
 3279              		.weak	HAL_CAN_TxMailbox1CompleteCallback
 3280              		.syntax unified
 3281              		.thumb
 3282              		.thumb_func
 3284              	HAL_CAN_TxMailbox1CompleteCallback:
 3285              	.LFB155:
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 1 complete callback.
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan)
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3286              		.loc 1 2156 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 104


 3287              		.cfi_startproc
 3288              		@ args = 0, pretend = 0, frame = 8
 3289              		@ frame_needed = 1, uses_anonymous_args = 0
 3290              		@ link register save eliminated.
 3291 0000 80B4     		push	{r7}
 3292              	.LCFI121:
 3293              		.cfi_def_cfa_offset 4
 3294              		.cfi_offset 7, -4
 3295 0002 83B0     		sub	sp, sp, #12
 3296              	.LCFI122:
 3297              		.cfi_def_cfa_offset 16
 3298 0004 00AF     		add	r7, sp, #0
 3299              	.LCFI123:
 3300              		.cfi_def_cfa_register 7
 3301 0006 7860     		str	r0, [r7, #4]
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox1CompleteCallback could be implemented in the
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3302              		.loc 1 2164 1
 3303 0008 00BF     		nop
 3304 000a 0C37     		adds	r7, r7, #12
 3305              	.LCFI124:
 3306              		.cfi_def_cfa_offset 4
 3307 000c BD46     		mov	sp, r7
 3308              	.LCFI125:
 3309              		.cfi_def_cfa_register 13
 3310              		@ sp needed
 3311 000e 5DF8047B 		ldr	r7, [sp], #4
 3312              	.LCFI126:
 3313              		.cfi_restore 7
 3314              		.cfi_def_cfa_offset 0
 3315 0012 7047     		bx	lr
 3316              		.cfi_endproc
 3317              	.LFE155:
 3319              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
 3320              		.align	1
 3321              		.weak	HAL_CAN_TxMailbox2CompleteCallback
 3322              		.syntax unified
 3323              		.thumb
 3324              		.thumb_func
 3326              	HAL_CAN_TxMailbox2CompleteCallback:
 3327              	.LFB156:
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 2 complete callback.
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan)
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3328              		.loc 1 2173 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 105


 3329              		.cfi_startproc
 3330              		@ args = 0, pretend = 0, frame = 8
 3331              		@ frame_needed = 1, uses_anonymous_args = 0
 3332              		@ link register save eliminated.
 3333 0000 80B4     		push	{r7}
 3334              	.LCFI127:
 3335              		.cfi_def_cfa_offset 4
 3336              		.cfi_offset 7, -4
 3337 0002 83B0     		sub	sp, sp, #12
 3338              	.LCFI128:
 3339              		.cfi_def_cfa_offset 16
 3340 0004 00AF     		add	r7, sp, #0
 3341              	.LCFI129:
 3342              		.cfi_def_cfa_register 7
 3343 0006 7860     		str	r0, [r7, #4]
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox2CompleteCallback could be implemented in the
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3344              		.loc 1 2181 1
 3345 0008 00BF     		nop
 3346 000a 0C37     		adds	r7, r7, #12
 3347              	.LCFI130:
 3348              		.cfi_def_cfa_offset 4
 3349 000c BD46     		mov	sp, r7
 3350              	.LCFI131:
 3351              		.cfi_def_cfa_register 13
 3352              		@ sp needed
 3353 000e 5DF8047B 		ldr	r7, [sp], #4
 3354              	.LCFI132:
 3355              		.cfi_restore 7
 3356              		.cfi_def_cfa_offset 0
 3357 0012 7047     		bx	lr
 3358              		.cfi_endproc
 3359              	.LFE156:
 3361              		.section	.text.HAL_CAN_TxMailbox0AbortCallback,"ax",%progbits
 3362              		.align	1
 3363              		.weak	HAL_CAN_TxMailbox0AbortCallback
 3364              		.syntax unified
 3365              		.thumb
 3366              		.thumb_func
 3368              	HAL_CAN_TxMailbox0AbortCallback:
 3369              	.LFB157:
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 0 Cancellation callback.
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0AbortCallback(CAN_HandleTypeDef *hcan)
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3370              		.loc 1 2190 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 106


 3371              		.cfi_startproc
 3372              		@ args = 0, pretend = 0, frame = 8
 3373              		@ frame_needed = 1, uses_anonymous_args = 0
 3374              		@ link register save eliminated.
 3375 0000 80B4     		push	{r7}
 3376              	.LCFI133:
 3377              		.cfi_def_cfa_offset 4
 3378              		.cfi_offset 7, -4
 3379 0002 83B0     		sub	sp, sp, #12
 3380              	.LCFI134:
 3381              		.cfi_def_cfa_offset 16
 3382 0004 00AF     		add	r7, sp, #0
 3383              	.LCFI135:
 3384              		.cfi_def_cfa_register 7
 3385 0006 7860     		str	r0, [r7, #4]
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox0AbortCallback could be implemented in the
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3386              		.loc 1 2198 1
 3387 0008 00BF     		nop
 3388 000a 0C37     		adds	r7, r7, #12
 3389              	.LCFI136:
 3390              		.cfi_def_cfa_offset 4
 3391 000c BD46     		mov	sp, r7
 3392              	.LCFI137:
 3393              		.cfi_def_cfa_register 13
 3394              		@ sp needed
 3395 000e 5DF8047B 		ldr	r7, [sp], #4
 3396              	.LCFI138:
 3397              		.cfi_restore 7
 3398              		.cfi_def_cfa_offset 0
 3399 0012 7047     		bx	lr
 3400              		.cfi_endproc
 3401              	.LFE157:
 3403              		.section	.text.HAL_CAN_TxMailbox1AbortCallback,"ax",%progbits
 3404              		.align	1
 3405              		.weak	HAL_CAN_TxMailbox1AbortCallback
 3406              		.syntax unified
 3407              		.thumb
 3408              		.thumb_func
 3410              	HAL_CAN_TxMailbox1AbortCallback:
 3411              	.LFB158:
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 1 Cancellation callback.
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1AbortCallback(CAN_HandleTypeDef *hcan)
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3412              		.loc 1 2207 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 107


 3413              		.cfi_startproc
 3414              		@ args = 0, pretend = 0, frame = 8
 3415              		@ frame_needed = 1, uses_anonymous_args = 0
 3416              		@ link register save eliminated.
 3417 0000 80B4     		push	{r7}
 3418              	.LCFI139:
 3419              		.cfi_def_cfa_offset 4
 3420              		.cfi_offset 7, -4
 3421 0002 83B0     		sub	sp, sp, #12
 3422              	.LCFI140:
 3423              		.cfi_def_cfa_offset 16
 3424 0004 00AF     		add	r7, sp, #0
 3425              	.LCFI141:
 3426              		.cfi_def_cfa_register 7
 3427 0006 7860     		str	r0, [r7, #4]
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox1AbortCallback could be implemented in the
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3428              		.loc 1 2215 1
 3429 0008 00BF     		nop
 3430 000a 0C37     		adds	r7, r7, #12
 3431              	.LCFI142:
 3432              		.cfi_def_cfa_offset 4
 3433 000c BD46     		mov	sp, r7
 3434              	.LCFI143:
 3435              		.cfi_def_cfa_register 13
 3436              		@ sp needed
 3437 000e 5DF8047B 		ldr	r7, [sp], #4
 3438              	.LCFI144:
 3439              		.cfi_restore 7
 3440              		.cfi_def_cfa_offset 0
 3441 0012 7047     		bx	lr
 3442              		.cfi_endproc
 3443              	.LFE158:
 3445              		.section	.text.HAL_CAN_TxMailbox2AbortCallback,"ax",%progbits
 3446              		.align	1
 3447              		.weak	HAL_CAN_TxMailbox2AbortCallback
 3448              		.syntax unified
 3449              		.thumb
 3450              		.thumb_func
 3452              	HAL_CAN_TxMailbox2AbortCallback:
 3453              	.LFB159:
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 2 Cancellation callback.
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2AbortCallback(CAN_HandleTypeDef *hcan)
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3454              		.loc 1 2224 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 108


 3455              		.cfi_startproc
 3456              		@ args = 0, pretend = 0, frame = 8
 3457              		@ frame_needed = 1, uses_anonymous_args = 0
 3458              		@ link register save eliminated.
 3459 0000 80B4     		push	{r7}
 3460              	.LCFI145:
 3461              		.cfi_def_cfa_offset 4
 3462              		.cfi_offset 7, -4
 3463 0002 83B0     		sub	sp, sp, #12
 3464              	.LCFI146:
 3465              		.cfi_def_cfa_offset 16
 3466 0004 00AF     		add	r7, sp, #0
 3467              	.LCFI147:
 3468              		.cfi_def_cfa_register 7
 3469 0006 7860     		str	r0, [r7, #4]
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox2AbortCallback could be implemented in the
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3470              		.loc 1 2232 1
 3471 0008 00BF     		nop
 3472 000a 0C37     		adds	r7, r7, #12
 3473              	.LCFI148:
 3474              		.cfi_def_cfa_offset 4
 3475 000c BD46     		mov	sp, r7
 3476              	.LCFI149:
 3477              		.cfi_def_cfa_register 13
 3478              		@ sp needed
 3479 000e 5DF8047B 		ldr	r7, [sp], #4
 3480              	.LCFI150:
 3481              		.cfi_restore 7
 3482              		.cfi_def_cfa_offset 0
 3483 0012 7047     		bx	lr
 3484              		.cfi_endproc
 3485              	.LFE159:
 3487              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 3488              		.align	1
 3489              		.weak	HAL_CAN_RxFifo0MsgPendingCallback
 3490              		.syntax unified
 3491              		.thumb
 3492              		.thumb_func
 3494              	HAL_CAN_RxFifo0MsgPendingCallback:
 3495              	.LFB160:
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 0 message pending callback.
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3496              		.loc 1 2241 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 109


 3497              		.cfi_startproc
 3498              		@ args = 0, pretend = 0, frame = 8
 3499              		@ frame_needed = 1, uses_anonymous_args = 0
 3500              		@ link register save eliminated.
 3501 0000 80B4     		push	{r7}
 3502              	.LCFI151:
 3503              		.cfi_def_cfa_offset 4
 3504              		.cfi_offset 7, -4
 3505 0002 83B0     		sub	sp, sp, #12
 3506              	.LCFI152:
 3507              		.cfi_def_cfa_offset 16
 3508 0004 00AF     		add	r7, sp, #0
 3509              	.LCFI153:
 3510              		.cfi_def_cfa_register 7
 3511 0006 7860     		str	r0, [r7, #4]
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo0MsgPendingCallback could be implemented in the
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3512              		.loc 1 2249 1
 3513 0008 00BF     		nop
 3514 000a 0C37     		adds	r7, r7, #12
 3515              	.LCFI154:
 3516              		.cfi_def_cfa_offset 4
 3517 000c BD46     		mov	sp, r7
 3518              	.LCFI155:
 3519              		.cfi_def_cfa_register 13
 3520              		@ sp needed
 3521 000e 5DF8047B 		ldr	r7, [sp], #4
 3522              	.LCFI156:
 3523              		.cfi_restore 7
 3524              		.cfi_def_cfa_offset 0
 3525 0012 7047     		bx	lr
 3526              		.cfi_endproc
 3527              	.LFE160:
 3529              		.section	.text.HAL_CAN_RxFifo0FullCallback,"ax",%progbits
 3530              		.align	1
 3531              		.weak	HAL_CAN_RxFifo0FullCallback
 3532              		.syntax unified
 3533              		.thumb
 3534              		.thumb_func
 3536              	HAL_CAN_RxFifo0FullCallback:
 3537              	.LFB161:
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 0 full callback.
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo0FullCallback(CAN_HandleTypeDef *hcan)
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3538              		.loc 1 2258 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 110


 3539              		.cfi_startproc
 3540              		@ args = 0, pretend = 0, frame = 8
 3541              		@ frame_needed = 1, uses_anonymous_args = 0
 3542              		@ link register save eliminated.
 3543 0000 80B4     		push	{r7}
 3544              	.LCFI157:
 3545              		.cfi_def_cfa_offset 4
 3546              		.cfi_offset 7, -4
 3547 0002 83B0     		sub	sp, sp, #12
 3548              	.LCFI158:
 3549              		.cfi_def_cfa_offset 16
 3550 0004 00AF     		add	r7, sp, #0
 3551              	.LCFI159:
 3552              		.cfi_def_cfa_register 7
 3553 0006 7860     		str	r0, [r7, #4]
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo0FullCallback could be implemented in the user
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             file
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3554              		.loc 1 2266 1
 3555 0008 00BF     		nop
 3556 000a 0C37     		adds	r7, r7, #12
 3557              	.LCFI160:
 3558              		.cfi_def_cfa_offset 4
 3559 000c BD46     		mov	sp, r7
 3560              	.LCFI161:
 3561              		.cfi_def_cfa_register 13
 3562              		@ sp needed
 3563 000e 5DF8047B 		ldr	r7, [sp], #4
 3564              	.LCFI162:
 3565              		.cfi_restore 7
 3566              		.cfi_def_cfa_offset 0
 3567 0012 7047     		bx	lr
 3568              		.cfi_endproc
 3569              	.LFE161:
 3571              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 3572              		.align	1
 3573              		.weak	HAL_CAN_RxFifo1MsgPendingCallback
 3574              		.syntax unified
 3575              		.thumb
 3576              		.thumb_func
 3578              	HAL_CAN_RxFifo1MsgPendingCallback:
 3579              	.LFB162:
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 1 message pending callback.
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3580              		.loc 1 2275 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 111


 3581              		.cfi_startproc
 3582              		@ args = 0, pretend = 0, frame = 8
 3583              		@ frame_needed = 1, uses_anonymous_args = 0
 3584              		@ link register save eliminated.
 3585 0000 80B4     		push	{r7}
 3586              	.LCFI163:
 3587              		.cfi_def_cfa_offset 4
 3588              		.cfi_offset 7, -4
 3589 0002 83B0     		sub	sp, sp, #12
 3590              	.LCFI164:
 3591              		.cfi_def_cfa_offset 16
 3592 0004 00AF     		add	r7, sp, #0
 3593              	.LCFI165:
 3594              		.cfi_def_cfa_register 7
 3595 0006 7860     		str	r0, [r7, #4]
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo1MsgPendingCallback could be implemented in the
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3596              		.loc 1 2283 1
 3597 0008 00BF     		nop
 3598 000a 0C37     		adds	r7, r7, #12
 3599              	.LCFI166:
 3600              		.cfi_def_cfa_offset 4
 3601 000c BD46     		mov	sp, r7
 3602              	.LCFI167:
 3603              		.cfi_def_cfa_register 13
 3604              		@ sp needed
 3605 000e 5DF8047B 		ldr	r7, [sp], #4
 3606              	.LCFI168:
 3607              		.cfi_restore 7
 3608              		.cfi_def_cfa_offset 0
 3609 0012 7047     		bx	lr
 3610              		.cfi_endproc
 3611              	.LFE162:
 3613              		.section	.text.HAL_CAN_RxFifo1FullCallback,"ax",%progbits
 3614              		.align	1
 3615              		.weak	HAL_CAN_RxFifo1FullCallback
 3616              		.syntax unified
 3617              		.thumb
 3618              		.thumb_func
 3620              	HAL_CAN_RxFifo1FullCallback:
 3621              	.LFB163:
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 1 full callback.
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo1FullCallback(CAN_HandleTypeDef *hcan)
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3622              		.loc 1 2292 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 112


 3623              		.cfi_startproc
 3624              		@ args = 0, pretend = 0, frame = 8
 3625              		@ frame_needed = 1, uses_anonymous_args = 0
 3626              		@ link register save eliminated.
 3627 0000 80B4     		push	{r7}
 3628              	.LCFI169:
 3629              		.cfi_def_cfa_offset 4
 3630              		.cfi_offset 7, -4
 3631 0002 83B0     		sub	sp, sp, #12
 3632              	.LCFI170:
 3633              		.cfi_def_cfa_offset 16
 3634 0004 00AF     		add	r7, sp, #0
 3635              	.LCFI171:
 3636              		.cfi_def_cfa_register 7
 3637 0006 7860     		str	r0, [r7, #4]
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo1FullCallback could be implemented in the user
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             file
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3638              		.loc 1 2300 1
 3639 0008 00BF     		nop
 3640 000a 0C37     		adds	r7, r7, #12
 3641              	.LCFI172:
 3642              		.cfi_def_cfa_offset 4
 3643 000c BD46     		mov	sp, r7
 3644              	.LCFI173:
 3645              		.cfi_def_cfa_register 13
 3646              		@ sp needed
 3647 000e 5DF8047B 		ldr	r7, [sp], #4
 3648              	.LCFI174:
 3649              		.cfi_restore 7
 3650              		.cfi_def_cfa_offset 0
 3651 0012 7047     		bx	lr
 3652              		.cfi_endproc
 3653              	.LFE163:
 3655              		.section	.text.HAL_CAN_SleepCallback,"ax",%progbits
 3656              		.align	1
 3657              		.weak	HAL_CAN_SleepCallback
 3658              		.syntax unified
 3659              		.thumb
 3660              		.thumb_func
 3662              	HAL_CAN_SleepCallback:
 3663              	.LFB164:
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Sleep callback.
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_SleepCallback(CAN_HandleTypeDef *hcan)
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3664              		.loc 1 2309 1
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 113


 3665              		.cfi_startproc
 3666              		@ args = 0, pretend = 0, frame = 8
 3667              		@ frame_needed = 1, uses_anonymous_args = 0
 3668              		@ link register save eliminated.
 3669 0000 80B4     		push	{r7}
 3670              	.LCFI175:
 3671              		.cfi_def_cfa_offset 4
 3672              		.cfi_offset 7, -4
 3673 0002 83B0     		sub	sp, sp, #12
 3674              	.LCFI176:
 3675              		.cfi_def_cfa_offset 16
 3676 0004 00AF     		add	r7, sp, #0
 3677              	.LCFI177:
 3678              		.cfi_def_cfa_register 7
 3679 0006 7860     		str	r0, [r7, #4]
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_SleepCallback could be implemented in the user file
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3680              		.loc 1 2316 1
 3681 0008 00BF     		nop
 3682 000a 0C37     		adds	r7, r7, #12
 3683              	.LCFI178:
 3684              		.cfi_def_cfa_offset 4
 3685 000c BD46     		mov	sp, r7
 3686              	.LCFI179:
 3687              		.cfi_def_cfa_register 13
 3688              		@ sp needed
 3689 000e 5DF8047B 		ldr	r7, [sp], #4
 3690              	.LCFI180:
 3691              		.cfi_restore 7
 3692              		.cfi_def_cfa_offset 0
 3693 0012 7047     		bx	lr
 3694              		.cfi_endproc
 3695              	.LFE164:
 3697              		.section	.text.HAL_CAN_WakeUpFromRxMsgCallback,"ax",%progbits
 3698              		.align	1
 3699              		.weak	HAL_CAN_WakeUpFromRxMsgCallback
 3700              		.syntax unified
 3701              		.thumb
 3702              		.thumb_func
 3704              	HAL_CAN_WakeUpFromRxMsgCallback:
 3705              	.LFB165:
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  WakeUp from Rx message callback.
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_WakeUpFromRxMsgCallback(CAN_HandleTypeDef *hcan)
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3706              		.loc 1 2325 1
 3707              		.cfi_startproc
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 114


 3708              		@ args = 0, pretend = 0, frame = 8
 3709              		@ frame_needed = 1, uses_anonymous_args = 0
 3710              		@ link register save eliminated.
 3711 0000 80B4     		push	{r7}
 3712              	.LCFI181:
 3713              		.cfi_def_cfa_offset 4
 3714              		.cfi_offset 7, -4
 3715 0002 83B0     		sub	sp, sp, #12
 3716              	.LCFI182:
 3717              		.cfi_def_cfa_offset 16
 3718 0004 00AF     		add	r7, sp, #0
 3719              	.LCFI183:
 3720              		.cfi_def_cfa_register 7
 3721 0006 7860     		str	r0, [r7, #4]
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_WakeUpFromRxMsgCallback could be implemented in the
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3722              		.loc 1 2333 1
 3723 0008 00BF     		nop
 3724 000a 0C37     		adds	r7, r7, #12
 3725              	.LCFI184:
 3726              		.cfi_def_cfa_offset 4
 3727 000c BD46     		mov	sp, r7
 3728              	.LCFI185:
 3729              		.cfi_def_cfa_register 13
 3730              		@ sp needed
 3731 000e 5DF8047B 		ldr	r7, [sp], #4
 3732              	.LCFI186:
 3733              		.cfi_restore 7
 3734              		.cfi_def_cfa_offset 0
 3735 0012 7047     		bx	lr
 3736              		.cfi_endproc
 3737              	.LFE165:
 3739              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 3740              		.align	1
 3741              		.weak	HAL_CAN_ErrorCallback
 3742              		.syntax unified
 3743              		.thumb
 3744              		.thumb_func
 3746              	HAL_CAN_ErrorCallback:
 3747              	.LFB166:
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Error CAN callback.
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3748              		.loc 1 2342 1
 3749              		.cfi_startproc
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 115


 3750              		@ args = 0, pretend = 0, frame = 8
 3751              		@ frame_needed = 1, uses_anonymous_args = 0
 3752              		@ link register save eliminated.
 3753 0000 80B4     		push	{r7}
 3754              	.LCFI187:
 3755              		.cfi_def_cfa_offset 4
 3756              		.cfi_offset 7, -4
 3757 0002 83B0     		sub	sp, sp, #12
 3758              	.LCFI188:
 3759              		.cfi_def_cfa_offset 16
 3760 0004 00AF     		add	r7, sp, #0
 3761              	.LCFI189:
 3762              		.cfi_def_cfa_register 7
 3763 0006 7860     		str	r0, [r7, #4]
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_ErrorCallback could be implemented in the user file
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3764              		.loc 1 2349 1
 3765 0008 00BF     		nop
 3766 000a 0C37     		adds	r7, r7, #12
 3767              	.LCFI190:
 3768              		.cfi_def_cfa_offset 4
 3769 000c BD46     		mov	sp, r7
 3770              	.LCFI191:
 3771              		.cfi_def_cfa_register 13
 3772              		@ sp needed
 3773 000e 5DF8047B 		ldr	r7, [sp], #4
 3774              	.LCFI192:
 3775              		.cfi_restore 7
 3776              		.cfi_def_cfa_offset 0
 3777 0012 7047     		bx	lr
 3778              		.cfi_endproc
 3779              	.LFE166:
 3781              		.section	.text.HAL_CAN_GetState,"ax",%progbits
 3782              		.align	1
 3783              		.global	HAL_CAN_GetState
 3784              		.syntax unified
 3785              		.thumb
 3786              		.thumb_func
 3788              	HAL_CAN_GetState:
 3789              	.LFB167:
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group6 Peripheral State and Error functions
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief   CAN Peripheral State functions
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             ##### Peripheral State and Error functions #####
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 116


2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     This subsection provides functions allowing to :
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetState()  : Return the CAN state.
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetError()  : Return the CAN error codes if any.
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ResetError(): Reset the CAN error codes if any.
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return the CAN state.
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL state
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_CAN_StateTypeDef HAL_CAN_GetState(const CAN_HandleTypeDef *hcan)
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3790              		.loc 1 2379 1
 3791              		.cfi_startproc
 3792              		@ args = 0, pretend = 0, frame = 16
 3793              		@ frame_needed = 1, uses_anonymous_args = 0
 3794              		@ link register save eliminated.
 3795 0000 80B4     		push	{r7}
 3796              	.LCFI193:
 3797              		.cfi_def_cfa_offset 4
 3798              		.cfi_offset 7, -4
 3799 0002 85B0     		sub	sp, sp, #20
 3800              	.LCFI194:
 3801              		.cfi_def_cfa_offset 24
 3802 0004 00AF     		add	r7, sp, #0
 3803              	.LCFI195:
 3804              		.cfi_def_cfa_register 7
 3805 0006 7860     		str	r0, [r7, #4]
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3806              		.loc 1 2380 24
 3807 0008 7B68     		ldr	r3, [r7, #4]
 3808 000a 93F82030 		ldrb	r3, [r3, #32]
 3809 000e FB73     		strb	r3, [r7, #15]
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 3810              		.loc 1 2382 6
 3811 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3812 0012 012B     		cmp	r3, #1
 3813 0014 02D0     		beq	.L174
 3814              		.loc 1 2382 38 discriminator 1
 3815 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3816 0018 022B     		cmp	r3, #2
 3817 001a 12D1     		bne	.L175
 3818              	.L174:
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check sleep mode acknowledge flag */
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 3819              		.loc 1 2386 14
 3820 001c 7B68     		ldr	r3, [r7, #4]
 3821 001e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 117


 3822              		.loc 1 2386 24
 3823 0020 5B68     		ldr	r3, [r3, #4]
 3824              		.loc 1 2386 30
 3825 0022 03F00203 		and	r3, r3, #2
 3826              		.loc 1 2386 8
 3827 0026 002B     		cmp	r3, #0
 3828 0028 02D0     		beq	.L176
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Sleep mode is active */
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_ACTIVE;
 3829              		.loc 1 2389 13
 3830 002a 0423     		movs	r3, #4
 3831 002c FB73     		strb	r3, [r7, #15]
 3832 002e 08E0     		b	.L175
 3833              	.L176:
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check sleep mode request flag */
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else if ((hcan->Instance->MCR & CAN_MCR_SLEEP) != 0U)
 3834              		.loc 1 2392 19
 3835 0030 7B68     		ldr	r3, [r7, #4]
 3836 0032 1B68     		ldr	r3, [r3]
 3837              		.loc 1 2392 29
 3838 0034 1B68     		ldr	r3, [r3]
 3839              		.loc 1 2392 35
 3840 0036 03F00203 		and	r3, r3, #2
 3841              		.loc 1 2392 13
 3842 003a 002B     		cmp	r3, #0
 3843 003c 01D0     		beq	.L175
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Sleep mode request is pending */
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_PENDING;
 3844              		.loc 1 2395 13
 3845 003e 0323     		movs	r3, #3
 3846 0040 FB73     		strb	r3, [r7, #15]
 3847              	.L175:
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Neither sleep mode request nor sleep mode acknowledge */
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return CAN state */
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return state;
 3848              		.loc 1 2404 10
 3849 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3850              		.loc 1 2405 1
 3851 0044 1846     		mov	r0, r3
 3852 0046 1437     		adds	r7, r7, #20
 3853              	.LCFI196:
 3854              		.cfi_def_cfa_offset 4
 3855 0048 BD46     		mov	sp, r7
 3856              	.LCFI197:
 3857              		.cfi_def_cfa_register 13
 3858              		@ sp needed
 3859 004a 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 118


 3860              	.LCFI198:
 3861              		.cfi_restore 7
 3862              		.cfi_def_cfa_offset 0
 3863 004e 7047     		bx	lr
 3864              		.cfi_endproc
 3865              	.LFE167:
 3867              		.section	.text.HAL_CAN_GetError,"ax",%progbits
 3868              		.align	1
 3869              		.global	HAL_CAN_GetError
 3870              		.syntax unified
 3871              		.thumb
 3872              		.thumb_func
 3874              	HAL_CAN_GetError:
 3875              	.LFB168:
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return the CAN error code.
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval CAN Error Code
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetError(const CAN_HandleTypeDef *hcan)
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3876              		.loc 1 2414 1
 3877              		.cfi_startproc
 3878              		@ args = 0, pretend = 0, frame = 8
 3879              		@ frame_needed = 1, uses_anonymous_args = 0
 3880              		@ link register save eliminated.
 3881 0000 80B4     		push	{r7}
 3882              	.LCFI199:
 3883              		.cfi_def_cfa_offset 4
 3884              		.cfi_offset 7, -4
 3885 0002 83B0     		sub	sp, sp, #12
 3886              	.LCFI200:
 3887              		.cfi_def_cfa_offset 16
 3888 0004 00AF     		add	r7, sp, #0
 3889              	.LCFI201:
 3890              		.cfi_def_cfa_register 7
 3891 0006 7860     		str	r0, [r7, #4]
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return CAN error code */
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return hcan->ErrorCode;
 3892              		.loc 1 2416 14
 3893 0008 7B68     		ldr	r3, [r7, #4]
 3894 000a 5B6A     		ldr	r3, [r3, #36]
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3895              		.loc 1 2417 1
 3896 000c 1846     		mov	r0, r3
 3897 000e 0C37     		adds	r7, r7, #12
 3898              	.LCFI202:
 3899              		.cfi_def_cfa_offset 4
 3900 0010 BD46     		mov	sp, r7
 3901              	.LCFI203:
 3902              		.cfi_def_cfa_register 13
 3903              		@ sp needed
 3904 0012 5DF8047B 		ldr	r7, [sp], #4
 3905              	.LCFI204:
 3906              		.cfi_restore 7
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 119


 3907              		.cfi_def_cfa_offset 0
 3908 0016 7047     		bx	lr
 3909              		.cfi_endproc
 3910              	.LFE168:
 3912              		.section	.text.HAL_CAN_ResetError,"ax",%progbits
 3913              		.align	1
 3914              		.global	HAL_CAN_ResetError
 3915              		.syntax unified
 3916              		.thumb
 3917              		.thumb_func
 3919              	HAL_CAN_ResetError:
 3920              	.LFB169:
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Reset the CAN error code.
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ResetError(CAN_HandleTypeDef *hcan)
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3921              		.loc 1 2426 1
 3922              		.cfi_startproc
 3923              		@ args = 0, pretend = 0, frame = 16
 3924              		@ frame_needed = 1, uses_anonymous_args = 0
 3925              		@ link register save eliminated.
 3926 0000 80B4     		push	{r7}
 3927              	.LCFI205:
 3928              		.cfi_def_cfa_offset 4
 3929              		.cfi_offset 7, -4
 3930 0002 85B0     		sub	sp, sp, #20
 3931              	.LCFI206:
 3932              		.cfi_def_cfa_offset 24
 3933 0004 00AF     		add	r7, sp, #0
 3934              	.LCFI207:
 3935              		.cfi_def_cfa_register 7
 3936 0006 7860     		str	r0, [r7, #4]
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 3937              		.loc 1 2427 21
 3938 0008 0023     		movs	r3, #0
 3939 000a FB73     		strb	r3, [r7, #15]
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3940              		.loc 1 2428 24
 3941 000c 7B68     		ldr	r3, [r7, #4]
 3942 000e 93F82030 		ldrb	r3, [r3, #32]
 3943 0012 BB73     		strb	r3, [r7, #14]
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 3944              		.loc 1 2430 6
 3945 0014 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3946 0016 012B     		cmp	r3, #1
 3947 0018 02D0     		beq	.L181
 3948              		.loc 1 2430 38 discriminator 1
 3949 001a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3950 001c 022B     		cmp	r3, #2
 3951 001e 03D1     		bne	.L182
 3952              	.L181:
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 120


2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Reset CAN error code */
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode = 0U;
 3953              		.loc 1 2434 21
 3954 0020 7B68     		ldr	r3, [r7, #4]
 3955 0022 0022     		movs	r2, #0
 3956 0024 5A62     		str	r2, [r3, #36]
 3957 0026 07E0     		b	.L183
 3958              	.L182:
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 3959              		.loc 1 2439 9
 3960 0028 7B68     		ldr	r3, [r7, #4]
 3961 002a 5B6A     		ldr	r3, [r3, #36]
 3962              		.loc 1 2439 21
 3963 002c 43F48022 		orr	r2, r3, #262144
 3964 0030 7B68     		ldr	r3, [r7, #4]
 3965 0032 5A62     		str	r2, [r3, #36]
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     status = HAL_ERROR;
 3966              		.loc 1 2441 12
 3967 0034 0123     		movs	r3, #1
 3968 0036 FB73     		strb	r3, [r7, #15]
 3969              	.L183:
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return the status */
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 3970              		.loc 1 2445 10
 3971 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3972              		.loc 1 2446 1
 3973 003a 1846     		mov	r0, r3
 3974 003c 1437     		adds	r7, r7, #20
 3975              	.LCFI208:
 3976              		.cfi_def_cfa_offset 4
 3977 003e BD46     		mov	sp, r7
 3978              	.LCFI209:
 3979              		.cfi_def_cfa_register 13
 3980              		@ sp needed
 3981 0040 5DF8047B 		ldr	r7, [sp], #4
 3982              	.LCFI210:
 3983              		.cfi_restore 7
 3984              		.cfi_def_cfa_offset 0
 3985 0044 7047     		bx	lr
 3986              		.cfi_endproc
 3987              	.LFE169:
 3989              		.text
 3990              	.Letext0:
 3991              		.file 3 "D:/enviroment/msys2/mingw64/arm-none-eabi/include/machine/_default_types.h"
 3992              		.file 4 "D:/enviroment/msys2/mingw64/arm-none-eabi/include/sys/_stdint.h"
 3993              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 3994              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 121


 3995              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3996              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 3997              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 122


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_can.c
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:21     .text.HAL_CAN_Init:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:27     .text.HAL_CAN_Init:00000000 HAL_CAN_Init
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:431    .text.HAL_CAN_MspInit:00000000 HAL_CAN_MspInit
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:354    .text.HAL_CAN_DeInit:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:360    .text.HAL_CAN_DeInit:00000000 HAL_CAN_DeInit
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:922    .text.HAL_CAN_Stop:00000000 HAL_CAN_Stop
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:473    .text.HAL_CAN_MspDeInit:00000000 HAL_CAN_MspDeInit
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:425    .text.HAL_CAN_MspInit:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:467    .text.HAL_CAN_MspDeInit:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:509    .text.HAL_CAN_ConfigFilter:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:515    .text.HAL_CAN_ConfigFilter:00000000 HAL_CAN_ConfigFilter
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:796    .text.HAL_CAN_ConfigFilter:000001b8 $d
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:801    .text.HAL_CAN_Start:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:807    .text.HAL_CAN_Start:00000000 HAL_CAN_Start
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:916    .text.HAL_CAN_Stop:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:1035   .text.HAL_CAN_RequestSleep:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:1041   .text.HAL_CAN_RequestSleep:00000000 HAL_CAN_RequestSleep
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:1112   .text.HAL_CAN_WakeUp:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:1118   .text.HAL_CAN_WakeUp:00000000 HAL_CAN_WakeUp
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:1223   .text.HAL_CAN_WakeUp:0000007c $d
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:1228   .text.HAL_CAN_IsSleepActive:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:1234   .text.HAL_CAN_IsSleepActive:00000000 HAL_CAN_IsSleepActive
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:1302   .text.HAL_CAN_AddTxMessage:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:1308   .text.HAL_CAN_AddTxMessage:00000000 HAL_CAN_AddTxMessage
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:1582   .text.HAL_CAN_AbortTxRequest:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:1588   .text.HAL_CAN_AbortTxRequest:00000000 HAL_CAN_AbortTxRequest
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:1697   .text.HAL_CAN_GetTxMailboxesFreeLevel:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:1703   .text.HAL_CAN_GetTxMailboxesFreeLevel:00000000 HAL_CAN_GetTxMailboxesFreeLevel
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:1802   .text.HAL_CAN_IsTxMessagePending:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:1808   .text.HAL_CAN_IsTxMessagePending:00000000 HAL_CAN_IsTxMessagePending
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:1883   .text.HAL_CAN_GetTxTimestamp:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:1889   .text.HAL_CAN_GetTxTimestamp:00000000 HAL_CAN_GetTxTimestamp
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:1999   .text.HAL_CAN_GetRxMessage:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:2005   .text.HAL_CAN_GetRxMessage:00000000 HAL_CAN_GetRxMessage
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:2414   .text.HAL_CAN_GetRxFifoFillLevel:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:2420   .text.HAL_CAN_GetRxFifoFillLevel:00000000 HAL_CAN_GetRxFifoFillLevel
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:2498   .text.HAL_CAN_ActivateNotification:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:2504   .text.HAL_CAN_ActivateNotification:00000000 HAL_CAN_ActivateNotification
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:2577   .text.HAL_CAN_DeactivateNotification:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:2583   .text.HAL_CAN_DeactivateNotification:00000000 HAL_CAN_DeactivateNotification
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:2657   .text.HAL_CAN_IRQHandler:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:2663   .text.HAL_CAN_IRQHandler:00000000 HAL_CAN_IRQHandler
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3242   .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 HAL_CAN_TxMailbox0CompleteCallback
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3368   .text.HAL_CAN_TxMailbox0AbortCallback:00000000 HAL_CAN_TxMailbox0AbortCallback
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3284   .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 HAL_CAN_TxMailbox1CompleteCallback
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3410   .text.HAL_CAN_TxMailbox1AbortCallback:00000000 HAL_CAN_TxMailbox1AbortCallback
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3326   .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 HAL_CAN_TxMailbox2CompleteCallback
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3452   .text.HAL_CAN_TxMailbox2AbortCallback:00000000 HAL_CAN_TxMailbox2AbortCallback
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3536   .text.HAL_CAN_RxFifo0FullCallback:00000000 HAL_CAN_RxFifo0FullCallback
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3494   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3620   .text.HAL_CAN_RxFifo1FullCallback:00000000 HAL_CAN_RxFifo1FullCallback
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3578   .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 HAL_CAN_RxFifo1MsgPendingCallback
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3662   .text.HAL_CAN_SleepCallback:00000000 HAL_CAN_SleepCallback
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3704   .text.HAL_CAN_WakeUpFromRxMsgCallback:00000000 HAL_CAN_WakeUpFromRxMsgCallback
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3746   .text.HAL_CAN_ErrorCallback:00000000 HAL_CAN_ErrorCallback
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 123


C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3236   .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3278   .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3320   .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3362   .text.HAL_CAN_TxMailbox0AbortCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3404   .text.HAL_CAN_TxMailbox1AbortCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3446   .text.HAL_CAN_TxMailbox2AbortCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3488   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3530   .text.HAL_CAN_RxFifo0FullCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3572   .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3614   .text.HAL_CAN_RxFifo1FullCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3656   .text.HAL_CAN_SleepCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3698   .text.HAL_CAN_WakeUpFromRxMsgCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3740   .text.HAL_CAN_ErrorCallback:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3782   .text.HAL_CAN_GetState:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3788   .text.HAL_CAN_GetState:00000000 HAL_CAN_GetState
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3868   .text.HAL_CAN_GetError:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3874   .text.HAL_CAN_GetError:00000000 HAL_CAN_GetError
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3913   .text.HAL_CAN_ResetError:00000000 $t
C:\Users\30514\AppData\Local\Temp\ccVfI7na.s:3919   .text.HAL_CAN_ResetError:00000000 HAL_CAN_ResetError
                           .group:00000000 wm4.0.3e68c699c40fadf7e6c1e499de837233
                           .group:00000000 wm4.stm32f4xx_hal_conf.h.25.a9a6e27d8b41172b5af7d7631d763ee0
                           .group:00000000 wm4.stm32f4xx.h.38.63e3ea23bd63a94457417730025259b6
                           .group:00000000 wm4.stm32f446xx.h.34.dd43cebd7192f96bce7a5ff975201274
                           .group:00000000 wm4._newlib_version.h.4.0eb654b64686e2bd29646258853f6c22
                           .group:00000000 wm4.features.h.33.d554620bb17bd3b714c3fb5c268772bc
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_version.h.32.0ac195c83bb4537824e6ad1c47474b79
                           .group:00000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:00000000 wm4.cmsis_gcc.h.26.498d0ad17a45fc9ef20fdc01caf02259
                           .group:00000000 wm4.core_cm4.h.174.62be9b4588d49bed18171771001331df
                           .group:00000000 wm4.mpu_armv7.h.32.83326921a797fa9d6f70449916b4b839
                           .group:00000000 wm4.stm32f446xx.h.917.13927c85cbbf4787955bc4173c54fa12
                           .group:00000000 wm4.stm32f4xx.h.195.a4b8bf80f37cc96981498656ffe5f588
                           .group:00000000 wm4.stm32_hal_legacy.h.22.8b7d303dc46a0b7ac6d3edf19ce2608d
                           .group:00000000 wm4.stddef.h.39.0dc9006b34572d4d9cae4c8b422c4971
                           .group:00000000 wm4.stm32f4xx_hal_def.h.58.3cb484e92e5ccf2e55312a4714e27917
                           .group:00000000 wm4.stm32f4xx_hal_rcc_ex.h.20.9b6e314009d4800dd71c0ec1c264a1ea
                           .group:00000000 wm4.stm32f4xx_hal_rcc.h.106.0887cf5d985ae88e345b0aed0ceb4729
                           .group:00000000 wm4.stm32f4xx_hal_gpio.h.21.22da6a14b6049d6ac156577be74df1d7
                           .group:00000000 wm4.stm32f4xx_hal_gpio_ex.h.21.33ea7ea24fd170b1d3dce3d23330c9d3
                           .group:00000000 wm4.stm32f4xx_hal_gpio.h.254.d7e07832f748fe8bcb575db0b8373592
                           .group:00000000 wm4.stm32f4xx_hal_exti.h.21.4fc7f37c3cc97fb821b368ede79414b6
                           .group:00000000 wm4.stm32f4xx_hal_dma.h.21.8e4b1421c914345c23be719e5e528779
                           .group:00000000 wm4.stm32f4xx_hal_dma.h.720.ac2d7eef74792e4026acc4d2923c5da4
                           .group:00000000 wm4.stm32f4xx_hal_cortex.h.20.03673e4f79386680bf73ba399c19306b
                           .group:00000000 wm4.stm32f4xx_hal_can.h.21.4b16c8dedf31ba328482231f811a7e65
                           .group:00000000 wm4.stm32f4xx_hal_flash.h.20.2f1e0d1b7010b3a81a7980aaf712e7e5
                           .group:00000000 wm4.stm32f4xx_hal_flash_ex.h.20.77cb3e5c0f1e426426a4cbc884a1eed8
                           .group:00000000 wm4.stm32f4xx_hal_flash.h.361.23bc19b9eac79b0956d913651841ede8
                           .group:00000000 wm4.stm32f4xx_hal_pwr.h.20.1905a0783a9c83adefd7df0c4b501e40
                           .group:00000000 wm4.stm32f4xx_hal_pwr_ex.h.20.9786dbd699c850465fa7b77273740267
                           .group:00000000 wm4.stm32f4xx_hal_pwr.h.338.debc0a4a62ba54688e63ab53dd99c4ea
                           .group:00000000 wm4.stm32f4xx_hal_uart.h.21.ba8e24dd05c77faac3f3d48472e636ba
                           .group:00000000 wm4.stm32f4xx_hal.h.71.02372bc31d47d29d3f67fbfe1429649e
ARM GAS  C:\Users\30514\AppData\Local\Temp\ccVfI7na.s 			page 124



UNDEFINED SYMBOLS
HAL_GetTick
