ARM GAS  C:\Users\30514\AppData\Local\Temp\cc8z2aRJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"kinematic_solver.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Module/kinematic/kinematic_solver.c"
  20              		.section	.rodata
  21              		.align	2
  22              	.LC0:
  23 0000 1E3691BF 		.word	-1081002466
  24 0004 C2B8B2BF 		.word	-1078806334
  25 0008 00       		.byte	0
  26 0009 000000   		.space	3
  27              		.section	.text.IK_Solve,"ax",%progbits
  28              		.align	1
  29              		.global	IK_Solve
  30              		.syntax unified
  31              		.thumb
  32              		.thumb_func
  34              	IK_Solve:
  35              	.LFB0:
   1:Module/kinematic/kinematic_solver.c **** #include "kinematic_solver.h"
   2:Module/kinematic/kinematic_solver.c **** #include <math.h>
   3:Module/kinematic/kinematic_solver.c **** #include <stdbool.h>
   4:Module/kinematic/kinematic_solver.c **** 
   5:Module/kinematic/kinematic_solver.c **** // 确保定义π常量
   6:Module/kinematic/kinematic_solver.c **** #ifndef M_PI
   7:Module/kinematic/kinematic_solver.c **** #define M_PI 3.14159265358979323846f
   8:Module/kinematic/kinematic_solver.c **** #endif
   9:Module/kinematic/kinematic_solver.c **** #define PI M_PI
  10:Module/kinematic/kinematic_solver.c **** 
  11:Module/kinematic/kinematic_solver.c **** // 定义π常量
  12:Module/kinematic/kinematic_solver.c **** #define DEG_TO_RAD(x) ((x) * PI / 180.0f)
  13:Module/kinematic/kinematic_solver.c **** #define RAD_TO_DEG(x) ((x) * 180.0f / PI)
  14:Module/kinematic/kinematic_solver.c **** 
  15:Module/kinematic/kinematic_solver.c **** // 逆运动学求解函数
  16:Module/kinematic/kinematic_solver.c **** JointAngles IK_Solve(point2D target, float L1, float L2, const JointLimits* limits) 
  17:Module/kinematic/kinematic_solver.c **** {
  36              		.loc 1 17 1
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 104
  39              		@ frame_needed = 1, uses_anonymous_args = 0
  40 0000 90B5     		push	{r4, r7, lr}
  41              	.LCFI0:
ARM GAS  C:\Users\30514\AppData\Local\Temp\cc8z2aRJ.s 			page 2


  42              		.cfi_def_cfa_offset 12
  43              		.cfi_offset 4, -12
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 9BB0     		sub	sp, sp, #108
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 120
  49 0004 00AF     		add	r7, sp, #0
  50              	.LCFI2:
  51              		.cfi_def_cfa_register 7
  52 0006 7861     		str	r0, [r7, #20]
  53 0008 B0EE407A 		vmov.f32	s14, s0
  54 000c F0EE607A 		vmov.f32	s15, s1
  55 0010 87ED021A 		vstr.32	s2, [r7, #8]
  56 0014 C7ED011A 		vstr.32	s3, [r7, #4]
  57 0018 3960     		str	r1, [r7]
  58 001a 87ED037A 		vstr.32	s14, [r7, #12]
  59 001e C7ED047A 		vstr.32	s15, [r7, #16]
  18:Module/kinematic/kinematic_solver.c ****     JointAngles result = {.theta1 = -65.0f/180.0f*M_PI, .theta2 = -80.0f/180.0f*M_PI, .valid = fals
  60              		.loc 1 18 17
  61 0022 A44A     		ldr	r2, .L33
  62 0024 07F11C03 		add	r3, r7, #28
  63 0028 07CA     		ldm	r2, {r0, r1, r2}
  64 002a 83E80700 		stm	r3, {r0, r1, r2}
  19:Module/kinematic/kinematic_solver.c ****     
  20:Module/kinematic/kinematic_solver.c ****     // 检查有效输入
  21:Module/kinematic/kinematic_solver.c ****     if (L1 <= 0.001f || L2 <= 0.001f) {
  65              		.loc 1 21 8
  66 002e D7ED027A 		vldr.32	s15, [r7, #8]
  67 0032 9FEDA17A 		vldr.32	s14, .L33+4
  68 0036 F4EEC77A 		vcmpe.f32	s15, s14
  69 003a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  70 003e 08D9     		bls	.L2
  71              		.loc 1 21 22 discriminator 1
  72 0040 D7ED017A 		vldr.32	s15, [r7, #4]
  73 0044 9FED9C7A 		vldr.32	s14, .L33+4
  74 0048 F4EEC77A 		vcmpe.f32	s15, s14
  75 004c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
  76 0050 08D8     		bhi	.L30
  77              	.L2:
  22:Module/kinematic/kinematic_solver.c ****         return result; // 无效连杆长度
  78              		.loc 1 22 16
  79 0052 7B69     		ldr	r3, [r7, #20]
  80 0054 1C46     		mov	r4, r3
  81 0056 07F11C03 		add	r3, r7, #28
  82 005a 93E80700 		ldm	r3, {r0, r1, r2}
  83 005e 84E80700 		stm	r4, {r0, r1, r2}
  84 0062 23E1     		b	.L22
  85              	.L30:
  23:Module/kinematic/kinematic_solver.c ****     }
  24:Module/kinematic/kinematic_solver.c ****     
  25:Module/kinematic/kinematic_solver.c ****     float x = target.x;
  86              		.loc 1 25 11
  87 0064 FB68     		ldr	r3, [r7, #12]	@ float
  88 0066 3B66     		str	r3, [r7, #96]	@ float
  26:Module/kinematic/kinematic_solver.c ****     float y = target.y;
  89              		.loc 1 26 11
ARM GAS  C:\Users\30514\AppData\Local\Temp\cc8z2aRJ.s 			page 3


  90 0068 3B69     		ldr	r3, [r7, #16]	@ float
  91 006a FB65     		str	r3, [r7, #92]	@ float
  27:Module/kinematic/kinematic_solver.c ****     
  28:Module/kinematic/kinematic_solver.c ****     // 计算目标到原点的距离
  29:Module/kinematic/kinematic_solver.c ****     float R;
  30:Module/kinematic/kinematic_solver.c ****     R = sqrtf(x*x + y*y);
  92              		.loc 1 30 16
  93 006c D7ED187A 		vldr.32	s15, [r7, #96]
  94 0070 27EEA77A 		vmul.f32	s14, s15, s15
  95              		.loc 1 30 22
  96 0074 D7ED177A 		vldr.32	s15, [r7, #92]
  97 0078 67EEA77A 		vmul.f32	s15, s15, s15
  98              		.loc 1 30 9
  99 007c 77EE277A 		vadd.f32	s15, s14, s15
 100 0080 B0EE670A 		vmov.f32	s0, s15
 101 0084 FFF7FEFF 		bl	sqrtf
 102 0088 87ED160A 		vstr.32	s0, [r7, #88]
  31:Module/kinematic/kinematic_solver.c ****     
  32:Module/kinematic/kinematic_solver.c ****     // 检查工作空间边界
  33:Module/kinematic/kinematic_solver.c ****     float minR = fabsf(L1 - L2);
 103              		.loc 1 33 27
 104 008c 97ED027A 		vldr.32	s14, [r7, #8]
 105 0090 D7ED017A 		vldr.32	s15, [r7, #4]
 106 0094 77EE677A 		vsub.f32	s15, s14, s15
 107              		.loc 1 33 11
 108 0098 F0EEE77A 		vabs.f32	s15, s15
 109 009c C7ED157A 		vstr.32	s15, [r7, #84]
  34:Module/kinematic/kinematic_solver.c ****     float maxR = L1 + L2;
 110              		.loc 1 34 11
 111 00a0 97ED027A 		vldr.32	s14, [r7, #8]
 112 00a4 D7ED017A 		vldr.32	s15, [r7, #4]
 113 00a8 77EE277A 		vadd.f32	s15, s14, s15
 114 00ac C7ED147A 		vstr.32	s15, [r7, #80]
  35:Module/kinematic/kinematic_solver.c ****     
  36:Module/kinematic/kinematic_solver.c ****     if (R < minR - 0.001f || R > maxR + 0.001f) {
 115              		.loc 1 36 18
 116 00b0 D7ED157A 		vldr.32	s15, [r7, #84]
 117 00b4 9FED807A 		vldr.32	s14, .L33+4
 118 00b8 77EEC77A 		vsub.f32	s15, s15, s14
 119              		.loc 1 36 8
 120 00bc 97ED167A 		vldr.32	s14, [r7, #88]
 121 00c0 B4EEE77A 		vcmpe.f32	s14, s15
 122 00c4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 123 00c8 0CD4     		bmi	.L6
 124              		.loc 1 36 39 discriminator 1
 125 00ca D7ED147A 		vldr.32	s15, [r7, #80]
 126 00ce 9FED7A7A 		vldr.32	s14, .L33+4
 127 00d2 77EE877A 		vadd.f32	s15, s15, s14
 128              		.loc 1 36 27 discriminator 1
 129 00d6 97ED167A 		vldr.32	s14, [r7, #88]
 130 00da B4EEE77A 		vcmpe.f32	s14, s15
 131 00de F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 132 00e2 08DD     		ble	.L31
 133              	.L6:
  37:Module/kinematic/kinematic_solver.c ****         return result; // 超出工作空间
 134              		.loc 1 37 16
 135 00e4 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\30514\AppData\Local\Temp\cc8z2aRJ.s 			page 4


 136 00e6 1C46     		mov	r4, r3
 137 00e8 07F11C03 		add	r3, r7, #28
 138 00ec 93E80700 		ldm	r3, {r0, r1, r2}
 139 00f0 84E80700 		stm	r4, {r0, r1, r2}
 140 00f4 DAE0     		b	.L22
 141              	.L31:
  38:Module/kinematic/kinematic_solver.c ****     }
  39:Module/kinematic/kinematic_solver.c ****     
  40:Module/kinematic/kinematic_solver.c ****     // 计算基础方向角度
  41:Module/kinematic/kinematic_solver.c ****     float alpha = atan2f(y, x);
 142              		.loc 1 41 19
 143 00f6 D7ED180A 		vldr.32	s1, [r7, #96]
 144 00fa 97ED170A 		vldr.32	s0, [r7, #92]
 145 00fe FFF7FEFF 		bl	atan2f
 146 0102 87ED130A 		vstr.32	s0, [r7, #76]
  42:Module/kinematic/kinematic_solver.c ****     
  43:Module/kinematic/kinematic_solver.c ****     // 使用余弦定律计算中间变量
  44:Module/kinematic/kinematic_solver.c ****     float cos_beta = (L1 * L1 + R * R - L2 * L2) / (2.0f * L1 * R);
 147              		.loc 1 44 26
 148 0106 D7ED027A 		vldr.32	s15, [r7, #8]
 149 010a 27EEA77A 		vmul.f32	s14, s15, s15
 150              		.loc 1 44 35
 151 010e D7ED167A 		vldr.32	s15, [r7, #88]
 152 0112 67EEA77A 		vmul.f32	s15, s15, s15
 153              		.loc 1 44 31
 154 0116 37EE277A 		vadd.f32	s14, s14, s15
 155              		.loc 1 44 44
 156 011a D7ED017A 		vldr.32	s15, [r7, #4]
 157 011e 67EEA77A 		vmul.f32	s15, s15, s15
 158              		.loc 1 44 39
 159 0122 77EE676A 		vsub.f32	s13, s14, s15
 160              		.loc 1 44 58
 161 0126 D7ED027A 		vldr.32	s15, [r7, #8]
 162 012a 37EEA77A 		vadd.f32	s14, s15, s15
 163              		.loc 1 44 63
 164 012e D7ED167A 		vldr.32	s15, [r7, #88]
 165 0132 27EE277A 		vmul.f32	s14, s14, s15
 166              		.loc 1 44 11
 167 0136 C6EE877A 		vdiv.f32	s15, s13, s14
 168 013a C7ED197A 		vstr.32	s15, [r7, #100]
  45:Module/kinematic/kinematic_solver.c ****     
  46:Module/kinematic/kinematic_solver.c ****     // 数值稳定性处理
  47:Module/kinematic/kinematic_solver.c ****     if (cos_beta > 1.0f) cos_beta = 1.0f;
 169              		.loc 1 47 8
 170 013e D7ED197A 		vldr.32	s15, [r7, #100]
 171 0142 B7EE007A 		vmov.f32	s14, #1.0e+0
 172 0146 F4EEC77A 		vcmpe.f32	s15, s14
 173 014a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 174 014e 02DD     		ble	.L9
 175              		.loc 1 47 35 discriminator 1
 176 0150 4FF07E53 		mov	r3, #1065353216
 177 0154 7B66     		str	r3, [r7, #100]	@ float
 178              	.L9:
  48:Module/kinematic/kinematic_solver.c ****     if (cos_beta < -1.0f) cos_beta = -1.0f;
 179              		.loc 1 48 8
 180 0156 D7ED197A 		vldr.32	s15, [r7, #100]
 181 015a BFEE007A 		vmov.f32	s14, #-1.0e+0
ARM GAS  C:\Users\30514\AppData\Local\Temp\cc8z2aRJ.s 			page 5


 182 015e F4EEC77A 		vcmpe.f32	s15, s14
 183 0162 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 184 0166 01D5     		bpl	.L11
 185              		.loc 1 48 36 discriminator 1
 186 0168 544B     		ldr	r3, .L33+8
 187 016a 7B66     		str	r3, [r7, #100]	@ float
 188              	.L11:
  49:Module/kinematic/kinematic_solver.c ****     
  50:Module/kinematic/kinematic_solver.c ****     // 计算beta角度
  51:Module/kinematic/kinematic_solver.c ****     float beta = acosf(cos_beta);
 189              		.loc 1 51 18
 190 016c 97ED190A 		vldr.32	s0, [r7, #100]
 191 0170 FFF7FEFF 		bl	acosf
 192 0174 87ED120A 		vstr.32	s0, [r7, #72]
  52:Module/kinematic/kinematic_solver.c ****     
  53:Module/kinematic/kinematic_solver.c ****     // 计算θ₁
  54:Module/kinematic/kinematic_solver.c ****     float theta1 = alpha + beta;
 193              		.loc 1 54 11
 194 0178 97ED137A 		vldr.32	s14, [r7, #76]
 195 017c D7ED127A 		vldr.32	s15, [r7, #72]
 196 0180 77EE277A 		vadd.f32	s15, s14, s15
 197 0184 C7ED117A 		vstr.32	s15, [r7, #68]
  55:Module/kinematic/kinematic_solver.c ****     
  56:Module/kinematic/kinematic_solver.c ****     // 使用CMSIS-DSP优化三角函数计算
  57:Module/kinematic/kinematic_solver.c ****     float sin_theta1 = sinf(theta1);
 198              		.loc 1 57 24
 199 0188 97ED110A 		vldr.32	s0, [r7, #68]
 200 018c FFF7FEFF 		bl	sinf
 201 0190 87ED100A 		vstr.32	s0, [r7, #64]
  58:Module/kinematic/kinematic_solver.c ****     float cos_theta1 = cosf(theta1);
 202              		.loc 1 58 24
 203 0194 97ED110A 		vldr.32	s0, [r7, #68]
 204 0198 FFF7FEFF 		bl	cosf
 205 019c 87ED0F0A 		vstr.32	s0, [r7, #60]
  59:Module/kinematic/kinematic_solver.c ****     
  60:Module/kinematic/kinematic_solver.c ****     // 根据新方程计算sinθ2和cosθ2
  61:Module/kinematic/kinematic_solver.c ****     float sin_theta2 = (L1 * sin_theta1 - x) / L2;
 206              		.loc 1 61 28
 207 01a0 97ED027A 		vldr.32	s14, [r7, #8]
 208 01a4 D7ED107A 		vldr.32	s15, [r7, #64]
 209 01a8 27EE277A 		vmul.f32	s14, s14, s15
 210              		.loc 1 61 41
 211 01ac D7ED187A 		vldr.32	s15, [r7, #96]
 212 01b0 77EE676A 		vsub.f32	s13, s14, s15
 213              		.loc 1 61 11
 214 01b4 97ED017A 		vldr.32	s14, [r7, #4]
 215 01b8 C6EE877A 		vdiv.f32	s15, s13, s14
 216 01bc C7ED0E7A 		vstr.32	s15, [r7, #56]
  62:Module/kinematic/kinematic_solver.c ****     float cos_theta2 = (L1 * cos_theta1 + y) / L2;
 217              		.loc 1 62 28
 218 01c0 97ED027A 		vldr.32	s14, [r7, #8]
 219 01c4 D7ED0F7A 		vldr.32	s15, [r7, #60]
 220 01c8 27EE277A 		vmul.f32	s14, s14, s15
 221              		.loc 1 62 41
 222 01cc D7ED177A 		vldr.32	s15, [r7, #92]
 223 01d0 77EE276A 		vadd.f32	s13, s14, s15
 224              		.loc 1 62 11
ARM GAS  C:\Users\30514\AppData\Local\Temp\cc8z2aRJ.s 			page 6


 225 01d4 97ED017A 		vldr.32	s14, [r7, #4]
 226 01d8 C6EE877A 		vdiv.f32	s15, s13, s14
 227 01dc C7ED0D7A 		vstr.32	s15, [r7, #52]
  63:Module/kinematic/kinematic_solver.c ****     
  64:Module/kinematic/kinematic_solver.c ****     // 计算θ2
  65:Module/kinematic/kinematic_solver.c ****     float theta2 = atan2f(sin_theta2, cos_theta2);
 228              		.loc 1 65 20
 229 01e0 D7ED0D0A 		vldr.32	s1, [r7, #52]
 230 01e4 97ED0E0A 		vldr.32	s0, [r7, #56]
 231 01e8 FFF7FEFF 		bl	atan2f
 232 01ec 87ED0C0A 		vstr.32	s0, [r7, #48]
  66:Module/kinematic/kinematic_solver.c ****     
  67:Module/kinematic/kinematic_solver.c ****     // 验证θ₁>θ₂约束（使用容差）
  68:Module/kinematic/kinematic_solver.c ****     const float angle_tolerance = 0.001f;
 233              		.loc 1 68 17
 234 01f0 334B     		ldr	r3, .L33+12
 235 01f2 FB62     		str	r3, [r7, #44]	@ float
  69:Module/kinematic/kinematic_solver.c ****     if (theta1 < theta2 - angle_tolerance) {
 236              		.loc 1 69 25
 237 01f4 97ED0C7A 		vldr.32	s14, [r7, #48]
 238 01f8 D7ED0B7A 		vldr.32	s15, [r7, #44]
 239 01fc 77EE677A 		vsub.f32	s15, s14, s15
 240              		.loc 1 69 8
 241 0200 97ED117A 		vldr.32	s14, [r7, #68]
 242 0204 B4EEE77A 		vcmpe.f32	s14, s15
 243 0208 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 244 020c 08D5     		bpl	.L32
  70:Module/kinematic/kinematic_solver.c ****         return result; // 违反约束
 245              		.loc 1 70 16
 246 020e 7B69     		ldr	r3, [r7, #20]
 247 0210 1C46     		mov	r4, r3
 248 0212 07F11C03 		add	r3, r7, #28
 249 0216 93E80700 		ldm	r3, {r0, r1, r2}
 250 021a 84E80700 		stm	r4, {r0, r1, r2}
 251 021e 45E0     		b	.L22
 252              	.L32:
  71:Module/kinematic/kinematic_solver.c ****     }
  72:Module/kinematic/kinematic_solver.c ****     
  73:Module/kinematic/kinematic_solver.c ****     // 检查是否在限位范围内
  74:Module/kinematic/kinematic_solver.c ****     bool valid = (theta1 >= limits->min_theta1 && theta1 <= limits->max_theta1) &&
 253              		.loc 1 74 35
 254 0220 3B68     		ldr	r3, [r7]
 255 0222 D3ED007A 		vldr.32	s15, [r3]
 256              		.loc 1 74 81
 257 0226 97ED117A 		vldr.32	s14, [r7, #68]
 258 022a B4EEE77A 		vcmpe.f32	s14, s15
 259 022e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 260 0232 1FDB     		blt	.L15
 261              		.loc 1 74 67 discriminator 1
 262 0234 3B68     		ldr	r3, [r7]
 263 0236 D3ED017A 		vldr.32	s15, [r3, #4]
 264              		.loc 1 74 48 discriminator 1
 265 023a 97ED117A 		vldr.32	s14, [r7, #68]
 266 023e B4EEE77A 		vcmpe.f32	s14, s15
 267 0242 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 268 0246 15D8     		bhi	.L15
  75:Module/kinematic/kinematic_solver.c ****                  (theta2 >= limits->min_theta2 && theta2 <= limits->max_theta2);
ARM GAS  C:\Users\30514\AppData\Local\Temp\cc8z2aRJ.s 			page 7


 269              		.loc 1 75 35
 270 0248 3B68     		ldr	r3, [r7]
 271 024a D3ED027A 		vldr.32	s15, [r3, #8]
  74:Module/kinematic/kinematic_solver.c ****                  (theta2 >= limits->min_theta2 && theta2 <= limits->max_theta2);
 272              		.loc 1 74 81 discriminator 3
 273 024e 97ED0C7A 		vldr.32	s14, [r7, #48]
 274 0252 B4EEE77A 		vcmpe.f32	s14, s15
 275 0256 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 276 025a 0BDB     		blt	.L15
 277              		.loc 1 75 67
 278 025c 3B68     		ldr	r3, [r7]
 279 025e D3ED037A 		vldr.32	s15, [r3, #12]
 280              		.loc 1 75 48
 281 0262 97ED0C7A 		vldr.32	s14, [r7, #48]
 282 0266 B4EEE77A 		vcmpe.f32	s14, s15
 283 026a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 284 026e 01D8     		bhi	.L15
  74:Module/kinematic/kinematic_solver.c ****                  (theta2 >= limits->min_theta2 && theta2 <= limits->max_theta2);
 285              		.loc 1 74 81
 286 0270 0123     		movs	r3, #1
 287 0272 00E0     		b	.L20
 288              	.L15:
  74:Module/kinematic/kinematic_solver.c ****                  (theta2 >= limits->min_theta2 && theta2 <= limits->max_theta2);
 289              		.loc 1 74 81 is_stmt 0 discriminator 5
 290 0274 0023     		movs	r3, #0
 291              	.L20:
  74:Module/kinematic/kinematic_solver.c ****                  (theta2 >= limits->min_theta2 && theta2 <= limits->max_theta2);
 292              		.loc 1 74 10 is_stmt 1 discriminator 7
 293 0276 87F82B30 		strb	r3, [r7, #43]
 294 027a 97F82B30 		ldrb	r3, [r7, #43]
 295 027e 03F00103 		and	r3, r3, #1
 296 0282 87F82B30 		strb	r3, [r7, #43]
  76:Module/kinematic/kinematic_solver.c ****     
  77:Module/kinematic/kinematic_solver.c ****     if (valid) {
 297              		.loc 1 77 8
 298 0286 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 299 028a 002B     		cmp	r3, #0
 300 028c 06D0     		beq	.L21
  78:Module/kinematic/kinematic_solver.c ****         result.theta1 = theta1;
 301              		.loc 1 78 23
 302 028e 7B6C     		ldr	r3, [r7, #68]	@ float
 303 0290 FB61     		str	r3, [r7, #28]	@ float
  79:Module/kinematic/kinematic_solver.c ****         result.theta2 = theta2;
 304              		.loc 1 79 23
 305 0292 3B6B     		ldr	r3, [r7, #48]	@ float
 306 0294 3B62     		str	r3, [r7, #32]	@ float
  80:Module/kinematic/kinematic_solver.c ****         result.valid = true;
 307              		.loc 1 80 22
 308 0296 0123     		movs	r3, #1
 309 0298 87F82430 		strb	r3, [r7, #36]
 310              	.L21:
  81:Module/kinematic/kinematic_solver.c ****     }
  82:Module/kinematic/kinematic_solver.c ****     
  83:Module/kinematic/kinematic_solver.c ****     return result;
 311              		.loc 1 83 12
 312 029c 7B69     		ldr	r3, [r7, #20]
 313 029e 1C46     		mov	r4, r3
ARM GAS  C:\Users\30514\AppData\Local\Temp\cc8z2aRJ.s 			page 8


 314 02a0 07F11C03 		add	r3, r7, #28
 315 02a4 93E80700 		ldm	r3, {r0, r1, r2}
 316 02a8 84E80700 		stm	r4, {r0, r1, r2}
 317              	.L22:
  84:Module/kinematic/kinematic_solver.c **** }...
 318              		.loc 1 84 1
 319 02ac 7869     		ldr	r0, [r7, #20]
 320 02ae 6C37     		adds	r7, r7, #108
 321              	.LCFI3:
 322              		.cfi_def_cfa_offset 12
 323 02b0 BD46     		mov	sp, r7
 324              	.LCFI4:
 325              		.cfi_def_cfa_register 13
 326              		@ sp needed
 327 02b2 90BD     		pop	{r4, r7, pc}
 328              	.L34:
 329              		.align	2
 330              	.L33:
 331 02b4 00000000 		.word	.LC0
 332 02b8 6F12833A 		.word	981668463
 333 02bc 000080BF 		.word	-1082130432
 334 02c0 6F12833A 		.word	981668463
 335              		.cfi_endproc
 336              	.LFE0:
 338              		.text
 339              	.Letext0:
 340              		.file 2 "Module/kinematic/kinematic_solver.h"
 341              		.file 3 "D:/enviroment/msys2/mingw64/arm-none-eabi/include/math.h"
ARM GAS  C:\Users\30514\AppData\Local\Temp\cc8z2aRJ.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 kinematic_solver.c
C:\Users\30514\AppData\Local\Temp\cc8z2aRJ.s:21     .rodata:00000000 $d
C:\Users\30514\AppData\Local\Temp\cc8z2aRJ.s:28     .text.IK_Solve:00000000 $t
C:\Users\30514\AppData\Local\Temp\cc8z2aRJ.s:34     .text.IK_Solve:00000000 IK_Solve
C:\Users\30514\AppData\Local\Temp\cc8z2aRJ.s:331    .text.IK_Solve:000002b4 $d
                           .group:00000000 wm4.0.3e68c699c40fadf7e6c1e499de837233
                           .group:00000000 wm4.stdbool.h.29.c08aa3eec75cf5b9b5003883f43253f0
                           .group:00000000 wm4._newlib_version.h.4.0eb654b64686e2bd29646258853f6c22
                           .group:00000000 wm4.newlib.h.27.a82728f74da661df333d09507bfef510
                           .group:00000000 wm4.ieeefp.h.77.61a77db5804869b1dadd307a77cf78c9
                           .group:00000000 wm4.features.h.22.4b93ad64e0d80833c46a20ecae380bb0
                           .group:00000000 wm4.config.h.224.10ee1ad185d877c6e334e6581faab44d
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.0dc9006b34572d4d9cae4c8b422c4971
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4.cdefs.h.49.70fc7af612f78ddcace70fdd90b5623b
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.158.6f8e08a347b1cff664332fa350bfceb3
                           .group:00000000 wm4._types.h.127.3bdfe3ff8ea2d0985b03d9cbe93480e3
                           .group:00000000 wm4.reent.h.18.25503cdc8b7e55dd0d6ea7b3e5af7a03
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.78.6b87466b04591b1f1cb88c14fdf2ba9e
                           .group:00000000 wm4.math.h.13.47cfc34cae8a1153323939c4d32cf7c2

UNDEFINED SYMBOLS
sqrtf
atan2f
acosf
sinf
cosf
